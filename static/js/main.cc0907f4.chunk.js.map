{"version":3,"sources":["pathfinderComponents/node.jsx","pathfinderComponents/grid.jsx","pathfinderComponents/simpleSelect.jsx","pathfinderComponents/navbar.jsx","pathfinderComponents/menu.jsx","algorithms/recursiveMaze.js","algorithms/bfs.jsx","pathfinderComponents/pathfinder.jsx","algorithms/randomMaze.js","algorithms/dijkstra.js","homeComponents/greet.jsx","homeComponents/navbar.jsx","homeComponents/typewriter.jsx","homeComponents/images/graph.jpg","homeComponents/card.jsx","homeComponents/card2.jsx","homeComponents/images/primes.png","homeComponents/sort.jpeg","homeComponents/sorting.jpeg","homeComponents/images/binaryTree.jpg","homeComponents/images/Recursion.jpg","homeComponents/cards.jsx","homeComponents/cardDetails.js","homeComponents/footer.jsx","homeComponents/home.jsx","primeComponents/cell.jsx","primeComponents/cells.jsx","primeComponents/navbar.jsx","primeComponents/slider.jsx","primeComponents/simpleSelect.jsx","primeComponents/menu.jsx","algorithms/prime.js","primeComponents/spiral.jsx","primeComponents/seive.jsx","sortComponents/rect.jsx","sortComponents/rects.jsx","algorithms/sortingAlgorithms.js","algorithms/quickSort.js","sortComponents/navbar.jsx","sortComponents/slider.jsx","sortComponents/simpleSelect.jsx","sortComponents/airBnbSlider.jsx","sortComponents/doubleSlider.jsx","sortComponents/formControlLabel.jsx","sortComponents/menu.jsx","sortComponents/SortName1.jsx","sortComponents/sort.js","binarySearchComponent/entryPoint.jsx","binarySearchComponent/doubleSlider.jsx","binarySearchComponent/guess.jsx","binarySearchComponent/result.jsx","binarySearchComponent/search.jsx","binarySearchComponent/navbar.jsx","binarySearchComponent/menu.jsx","binarySearchComponent/rect.jsx","binarySearchComponent/rects.jsx","binarySearchComponent/binarySearch.jsx","recursiveSortComponents/rect.jsx","recursiveSortComponents/simpleSelect.jsx","recursiveSortComponents/slider.jsx","recursiveSortComponents/airBnbSlider.jsx","recursiveSortComponents/doubleSlider.jsx","recursiveSortComponents/menu.jsx","recursiveSortComponents/rects.jsx","recursiveSortComponents/SortName.jsx","algorithms/mergeSort.js","algorithms/heapSort.js","algorithms/quickSortRecursive.js","recursiveSortComponents/navbar.jsx","recursiveSortComponents/recursiveSort.js","Graph/vertex.jsx","Graph/edge.jsx","Graph/canvasSVG.jsx","Graph/Tree.js","Graph/fib.jsx","Graph/simpleSelect.jsx","Graph/menu.jsx","Graph/navbar.jsx","Graph/details.jsx","Graph/graph.jsx","App.js","reportWebVitals.js","index.js"],"names":["Node","static","row","props","col","this","onMouseDown","isVisited","onMouseEnter","onMouseUp","id","className","getClassName","node","isWall","isStartNode","isEndNode","ispathNode","Component","Grid","state","grid","map","rowidx","nodeidx","visitedNode","useStyles","makeStyles","theme","formControl","margin","spacing","minWidth","selectEmpty","marginTop","SimpleSelect","classes","React","useState","age","setAge","FormControl","InputLabel","Select","labelId","value","onChange","event","target","onAlgoChanged","items","item","itemidx","MenuItem","Navbar","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","to","style","color","Menu","algorithms","onMazeChanged","mazes","onClick","onVisualize","onClearPath","onClearBoard","decideMaze","pairs","board","startRow","endRow","startCol","endCol","mid","Math","floor","random","start","end","i","push","xx","yy","recursiveMazeVertical","recursiveMazeHorizontal","bfsdfs","startNode","endNode","algo","list","nodesInOrder","length","currentNode","shift","pop","nodesToPush","getNeighbours","previousNode","neighbors","filter","neighbor","Pathfinder","handleMouseDown","newGrid","getNewGridWithWallToggled","setState","mouseIsPressed","handleMouseEnter","handleMouseUp","handleAlgoChanged","val","handleMazeChanged","maze","handleCreateMaze","newBoard","slice","j","randomMaze","getMaze","setTimeout","document","getElementById","handleClearBoard","clearBoard","handleClearPath","clearPath","handleClick","visualizeDijkstra","width","window","innerWidth","height","innerHeight","max","getInitialGrid","onCreateMaze","textAlign","visitedNodesInOrder","finishNode","nodesInShortestPathOrder","unshift","getNodesInShortestPathOrder","animateDijkstra","sleep","animateShortestPath","toggleVisit","newNode","distance","Infinity","totRow","totCol","currentRow","createNode","ms","Promise","resolve","Greet","TypeWriterC","card","maxWidth","minHeight","borderRadius","boxShadow","media","actionArea","padding","transition","transform","expand","marginLeft","transitions","create","duration","shortest","expandOpen","ImgMediaCard2","expanded","setExpanded","CardActionArea","m","Card","route","CardMedia","component","alt","title","src","img","CardHeader","backgroundColor","action","IconButton","clsx","Collapse","in","timeout","unmountOnExit","CardContent","Typography","description","Cards","cards","getData","e","console","log","sort","sorting","primes","binSearch","graph","Fragment","toLowerCase","includes","Footer","class","Home","Cell","getClass","cell","isVisiting","isChecking","isPrime","Cells","cells","cellidx","root","valuetext","DiscreteSlider","gutterBottom","Slider","defaultValue","default","getAriaValueText","aria-labelledby","valueLabelDisplay","onChangeCommitted","innerText","num","parseInt","step","marks","min","isDisabled","pos","selected","isClickable","cursor","onRefresh","disabled","setAlgo","onChangeSpeed","onChangeValues","seive","n","vis","Array","fill","p","q","Spiral","Maxwidth","MaxHeight","maxPrime","radius","viewBox","xmlns","cx","cos","cy","sin","r","stroke","stroke-width","Seive","number","isRunning","speed","changeSpeed","handleValueIncease","getCells","handleRefresh","startAlgo","startSeive","startSpiral","a","pprimes","mod","ceil","prime","changedCells","prevCheck","getNewCellPrimeToggled","getNewCellVisitingToggled","getNewCellCheckToggled","newCells","newCell","rows","createCell","Rect","checkColor","rect","isSorted","isSorting","background","marg","Rects","rects","rectidx","kk","selectionSort","arr","prevRect","min_idx","changed","recti","rectj","bubbleSort","insertionSort","key","values","quickSort","rects2","sz","quick","left","right","partition","pivot","it","rect1","rect2","getPartition","onCountChange","disable","withStyles","thumb","border","marginRight","active","track","rail","opacity","RangeSlider","SwitchLabels","checkedA","FormGroup","FormControlLabel","control","Switch","checked","name","onDoubleChange","label","onRandomize","onSpeedChange","onViusalize","SortName1","sorts","Sort","count","doubles","isRunning1","isRunning2","algo1","algo2","handleRandomize","getInitialRects","handleDouble","handleCountChange","handleSpeedChanged","handleSort","steps1","steps2","handleFirst","handleSecond","steps","tot","getRect","EntryPoint","error","setUpper","validateNumbers","TextField","variant","upper","startGame","CSlider","lower","setValue","useEffect","newValue","Guess","getMid","justifyContent","Result","keyval","onRestart","Search","yesButton","noButton","phase","res","isMid","isFound","isNotFound","checkBorder","isRange","BinarySearch","temp","handleStartGame","search1","handleRestart","handleSetUpper","up","y","x","onSearch","handleSearch","isLeft","isRight","SortName","mergeSort","mergeS","l","n1","n2","L","R","k","merge","HeapSort","heapify","sorted","heapSort","largest","quickSortRecursive","swap","changedRange","RecursiveSort","handleName","render","handleHeap","handleQuick","handleMerge","hasChanged","ii","Vertex","beginElement","current","attributeName","px","dur","repeatCount","py","font","textAnchor","dy","ret","Edge","getPolyPoints","x1","y1","x2","y2","sqrt","getPolyPointsX","getPolyPointsY","prevProps","refX","refY","markerWidth","markerHeight","orient","d","strokeWidth","marker-end","CanvasSvg","increamentXY","vertices","off","offset","edges","edge","vertex","Tree","children","DrawTree","tree","parent","undefined","depth","thread","lbrother","get_lmost_sibling","_lmost_sibling","newTree","ancestor","change","buchheim","dt","firstwalk","second_walk","third_walk","v","default_ancestor","w","apportion","execute_shifts","midpoint","vir","vor","vil","vol","sir","sor","sol","sil","move_subtree","wl","wr","subtrees","fib","NcR","derangement","bigmod","stirling2","onValueChanged","setN","setR","onReset","onStart","Details","Switcherr","Graph","addNumber","getTree","recur","verticess","App","basename","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.cc0907f4.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport './node.css'\nclass Node extends Component {\n    static = {\n        row: this.props.row,\n        col: this.props.col\n    }\n    render() {\n        const { row,col,isVisited, onMouseDown, onMouseEnter,onMouseUp } = this.props;\n        return (\n            <div\n                id = {`node-${this.props.row}-${this.props.col}`}\n                className={this.getClassName()}\n                onMouseDown={() => onMouseDown(row,col)}\n                onMouseEnter={() => onMouseEnter(row,col)}\n                onMouseUp={() => onMouseUp(row,col)}\n            />\n        );\n    }\n    getClassName(){\n        if(this.props.node.isWall === true){\n            return \"node node-wall\";\n        } else if( this.props.node.isStartNode === true ){\n            return \"node  node-start\";\n        } else if( this.props.node.isEndNode === true ){\n            return \"node  node-end\";\n        } else if(this.props.node.ispathNode){\n            return 'node node-shortest-path';\n        }else if( this.props.node.isVisited === true ){\n            return \"node  node-visited\";\n        } else{\n            return \"node\";\n        }\n    }\n}\n\nexport default Node;","import React, {Component} from 'react';\nimport Node from \"./node\";\nimport './grid.css';\nclass Grid extends Component {\n    state = {\n        grid: this.props.grid\n    }\n\n    render() {\n        return (\n            <div className=\"Grid\">\n                {this.props.grid.map((row, rowidx) => {\n                    return (\n                        <div key={rowidx}>\n                            {row.map((node, nodeidx) => {\n                                const {row, col, isWall, visitedNode, } = node;\n                                return (\n                                    <Node\n                                        key={nodeidx}\n                                        row={row}\n                                        col={col}\n                                        node={node}\n                                        isWall={isWall}\n                                        visitedNode={ visitedNode }\n                                        onMouseDown = {this.props.onMouseDown}\n                                        onMouseEnter = {this.props.onMouseEnter}\n                                        onMouseUp = {this.props.onMouseUp}\n                                    />\n                                );\n                            })}\n                        </div>\n                    );\n                })}\n            </div>\n        );\n    }\n}\n\nexport default Grid;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n\nconst useStyles = makeStyles((theme) => ({\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 120,\n    },\n    selectEmpty: {\n        marginTop: theme.spacing(2),\n    },\n}));\n\nconst SimpleSelect = (props) => {\n    const classes = useStyles();\n    const [age, setAge] = React.useState('0');\n\n    const handleChange = (event) => {\n        setAge(event.target.value);\n        props.onAlgoChanged(event.target.value);\n    };\n\n    return (\n        <div>\n            <FormControl className={classes.formControl}>\n                <InputLabel id=\"demo-simple-select-label\">Algorithm</InputLabel>\n                <Select\n                    labelId=\"demo-simple-select-label\"\n                    id=\"demo-simple-select\"\n                    value={age}\n                    onChange={handleChange}\n                >\n                    {props.items.map( (item,itemidx)=>{\n                        return(\n                            <MenuItem\n                                key={itemidx}\n                                value={itemidx}>{item}</MenuItem>\n                        );\n                    } )}\n                </Select>\n            </FormControl>\n        </div>\n    );\n}\n\nexport default SimpleSelect;","import React, {Component} from 'react';\nimport SimpleSelect from \"./simpleSelect\";\nimport {Link} from \"react-router-dom\";\n\nclass Navbar extends Component {\n    render() {\n        return (\n            <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n                <span className=\"navbar-brand\">Pathfinder</span>\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\"\n                        data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\"\n                        aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                    <span className=\"navbar-toggler-icon\"></span>\n                </button>\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\" >\n                    <Link to={\"/\"}>\n                        <span style={{color:\"white\"}}>\n                            Home\n                        </span>\n                    </Link>\n                </div>\n\n            </nav>\n        );\n    }\n}\n\nexport default Navbar;","import React, {Component} from 'react';\nimport SimpleSelect from \"./simpleSelect\";\n\nclass Menu extends Component {\n    render() {\n        return (\n            <nav className=\"nav alert-dark\" >\n                <SimpleSelect\n                    onAlgoChanged = {this.props.onAlgoChanged}\n                    items={this.props.algorithms}\n                />\n                <SimpleSelect\n                    onAlgoChanged={this.props.onMazeChanged}\n                    items={this.props.mazes}\n                />\n                {/* <button\n                    className='btn btn-success btn-secondary m-2'\n                    onClick={this.props.onCreateMaze}>\n                    Create Maze\n                </button> */}\n                <button\n                    onClick={this.props.onVisualize}\n                    className=\"btn btn-primary  m-2\"\n                >Visualize</button>\n                <button\n                    onClick={this.props.onClearPath}\n                    className='btn btn-danger btn-secondary m-2'>Clear Path</button>\n                <button\n                    onClick={this.props.onClearBoard}\n                    className='btn btn-lg btn-secondary m-2'>Clear Board</button>\n            </nav>\n        );\n    }\n}\n\nexport default Menu;","export function getMaze(board,row,col){\n    const pairs = [];\n    let newBoard = board.slice();\n    for( let i = 0;i <col;i++){\n        newBoard[0][i].isWall = true;\n        pairs.push({\n            xx:0,\n            yy:i\n        });\n    }\n    for( let i = 0;i <row;i++){\n        newBoard[i][col-1].isWall = true;\n        pairs.push({\n            xx:i,\n            yy:col-1\n        });\n    }\n    for( let i = col-1;i>=0;i-- ){\n        newBoard[row-1][i].isWall = true;\n        pairs.push({\n            xx:row-1,\n            yy:i\n        });\n    }\n    for(let i = row-1;i>=0;i--){\n        newBoard[i][0].isWall = true;\n        pairs.push({\n            xx:i,\n            yy:0\n        });\n    }\n    decideMaze(pairs,newBoard,1,row-2,1,col-2);\n    //console.log(\"here\");\n    return pairs;\n}\nlet val = 0;\n\nfunction decideMaze(pairs,board,startRow,endRow,startCol,endCol) {\n    //console.log(\"count\");\n    val++;\n\n    if( ((endRow-startRow) <=1) && ((endCol - startCol) <=1) ){\n        return;\n    }\n\n     if( (endCol - startCol) > (endRow - startRow) ){\n        recursiveMazeVertical(pairs,board,startRow,endRow,startCol,endCol);\n    } else{\n        recursiveMazeHorizontal(pairs,board,startRow,endRow,startCol,endCol);\n    }\n}\nfunction recursiveMazeVertical(pairs,board,startRow,endRow,startCol,endCol){\n    let mid = Math.floor((endCol+startCol)/2);\n    let random = Math.floor(Math.random() * (endRow-startRow+1)) + startRow;\n    //console.log( \"row \",random,\" \",startRow,\" \",endRow );\n    let start = startRow;\n    if( !board[startRow-1][mid].isWall ){\n        random = start;\n        start++;\n    }\n    let end = endRow;\n    if( !board[endRow+1][mid].isWall ){\n        random = end;\n        end--;\n    }\n    for(let i = start;i<=end;i++){\n        if( i!==random ){\n            board[i][mid].isWall = true;\n            pairs.push({\n                xx:i,\n                yy:mid\n            });\n        }\n    }\n    decideMaze(pairs,board,startRow,endRow,startCol,mid-1);\n    decideMaze(pairs,board,startRow,endRow,mid+1,endCol);\n}\nfunction recursiveMazeHorizontal(pairs,board,startRow,endRow,startCol,endCol){\n    let mid = Math.floor((endRow+startRow)/2);\n  //  console.log(\"mid: \",mid);\n    let random = Math.floor(Math.random() * (endCol-startCol+1)) + startCol;\n    let start = startCol;\n    if( !board[mid][startCol-1].isWall ){\n        random = start;\n        start++;\n    }\n    let end = endCol;\n    if( !board[mid][endCol+1].isWall ){\n        random = end;\n        end--;\n    }\n    for(let i = start;i<=end;i++){\n        if( i!==random ){\n            board[mid][i].isWall = true;\n            pairs.push({\n                xx:mid,\n                yy:i\n            });\n        }\n    }\n    decideMaze(pairs,board,startRow,mid-1,startCol,endCol);\n    decideMaze(pairs,board,mid+1,endRow,startCol,endCol);\n\n}","export function bfsdfs(grid,startNode,endNode,algo){\n    var list = [];\n    const nodesInOrder = [];\n    nodesInOrder.push(startNode);\n    list.push(startNode);\n    startNode.isVisited = true;\n    while(!!list.length){\n        const currentNode = (algo === \"bfs\" ? list.shift():list.pop());\n        nodesInOrder.push(currentNode);\n        if( currentNode === endNode ) return nodesInOrder;\n        if( algo === \"dfs\" ) currentNode.isVisited = true;\n        const nodesToPush = getNeighbours(grid,currentNode);\n        for( const node of nodesToPush ){\n            if(algo === \"bfs\"){\n                node.isVisited = true;\n            }\n            node.previousNode = currentNode;\n            list.push(node);\n\n        }\n    }\n    return nodesInOrder;\n}\n\nfunction getNeighbours(grid,node){\n    const neighbors = [];\n    const {col, row} = node;\n   // console.log(node);\n\n    if (col > 0) neighbors.push(grid[row][col - 1]);\n    if (row > 0) neighbors.push(grid[row - 1][col]);\n    if (row < grid.length - 1) neighbors.push(grid[row + 1][col]);\n    if (col < grid[0].length - 1) neighbors.push(grid[row][col + 1]);\n    return neighbors.filter(neighbor => (!neighbor.isVisited && !neighbor.isWall ));\n}","import React, {Component, Fragment} from 'react';\nimport Grid from \"./grid\";\nimport Navbar from \"./navbar\";\nimport Menu from \"./menu\";\nimport {dijkstra,getNodesInShortestPathOrder} from \"../algorithms/dijkstra\";\nimport {getMaze} from \"../algorithms/recursiveMaze\";\nimport {bfsdfs} from \"../algorithms/bfs\";\nimport {randomMaze} from \"../algorithms/randomMaze\";\n\nclass Pathfinder extends Component {\n    constructor() {\n        super();\n        this.state = {\n            grid:[],\n            mouseIsPressed:false,\n            algorithms:[\n                \"BFS\",\"DFS\"\n            ],\n            algo:0,\n           mazes:[ \"Recursive\"],\n            maze:0\n        }\n    }\n    componentDidMount() {\n        const width = window.innerWidth;\n        const height = window.innerHeight;\n        const row = Math.max(Math.floor(height/25)-7,10);\n        const col = Math.floor(width/25);\n        const startNode = {\n            row:4,\n            col:4\n        };\n        const endNode = {\n            row: row-5,\n            col: col-5\n        }\n        // console.log( endNode.row );\n        const grid = getInitialGrid(row,col);\n        grid[startNode.row][startNode.col].isStartNode = true;\n        grid[row-5][col-5].isEndNode = true;\n        this.setState({grid,row,col,startNode,endNode});\n    }\n\n    render() {\n        return (\n            <Fragment>\n                <Navbar/>\n\n                <Menu\n                    onAlgoChanged = {this.handleAlgoChanged}\n                    onVisualize = {this.handleClick}\n                    algorithms={this.state.algorithms}\n                    mazes={this.state.mazes}\n                    onMazeChanged={this.handleMazeChanged}\n                    onCreateMaze={this.handleCreateMaze}\n                    onClearBoard={this.handleClearBoard}\n                    onClearPath={this.handleClearPath}\n                />\n                <span style={{margin: 2}}/>\n                <div style={{textAlign:\"center\"}} >\n                    <Grid\n                        grid={this.state.grid}\n                        onMouseDown={this.handleMouseDown}\n                        onMouseEnter={this.handleMouseEnter}\n                        onMouseUp={this.handleMouseUp}\n                    />\n                </div>\n            </Fragment>\n        );\n    }\n\n    handleMouseDown = (row, col) => {\n        if((this.state.startNode.row!==row || this.state.startNode.col!==col) && (this.state.endNode.row!==row || this.state.endNode.col!==col) ){\n            const newGrid = getNewGridWithWallToggled(this.state.grid, row, col);\n            this.setState({grid:newGrid});\n        }\n        this.setState({mouseIsPressed: true});\n    }\n\n    handleMouseEnter = (row, col) => {\n        if (this.state.mouseIsPressed === false) return;\n        if((this.state.startNode.row!==row || this.state.startNode.col!==col) && (this.state.endNode.row!==row || this.state.endNode.col!==col) ){\n            const newGrid = getNewGridWithWallToggled(this.state.grid, row, col);\n            this.setState({grid:newGrid});\n        }\n    }\n\n    handleMouseUp = (row,col) => {\n        this.setState({mouseIsPressed: false});\n    }\n\n    handleAlgoChanged = (val) =>{\n        this.setState({algo:val});\n    }\n\n    handleMazeChanged = (val)=>{\n        this.setState({maze:val});\n    }\n\n    handleCreateMaze = () =>{\n        let pairs;\n        switch (this.state.maze){\n            case 1:\n                pairs= randomMaze(this.state.grid,this.state.row,this.state.col);\n                break;\n            default:\n                pairs= getMaze(this.state.grid,this.state.row,this.state.col);\n        }\n        const {startNode,endNode} = this.state;\n        for( let i = 0;i<pairs.length;i++ ){\n            setTimeout(()=>{\n                if( i === pairs.length-1 ){\n                   // this.setState({grid:this.state.grid});\n                    const grid = this.state.grid;\n                    grid[ startNode.row ][startNode.col]={...grid[ startNode.row ][startNode.col],isWall: false};\n                    grid[endNode.row][endNode.col]={...grid[endNode.row][endNode.col],isWall: false};\n                    this.setState({grid});\n                }\n                if((pairs[i].xx!==startNode.row || pairs[i].yy!==startNode.col) && (pairs[i].xx!==endNode.row || pairs[i].yy!==endNode.col) ){\n                    document.getElementById(`node-${pairs[i].xx}-${pairs[i].yy}`).className = \"node node-wall\";\n                }\n            },i*20);\n        }\n    }\n    handleClearBoard = ()=>{\n        const {grid,row,col} = this.state;\n        this.setState({grid:clearBoard(grid,row,col)});\n    }\n    handleClearPath = () =>{\n        const {grid,row,col} = this.state;\n        this.setState({grid:clearPath(grid,row,col)});\n    }\n    handleClick = () =>{\n      /*  for(let i = 0;i<20;i++){\n            for(let j = 0; j<50;j++){\n                document.getElementById(`node-${i}-${j}`).className = \"node\";\n            }\n        }*/\n        this.visualizeDijkstra();\n        /*for(let i = 0;i<this.state.row;i++){\n            for(let j = 0; j<this.state.col;j++){\n                setTimeout(()=>{\n                    const newGrid = toggleVisit(this.state.grid,i,j);\n                    this.setState({grid:newGrid});\n                    //document.getElementById(`node-${i}-${j}`).className = \"node node-visited\";\n                },100*(i+j)+j);\n            }\n        }*/\n    }\n\n    visualizeDijkstra() {\n        const {grid} = this.state;\n        const startNode = grid[this.state.startNode.row][this.state.startNode.col];\n        const finishNode = grid[this.state.endNode.row][this.state.endNode.col];\n        let visitedNodesInOrder;\n        switch (this.state.algo){\n            // case 0:\n            //     visitedNodesInOrder = dijkstra(grid, startNode, finishNode);\n            //     break;\n            case 0:\n                visitedNodesInOrder = bfsdfs(grid, startNode, finishNode,\"bfs\");\n                break;\n            default:\n                visitedNodesInOrder = bfsdfs(grid, startNode, finishNode,\"dfs\");\n        }\n        const nodesInShortestPathOrder = getNodesInShortestPathOrder(finishNode);\n        this.animateDijkstra(visitedNodesInOrder, nodesInShortestPathOrder);\n    }\n    async animateDijkstra(visitedNodesInOrder, nodesInShortestPathOrder) {\n        for (let i = 0; i <= visitedNodesInOrder.length; i++) {\n\n            if (i === visitedNodesInOrder.length) {\n              //  setTimeout(() => {\n                    await sleep(100);\n                    await this.animateShortestPath(nodesInShortestPathOrder);\n\n              //  }, 10 * (i+10));\n                return;\n            }\n           // setTimeout(() => {\n                const node = visitedNodesInOrder[i];\n                const newGrid = toggleVisit(this.state.grid,node.row,node.col);\n                //this.setState({grid:newGrid});\n                document.getElementById(`node-${node.row}-${node.col}`).className =\n                    'node node-visited';\n                await sleep(10);\n           // }, 10 * i);\n        }\n    }\n\n    async animateShortestPath(nodesInShortestPathOrder) {\n        const grid = this.state.grid;\n        const newGrid = grid.slice();\n        for (let i = 0; i < nodesInShortestPathOrder.length; i++) {\n         //   setTimeout(() => {\n\n                const node = nodesInShortestPathOrder[i];\n                const newNode = {...newGrid[node.row][node.col],ispathNode:true};\n                newGrid[node.row][node.col] = newNode;\n                if( i === nodesInShortestPathOrder.length-1 ){\n                    this.setState({grid:newGrid});\n                }\n                document.getElementById(`node-${node.row}-${node.col}`).className =\n                    'node node-shortest-path';\n                await sleep(50);\n            //}, 50 * i);\n        }\n    }\n\n}\n\nconst clearPath = (grid,row,col)=>{\n    const newGrid = grid.slice();\n    for(let i = 0;i < row ; i++){\n        for( let j = 0;j < col; j++){\n            const node = newGrid[i][j];\n            const newNode = {\n                ...node,\n                distance:Infinity,\n                visitedNode: false,\n                isVisited:false,\n                ispathNode:false,\n                previousNode:null\n\n            };\n            newGrid[i][j] = newNode;\n        }\n    }\n    return newGrid;\n}\nconst clearBoard = (grid,row,col)=>{\n    const newGrid = grid.slice();\n    for(let i = 0;i < row ; i++){\n        for( let j = 0;j < col; j++){\n            const node = newGrid[i][j];\n            const newNode = {\n                ...node,\n                isWall: false,\n                distance:Infinity,\n                visitedNode: false,\n                isVisited:false,\n                ispathNode:false,\n                previousNode:null\n\n            };\n            newGrid[i][j] = newNode;\n        }\n    }\n    return newGrid;\n}\n\nconst toggleVisit = (grid,row,col) =>{\n    const newGrid = grid.slice();\n    const node = newGrid[row][col];\n    const newNode = {\n        ...node,\n        visitedNode: !node.visitedNode\n    };\n    newGrid[row][col] = newNode;\n    return newGrid;\n}\nconst getNewGridWithWallToggled = (grid, row, col) => {\n    const newGrid = grid.slice();\n    const node = newGrid[row][col];\n    const newNode = {\n        ...node,\n        isWall: true//!node.isWall,\n    };\n    newGrid[row][col] = newNode;\n    return newGrid;\n};\nconst getInitialGrid = (totRow,totCol) => {\n    const grid = [];\n    for (let row = 0; row < totRow; row++) {\n        const currentRow = [];\n        for (let col = 0; col < totCol; col++) {\n            currentRow.push(createNode(row,col));\n        }\n        grid.push(currentRow);\n    }\n    return grid;\n}\n\nconst createNode = (row,col)=>{\n    return {\n        row,\n        col,\n        isWall: false,\n        isStartNode:false,\n        isEndNode:false,\n        distance:Infinity,\n        visitedNode: false,\n        isVisited:false,\n        ispathNode:false,\n        previousNode:null\n    };\n}\nfunction sleep(ms) {\n    return new Promise(resolve => setTimeout(resolve, ms));\n}\n\nexport default Pathfinder;","export function randomMaze(board,row,col){\n    let newBoard = board.slice();\n    const pairs = [];\n    for(let i = 0;i<row;i++){\n        for( let j = 0;j <col;j++){\n            const random = Math.floor(Math.random()*100)+10;\n            if( random%4 === 0 ){\n                newBoard[i][j].isWall = true;\n                pairs.push({\n                    xx:i,\n                    yy:j\n                });\n            }\n        }\n    }\n    return pairs;\n}","// Performs Dijkstra's algorithm; returns *all* nodes in the order\n// in which they were visited. Also makes nodes point back to their\n// previous node, effectively allowing us to compute the shortest path\n// by backtracking from the finish node.\nexport function dijkstra(grid, startNode, finishNode) {\n  const visitedNodesInOrder = [];\n  startNode.distance = 0;\n  const unvisitedNodes = getAllNodes(grid);\n  while (!!unvisitedNodes.length) {\n    sortNodesByDistance(unvisitedNodes);\n    const closestNode = unvisitedNodes.shift();\n    // If we encounter a wall, we skip it.\n    if (closestNode.isWall) continue;\n    // If the closest node is at a distance of infinity,\n    // we must be trapped and should therefore stop.\n    if (closestNode.distance === Infinity) return visitedNodesInOrder;\n    closestNode.isVisited = true;\n    visitedNodesInOrder.push(closestNode);\n    if (closestNode === finishNode) return visitedNodesInOrder;\n    updateUnvisitedNeighbors(closestNode, grid);\n  }\n}\n\nfunction sortNodesByDistance(unvisitedNodes) {\n  unvisitedNodes.sort((nodeA, nodeB) => nodeA.distance - nodeB.distance);\n}\n\nfunction updateUnvisitedNeighbors(node, grid) {\n  const unvisitedNeighbors = getUnvisitedNeighbors(node, grid);\n  for (const neighbor of unvisitedNeighbors) {\n    neighbor.distance = node.distance + 1;\n    neighbor.previousNode = node;\n  }\n}\n\nfunction getUnvisitedNeighbors(node, grid) {\n  const neighbors = [];\n  const {col, row} = node;\n  if (row > 0) neighbors.push(grid[row - 1][col]);\n  if (row < grid.length - 1) neighbors.push(grid[row + 1][col]);\n  if (col > 0) neighbors.push(grid[row][col - 1]);\n  if (col < grid[0].length - 1) neighbors.push(grid[row][col + 1]);\n  return neighbors.filter(neighbor => !neighbor.isVisited);\n}\n\nfunction getAllNodes(grid) {\n  const nodes = [];\n  for (const row of grid) {\n    for (const node of row) {\n      nodes.push(node);\n    }\n  }\n  return nodes;\n}\n\n// Backtracks from the finishNode to find the shortest path.\n// Only works when called *after* the dijkstra method above.\nexport function getNodesInShortestPathOrder(finishNode) {\n  const nodesInShortestPathOrder = [];\n  let currentNode = finishNode;\n  while (currentNode !== null) {\n    nodesInShortestPathOrder.unshift(currentNode);\n    currentNode = currentNode.previousNode;\n  }\n  return nodesInShortestPathOrder;\n}\n","import React, {Component} from 'react';\nimport \"./style.css\"\nclass Greet extends Component {\n    render() {\n        return (\n            <div className=\"greet\">\n                <h1 className=\"display-3\">\n                    ALGOVIZ\n                </h1>\n                <hr className=\"dropdown-divider\"/>\n                <h2 className=\"display-5\">\n                    \"Understand algorithms in a better and efficient way...\"\n                </h2>\n            </div>\n        );\n    }\n}\n\nexport default Greet;","import React, {Component} from 'react';\n\nclass Navbar extends Component {\n    render() {\n        return (\n            <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n                <a className=\"navbar-brand\" href=\"#\">AlgoViz</a>\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\"\n                        data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\"\n                        aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                    <span className=\"navbar-toggler-icon\"></span>\n                </button>\n\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n                    <ul className=\"navbar-nav mr-auto\">\n                        <li className=\"nav-item active\">\n                            {/* <a className=\"nav-link\" href=\"about.jsx\">About <span className=\"sr-only\">(current)</span></a> */}\n                        </li>\n\n                    </ul>\n                </div>\n            </nav>\n        );\n    }\n}\n\nexport default Navbar;","import React, {Component} from 'react';\nimport Typewriter from \"typewriter-effect\";\nimport './style.css'\nclass TypeWriterC extends Component {\n    state = {\n\n    }\n    render() {\n        return (\n            <div className=\"type display-3\">\n                {/* <span className=\"badge badge-dark\">\n                <Typewriter\n                    options={{\n                        strings: ['Graph Algorithms', 'Sorting Algorithms',\"8 Queen\"],\n                        autoStart: true,\n                        loop: true,\n                    }}\n                />\n            </span> */}\n            </div>\n        );\n    }\n}\n\nexport default TypeWriterC;","export default __webpack_public_path__ + \"static/media/graph.8f8b53ae.jpg\";","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport clsx from 'clsx';\nimport Collapse from '@material-ui/core/Collapse';\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardActions from '@material-ui/core/CardActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Typography from \"@material-ui/core/Typography\";\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport \"./style.css\";\nimport \"./images/graph.jpg\";\nimport {ExpandMore} from \"@material-ui/icons\";\n\nconst useStyles = makeStyles({\n    card: {\n        minWidth: 350,\n        maxWidth:350,\n        minHeight:250,\n        borderRadius: 5,\n        '&:hover': {\n            boxShadow: `0 6px 12px 0 #000000\n                .rotate(-12)\n                .darken(0.2)\n                .fade(0.5)}`\n                ,\n        },\n    },\n    media: {\n        height: 140\n    },\n    actionArea: {\n        padding:15,\n        transition: '0.2s',\n        '&:hover': {\n            transform: 'scale(1.1)',\n\n        },\n    },\n});\n\nexport default function ImgMediaCard(props) {\n    const classes = useStyles();\n\n    return (\n        <CardActionArea className={classes.actionArea} m={20}>\n            <Card\n                className={classes.card}\n                >\n                <CardMedia\n                    component=\"img\"\n                    alt=\"Contemplative Reptile\"\n                    height=\"140\"\n                    src={props.card.img}\n                />\n                <CardContent>\n                    <Typography gutterBottom variant=\"h5\" component=\"h2\"  >\n                        {props.card.title}\n                    </Typography>\n                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                        {props.card.description}\n                    </Typography>\n                    <ExpandMore/>\n                </CardContent>\n            </Card>\n        </CardActionArea>\n    );\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport clsx from 'clsx';\nimport Collapse from '@material-ui/core/Collapse';\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardActions from '@material-ui/core/CardActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Typography from \"@material-ui/core/Typography\";\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport \"./style.css\";\nimport \"./images/graph.jpg\";\nimport {ExpandMore} from \"@material-ui/icons\";\nimport {Link} from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n    card: {\n        minWidth: 350,\n        maxWidth:350,\n        minHeight:200,\n        borderRadius: 25,\n        '&:hover': {\n            boxShadow: `0 6px 12px 0 #000000\n                .rotate(-12)\n                .darken(0.2)\n                .fade(0.5)}`\n                ,\n        },\n    },\n    media: {\n        height: 100\n    },\n    expand: {\n        transform: 'rotate(0deg)',\n        marginLeft: 'auto',\n        transition: theme.transitions.create('transform', {\n            duration: theme.transitions.duration.shortest,\n        }),\n    },\n    expandOpen: {\n        transform: 'rotate(180deg)',\n    },\n    actionArea: {\n        padding:15,\n        transition: '0.2s',\n        '&:hover': {\n            transform: 'scale(1.1)',\n\n        },\n    },\n}));\n\nexport default function ImgMediaCard2(props) {\n    const classes = useStyles();\n    const [expanded, setExpanded] = React.useState(false);\n\n    const handleExpandClick = () => {\n        setExpanded(!expanded);\n    };\n\n    return (\n        <CardActionArea className={classes.actionArea} m={20}>\n            <Card\n                className={classes.card}\n                >\n               <Link to={props.card.route}>\n                   <CardMedia\n                       component=\"img\"\n                       alt={props.card.title}\n                       height=\"150\"\n                       src={props.card.img}\n                   />\n               </Link>\n                <CardHeader\n                    title={props.card.title}\n                    style={{backgroundColor:\"lightgrey\"}}\n                    action={\n                        <IconButton\n                            className={clsx(classes.expand, {\n                                [classes.expandOpen]: expanded,\n                            })}\n                            onClick={handleExpandClick}\n                            aria-expanded={expanded}\n                            aria-label=\"show more\"\n                        >\n                            <ExpandMoreIcon />\n                        </IconButton>\n                    }\n                />\n                <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\n                    <CardContent\n                        style={{backgroundColor:\"whitesmoke\"}}\n                    >\n                        <Typography>\n                            {props.card.description}\n                        </Typography>\n                    </CardContent>\n                </Collapse>\n            </Card>\n        </CardActionArea>\n    );\n}\n","export default __webpack_public_path__ + \"static/media/primes.59966538.png\";","export default __webpack_public_path__ + \"static/media/sort.4e3a1709.jpeg\";","export default __webpack_public_path__ + \"static/media/sorting.ac907d10.jpeg\";","export default __webpack_public_path__ + \"static/media/binaryTree.3861da9c.jpg\";","export default __webpack_public_path__ + \"static/media/Recursion.74bc404c.jpg\";","import React, {Component} from 'react';\nimport ImgMediaCard from \"./card\";\nimport ImgMediaCard2 from \"./card2\";\nimport \"./style.css\";\nimport {Link} from \"react-router-dom\";\nimport graph from \"./images/graph.jpg\";\nimport primes from \"./images/primes.png\"\nimport sort from \"./sort.jpeg\"\nimport sorting from \"./sorting.jpeg\"\nimport binSearch from './images/binaryTree.jpg'\nimport {getDetails} from \"./cardDetails\";\nimport TextField from \"@material-ui/core/TextField\";\nclass Cards extends Component {\n\n    state = {\n        cards:[],\n        filter:\"\"\n    }\n\n    componentDidMount() {\n        this.setState({cards:getDetails()});\n    }\n    getData = (e)=>{\n        console.log(e.target.value);\n        this.setState({filter:e.target.value});\n    }\n    render() {\n        return (\n           <React.Fragment>\n               {/* <div className=\"d-flex justify-content-end Cards\">\n                   <TextField\n                       id=\"standard-basic\" label=\"Search\"\n                       color=\"secondary\"\n                       onChange={this.getData}\n                   />\n               </div> */}\n               <div className=\"d-flex flex-wrap justify-content-center Cards p-lg-5 \"  >\n                   {\n                       this.state.cards.filter((card) => card.title.toLowerCase().includes(this.state.filter.toLowerCase())||card.description.toLowerCase().includes(this.state.filter.toLowerCase())).map(card=>(\n                           <div>\n                               <ImgMediaCard2\n                                   className=\"d-flex flex-wrap samp\"\n                                   key={card.id}\n                                   card={card}\n                                   />\n                           </div>\n                       ))\n                   }\n\n               </div>\n           </React.Fragment>\n        );\n    }\n}\n\nexport default Cards;\n/*\n<div>\n   <ImgMediaCard2\n       className=\"d-flex flex-wrap\"\n       key={card.id}\n       card={card}/>\n</div>\n */","import graph from \"./images/graph.jpg\";\nimport primes from \"./images/primes.png\";\nimport sort from \"./sort.jpeg\";\nimport sorting from \"./sorting.jpeg\"\nimport binSearch from \"./images/binaryTree.jpg\";\nimport Recursion from './images/Recursion.jpg';\nexport function getDetails(){\n   return [\n       \n       {\n           id:3,\n           title:\"Sorting Algorithm\",\n           description:\"Compare different sorting algorithms\",\n           route:\"/sort\",\n           img:sort\n       },\n       {\n           id:4,\n           title:\"Recursive Sorting\",\n           description:\"Compare different recursive sorting algorithms\",\n           route:\"/recursivesort\",\n           img:sorting\n       },\n       {\n           id:7,\n           title:\"Prime Numbers\",\n           description:\"Visualize how Seive is better than brute force\",\n           route:\"/prime\",\n           img:primes\n       },\n       {\n           id:9,\n           title:\"Binary Search\",\n           description:\"Binary search is an efficient algorithm for finding an item from a sorted list of item\",\n           route:\"/binarysearch\",\n           img:binSearch\n       },\n       {\n        id:10,\n        title:\"Pathfinder\",\n        description:\"Visualize graph algorithms like dijkstra, BFS, DFS\",\n        route:\"/pathfinder\",\n        img:graph\n    }\n\n   ]\n}","import React, {Component} from 'react';\nimport GitHubButton from 'react-github-btn'\nimport \"./style.css\";\nclass Footer extends Component {\n    render() {\n        return (\n            <footer class=\"page-footer font-small special-color-dark pt-4 \">\n\n                <div className='flex-wrap' style={{textAlign:\"center\"}}>\n\n                    <div className='m-2' style={{color:\"white\"}}>\n                        Developed by:<br></br>\n                        Chakka Moukthika, Jirra Sri Vani, Thagili Aishwarya<br></br>\n                    </div>\n                    \n                </div>\n\n            </footer>\n        );\n    }\n}\n\nexport default Footer;","import React, {Component} from 'react';\nimport Navbar from \"./navbar\";\nimport Greet from \"./greet\";\nimport TypeWriterC from \"./typewriter\";\nimport Cards from \"./cards\";\nimport Footer from \"./footer\";\n\nclass Home extends Component {\n    render() {\n        return (\n            <React.Fragment>\n                {/* <Navbar/> */}\n                <Greet/>\n                <TypeWriterC/>\n                <Cards/>\n                <Footer/>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default Home;","import React, {Component} from 'react';\nimport './cell.css';\nclass Cell extends Component {\n    render() {\n        return (\n            <div className={this.getClass()}>\n                <span >\n                    {this.props.cell.val}\n                </span>\n            </div>\n        );\n    }\n    getClass = () =>{\n        const { val, isVisiting,isChecking,isPrime} = this.props.cell;\n        if(isPrime){\n            return \"cell cell-prime bg-success text-light m-2\";\n        }else if( isVisiting ){\n            return \"cell cell-visiting m-2\";\n        } else if( isChecking ){\n            return \"cell cell-check m-2\";\n        } else{\n            return \"cell m-2\";\n        }\n    }\n}\n\nexport default Cell;","import React, {Component} from 'react';\nimport Cell from \"./cell\";\nimport './cells.css'\nclass Cells extends Component {\n\n    render() {\n        return (\n            <div className=\"Cells\">\n                {this.props.cells.map( (cell,cellidx)=>{\n                    return (\n                        <Cell\n                            key={cellidx}\n                            cell={cell}\n                        />\n                    );\n                } )}\n            </div>\n        );\n    }\n}\n\nexport default Cells;","import React, {Component} from 'react';\nimport {Link} from \"react-router-dom\";\n\n\nclass Navbar extends Component {\n    render() {\n        return (\n            <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark sample2\">\n                <span className=\"navbar-brand\">Sieve</span>\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\"\n                        data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\"\n                        aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                    <span className=\"navbar-toggler-icon\"></span>\n                </button>\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\" >\n                    <Link to={\"/\"}>\n                        <span style={{color:\"white\"}}>\n                            Home\n                        </span>\n                    </Link>\n                </div>\n\n            </nav>\n        );\n    }\n}\n\n\nexport default Navbar;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Slider from '@material-ui/core/Slider';\n\nconst useStyles = makeStyles({\n    root: {\n        width: 300,\n    },\n});\n\nfunction valuetext(value) {\n    return `${value}`;\n}\n\n\nexport default function DiscreteSlider(props) {\n    const classes = useStyles();\n    const handleChange = (event) =>{\n        if( event.target.innerText === \"\" ){\n            return;\n        }\n        const num = parseInt(event.target.innerText,10);\n        props.onChange(num);\n    }\n    return (\n        <div className={classes.root+\" ml-2 mr-2\"}>\n            <Typography id=\"discrete-slider\" gutterBottom>\n                {props.title}\n            </Typography>\n            <Slider\n                defaultValue={props.default}\n                getAriaValueText={valuetext}\n                aria-labelledby=\"discrete-slider\"\n                valueLabelDisplay=\"auto\"\n                onChangeCommitted={handleChange}\n                step={props.step}\n                marks={props.marks}\n                min={props.min}\n                max={props.max}\n                valueLabelDisplay=\"on\"\n                disabled={props.isDisabled}\n            />\n        </div>\n    );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n\nconst useStyles = makeStyles((theme) => ({\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 120,\n    },\n    selectEmpty: {\n        marginTop: theme.spacing(2),\n    },\n}));\n\nconst SimpleSelect = (props) => {\n    const classes = useStyles();\n    const [age, setAge] = React.useState('0');\n    const [state, setState] = React.useState({\n        pos: props.pos,\n    });\n    const handleChange = (event) => {\n\n\n        console.log('aa ',event.target.value);\n        setAge(event.target.value);\n        props.onAlgoChanged(state.pos,event.target.value);\n    };\n\n    return (\n        <div className=\"ml-2 mr-2\">\n            <FormControl className={classes.formControl}>\n                <InputLabel id=\"demo-simple-select-label\">Task</InputLabel>\n                <Select\n                    labelId=\"demo-simple-select-label\"\n                    id=\"demo-simple-select\"\n                    value={age}\n                    onChange={handleChange}\n                >\n                    <MenuItem value={0} style={{selected:true}} >Seive</MenuItem>\n                    {/* <MenuItem value={1} style={{selected:true}} >Archimedes Spiral</MenuItem> */}\n                    {/*<MenuItem value={3} style={{selected:true}} >Bitwise AND</MenuItem>*/}\n                    {/*<MenuItem value={4} style={{selected:true}} >Bitwise OR</MenuItem>*/}\n                </Select>\n            </FormControl>\n        </div>\n    );\n}\n\nexport default SimpleSelect;","import React, {Component} from 'react';\nimport DiscreteSlider from \"./slider\";\nimport SimpleSelect from \"./simpleSelect\";\n\nclass Menu extends Component {\n    render() {\n        return (\n            <nav className=\"nav alert-dark\">\n                <button className=\"btn btn-primary btn-lg m-2\" onClick={this.props.onRefresh} disabled={this.props.isDisabled} style={this.isClickable()}>Refresh</button>\n                <SimpleSelect\n                    pos={0}\n                    onAlgoChanged={this.props.setAlgo}\n                />\n                <DiscreteSlider\n                    onChange={this.props.onChangeSpeed}\n                    title=\"speed\"\n                    marks={false}\n                    default={10}\n                    step={1}\n                    min={10}\n                    max={50}\n                    isDisabled={false}\n                />\n                <DiscreteSlider\n                    onChange={this.props.onChangeValues}\n                    title=\"Total Number\"\n                    marks={false}\n                    default={100}\n                    step={1}\n                    min={10}\n                    max={500}\n                    isDisabled={this.props.isDisabled}\n                />\n                <button className=\"btn btn-primary btn-lg m-2\" onClick={this.props.onVisualize} disabled={this.props.isDisabled} style={this.isClickable()}>Visualize</button>\n\n\n            </nav>\n        );\n    }\n    isClickable = () =>{\n        if( this.props.isDisabled ){\n            return {cursor: \"not-allowed\"};\n        } else{\n            return {};\n        }\n    }\n}\n\nexport default Menu;","export function seive(n){\n    let vis = new Array(n+5).fill(0);\n\n    let primes = [];\n    for(let p = 2;p<=n;p++){\n        if( vis[p] === 0 ){\n            primes.push(p);\n            for(let q = p*p;q<=n;q+=p)\n                vis[q] = 1;\n        }\n    }\n    return primes;\n}","import React, {Component} from 'react';\nimport Cell from \"./cell\";\n\nclass Spiral extends Component {\n\n    render() {\n        let Maxwidth = window.innerWidth;\n        let MaxHeight = window.innerHeight;\n\n        let width,height;\n        let maxPrime = this.props.maxPrime;\n        if( Maxwidth>MaxHeight ){\n            let ratio = Maxwidth/MaxHeight;\n            height = maxPrime;\n            width = ratio*height;\n        }else{\n            let ratio = MaxHeight/Maxwidth;\n            width = maxPrime;\n            height = ratio*width;\n\n        }\n\n        // console.log(width,height);\n        let radius = (Math.min(width,height))/300;\n        return (\n            <div className={'bg-dark'}>\n                {/*sdfsdfsdfsdfsdfsdf*/}\n                <svg viewBox={\"0 0 \"+2*width+\" \"+2*height} xmlns=\"http://www.w3.org/2000/svg\">\n                    {this.props.primes.map( (cell,cellidx)=>{\n                        return (\n                            <circle\n                                id={cellidx}\n                                cx={cell*Math.cos(cell)+width}\n                                cy={cell*Math.sin(cell)+height}\n                                r={radius}\n                                stroke=\"black\" stroke-width=\"0.5\" fill='#51c4b5'\n\n                            />\n                        );\n                    } )}\n                </svg>\n            </div>\n        );\n    }\n}\n\nexport default Spiral;","import React, {Component} from 'react';\nimport Cells from \"./cells\";\nimport Navbar from \"./navbar\";\nimport DiscreteSlider from \"./slider\";\nimport Menu from \"./menu\";\nimport {seive} from \"../algorithms/prime\";\nimport Spiral from \"./spiral\";\n\nclass Seive extends Component {\n    state = {\n        number: 100,\n        cells:[],\n        isRunning:false,\n        speed:500,\n        primes:[],\n        maxPrime:0,\n        algo:0\n    }\n\n    constructor(props) {\n        super(props);\n    }\n    componentDidMount() {\n        const cells = getCells(this.state.number);\n        this.setState({cells});\n    }\n    setAlgo = (pos, val) => {\n        if (pos === 0) {\n\n            this.setState({algo: val});\n            // console.log(this.state.algo);\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <Navbar/>\n                <Menu\n                    onChangeSpeed={this.changeSpeed}\n                    onChangeValues={this.handleValueIncease}\n                    onVisualize = {this.startAlgo}\n                    onRefresh = {this.handleRefresh}\n                    isDisabled = {this.state.isRunning}\n                    setAlgo={this.setAlgo}\n                />\n                {this.state.algo === 0 &&\n                    <Cells\n                        num={this.state.number}\n                        cells={this.state.cells}\n                    />\n                }\n                {this.state.algo === 1 &&\n                    <Spiral\n                        num={this.state.number}\n                        primes={this.state.primes}\n                        maxPrime={this.state.maxPrime}\n                    />\n                }\n\n            </div>\n        );\n    }\n\n    changeSpeed = (speed) => {\n        //console.log(typeof speed);\n        this.setState({speed:600-speed*10});\n    }\n    handleValueIncease = (value) => {\n        this.setState({number:value});\n        if( this.state.algo === 0 ){\n            this.setState({cells:getCells(value),isRunning:false});\n\n        }\n        // console.log(value);\n    }\n    handleRefresh = () => {\n        this.setState({cells:getCells(this.state.number),isRunning:false});\n    }\n\n    startAlgo = () =>{\n        console.log(this.state.algo);\n        if( this.state.algo === 0 ){\n            this.startSeive();\n        }else if( this.state.algo === 1 ){\n            this.startSpiral();\n        }\n    }\n    startSpiral = async () =>{\n        let pprimes = seive(this.state.number*100);\n        let primes = [];\n        this.setState({primes:[],maxPrime:pprimes[pprimes.length-1]});\n        let mod = Math.ceil(this.state.number/10);\n        for(let i=0;i<pprimes.length;i++){\n            primes.push(pprimes[i]);\n\n            if( i%mod === 0 ){\n                this.setState({primes});\n                await sleep(10);\n            }\n        }\n        console.log('done');\n    }\n    startSeive = async () => {\n        const speed = this.state.speed;\n        this.setState({isRunning:true});\n        const prime = [];\n        for(let i = 0;i<=this.state.number;i++){\n            prime.push(1);\n        }\n        prime[0] = prime[1] = 0;\n        let changedCells = this.state.cells;\n        let prevCheck = -1;\n        let counter = 0;\n        for( let i = 2; i<=this.state.number;i++){\n            if( prime[i] === 1 ){\n             //   setTimeout(()=>{\n                    changedCells = getNewCellPrimeToggled(changedCells,i-1);\n                    this.setState({cells:changedCells});\n                //},counter*speed);\n                await sleep(this.state.speed);\n                counter++;\n                for(let j = i*i;j<=this.state.number;j+=i){\n                    //setTimeout(()=>{\n                        if( prevCheck!=-1 ){\n                            changedCells = getNewCellVisitingToggled(changedCells,prevCheck);\n                        }\n                        prevCheck = j-1;\n                        changedCells = getNewCellCheckToggled(changedCells,j-1);\n                        changedCells = getNewCellVisitingToggled(changedCells,prevCheck);\n                        this.setState({cells:changedCells});\n                  //  },counter*speed);\n                    await sleep(this.state.speed);\n                    counter++;\n                    prime[j] = 0;\n                }\n            }\n        }\n      //  setTimeout(()=>{\n            changedCells = getNewCellVisitingToggled(changedCells,prevCheck);\n            this.setState({cells:changedCells,isRunning:false});\n       // },counter*speed);\n    }\n}\n\nconst getNewCellPrimeToggled = (cells,pos) =>{\n    const newCells = cells.slice();\n    const cell = newCells[pos];\n    const newCell = {\n        ...cell,\n        isPrime:true\n    }\n    newCells[pos] = newCell;\n    return newCells;\n}\n\nconst getNewCellVisitingToggled = (cells,pos)=>{\n    const newCells = cells.slice();\n    const cell = newCells[pos];\n    const newCell = {\n        ...cell,\n        isVisiting:!cell.isVisiting\n    }\n    newCells[pos] = newCell;\n    return newCells;\n}\n\nconst getNewCellCheckToggled = (cells,pos) =>{\n    const newCells = cells.slice();\n    const cell = newCells[pos];\n    const newCell = {\n        ...cell,\n        isChecking:true\n    }\n    newCells[pos] = newCell;\n    return newCells;\n}\n\nconst getCells = (rows)=>{\n    const cells = [];\n    for(let cell = 1;cell<=rows;cell++){\n        cells.push(createCell(cell))\n    }\n    return cells;\n}\nconst createCell = (val)=>{\n    return {\n        val,\n        isChecking:false,\n        isVisiting:false,\n        isPrime:false\n    };\n}\nfunction sleep(ms) {\n    return new Promise(resolve => setTimeout(resolve, ms));\n}\nexport default Seive;","import React, {Component} from 'react';\nimport './style.css';\nclass Rect extends Component {\n\n    render() {\n        return (\n\n            <div\n                className='rect'\n                style={{height:this.props.rect.width,\n                    background:this.checkColor(),\n                    margin:this.props.marg,\n                    // float:'left',\n                    'vertical-align': 'middle'\n                }}\n            >\n             <div class=\"num\" >\n            <div>{this.props.rect.width}</div>\n\n                </div>   \n            </div>\n        );\n    }\n    checkColor = () => {\n        if( this.props.rect.isSorted ){\n            return \"green\";\n        } else if( this.props.rect.isSorting ){\n            return \"red\";\n        } else{\n            return \"black\"\n        }\n    }\n}\n\nexport default Rect;","import React, {Component} from 'react';\nimport Rect from \"./rect\";\nimport FlipMove from 'react-flip-move';\n\nclass Rects extends Component {\n    render() {\n        let margin = 5;\n        if( this.props.rects.length>50 ){\n            margin=1;\n        }\n        return (\n            <div>\n                <FlipMove\n                    className=\"d-flex justify-content-center align-items-end\"\n                    duration={this.props.speed}\n                    // easing=\"cubic-bezier(.12,.36,.14,1.2)\"\n                >\n                {this.props.rects.map( (rect,rectidx)=>{\n                    return (\n                        <Rect\n                            marg={margin}\n                            key={rect.kk}\n                            rect={rect}\n                        />\n                    );\n                } )}\n                </FlipMove>\n            </div>\n        );\n    }\n}\n\nexport default Rects;","export function bubbleSort2(rects ){\n    const pairs = [];\n    const num  = rects.length;\n    const prevRect = rects.slice();\n\n    for( let i = 0; i<num; i++ ){\n        for( let j = i+1;j<num;j++ ){\n            if( prevRect[i].width>prevRect[j].width ){\n                const recti = {...prevRect[i]};\n                const rectj = {...prevRect[j]};\n                prevRect[j] = recti;\n                prevRect[i] = rectj;\n                pairs.push( {\n                    xx:i,\n                    yy:j,\n                    changed:true\n                } );\n            } else{\n                pairs.push( {\n                    xx:i,\n                    yy:j,\n                    changed:false\n                });\n            }\n            if( j === num-1 ){\n                pairs.push( {\n                    xx:i,\n                    yy:i,\n                    changed:false\n                });\n            }\n        }\n    }\n    return pairs;\n}\n\nexport function selectionSort(arr) {\n    const pairs = [];\n    let n = arr.length;\n    const prevRect = arr.slice();\n    // One by one move boundary of unsorted subarray\n    for (let i = 0; i < n-1; i++)\n    {\n        let min_idx = i;\n        for (let j = i+1; j < n; j++){\n            pairs.push( {\n                xx:min_idx,\n                yy:j,\n                changed:false\n            } );\n            if (prevRect[j].width < prevRect[min_idx].width){\n                min_idx = j;\n            }\n        }\n\n        // Swap the found minimum element with the first\n        // element\n        const recti = {...prevRect[i]};\n        const rectj = {...prevRect[min_idx]};\n        prevRect[min_idx] = recti;\n        prevRect[i] = rectj;\n        pairs.push( {\n            xx:min_idx,\n            yy:i,\n            changed:true\n        } );\n        pairs.push( {\n            xx:i,\n            yy:i,\n            changed:false\n        });\n    }\n    pairs.push({\n            xx:n-1,\n            yy:n-1,\n            changed:false\n        }\n    )\n    return pairs;\n}\n\nexport function bubbleSort(arr){\n    const pairs= [];\n    let n = arr.length;\n    const prevRect = arr.slice();\n    for (let i = 0; i < n-1; i++){\n        for (let j = 0; j < n-i-1; j++){\n            if (prevRect[j].width > prevRect[j+1].width) {\n                // swap arr[j+1] and arr[j]\n                const recti = {...prevRect[j]};\n                const rectj = {...prevRect[j+1]};\n                prevRect[j+1] = recti;\n                prevRect[j] = rectj;\n                pairs.push( {\n                    xx:j,\n                    yy:j+1,\n                    changed:true\n                } );\n            } else{\n                pairs.push( {\n                    xx:j,\n                    yy:j+1,\n                    changed:false\n                } );\n            }\n            if( j === n-i-2 ){\n                pairs.push( {\n                    xx:n-i-1,\n                    yy:n-i-1,\n                    changed:false\n                } );\n            }\n        }\n    }\n    pairs.push({\n            xx:0,\n            yy:0,\n            changed:false\n        }\n    )\n    return pairs;\n}\n\nexport function insertionSort(arr){\n    const pairs = [];\n    let n = arr.length;\n    const prevRect = arr.slice();\n    for (let i = 1; i < n; ++i) {\n        let key = prevRect[i].width;\n        let j = i - 1;\n\n        while (j >= 0 && prevRect[j].width > key) {\n            const recti = {...prevRect[j]};\n            const rectj = {...prevRect[j+1]};\n            prevRect[j+1] = recti;\n            prevRect[j] = rectj;\n            pairs.push( {\n                xx:j,\n                yy:j+1,\n                changed:true\n            } );\n            j = j - 1;\n        }\n       // arr[j + 1] = arr[i];\n    }\n    for(let i=0;i<n;i++){\n        pairs.push({\n            xx:i,\n            yy:i,\n            changed:true\n        })\n    }\n    return pairs;\n}","let values = [];\n\nexport function quickSort(rects2){\n    let rects = rects2.slice();\n    values = [];\n    let sz = rects2.length;\n    // console.log( \"fdsfsd\",sz );\n    sz = sz-1;\n    quick(rects,0,sz);\n    for(var i=0;i<=sz;i++){\n        values.push({\n            xx:i,\n            yy:i,\n            changed:true\n        })\n    }\n    return values;\n}\n\n\nfunction getPartition(rects, left, right){\n    let pivot = rects[right].width\n    let it = left-1;\n    for(var j=left;j<=right-1;j++){\n        if( rects[j].width< pivot){\n            it++;\n            if( it!==j ){\n                // swap(rects[it],rects[j];\n                const rect1 = {...rects[it]};\n                const rect2 = {...rects[j]};\n                rects[it] = rect2;\n                rects[j] = rect1;\n                values.push({\n                    xx:it,\n                    yy:j,\n                    changed:true\n                })\n            }\n        }\n    }\n    if( it+1!==right ){\n        const rect1 = {...rects[it+1]};\n        const rect2 = {...rects[right]};\n        rects[it+1] = rect2;\n        rects[right] = rect1;\n        values.push({\n            xx:it+1,\n            yy:right,\n            changed:true\n        })\n    }\n    return it+1;\n}\nfunction quick(rects,left,right){\n    if( left>=right ) return ;\n    const partition = getPartition(rects,left,right);\n    quick(rects,left,partition-1);\n    quick(rects,partition+1,right);\n}","import React, {Component} from 'react';\nimport {Link} from \"react-router-dom\";\n\nclass Navbar extends Component {\n    render() {\n        return (\n            <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark temp\">\n                <span className=\"navbar-brand\">Sorting Visualizer</span>\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\"\n                        data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\"\n                        aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                    <span className=\"navbar-toggler-icon\"></span>\n                </button>\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\" >\n                    <Link to={\"/\"}>\n                            <span style={{color:\"white\"}}>\n                                Home\n                            </span>\n                    </Link>\n                </div>\n\n            </nav>\n        );\n    }\n}\n\nexport default Navbar;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Slider from '@material-ui/core/Slider';\n\nconst useStyles = makeStyles({\n    root: {\n        width: 200,\n    },\n});\n\nfunction valuetext(value) {\n    return `${value}`;\n}\n\n\nexport default function DiscreteSlider(props) {\n    const classes = useStyles();\n    const handleChange = (event) =>{\n        if( event.target.innerText === \"\" ){\n            return;\n        }\n        const num = parseInt(event.target.innerText,10);\n        props.onCountChange(num);\n    }\n    return (\n        <div className={classes.root+\" ml-2 mr-2\"}>\n\n            <Slider\n                defaultValue={props.default}\n                getAriaValueText={valuetext}\n                aria-labelledby=\"discrete-slider\"\n                valueLabelDisplay=\"auto\"\n                onChangeCommitted={handleChange}\n                step={props.step}\n               // marks={props.marks}\n                min={props.min}\n                max={props.max}\n                // valueLabelDisplay=\"on\"\n                disabled={props.disable}\n            />\n            <Typography id=\"discrete-slider\" gutterBottom>\n                {props.title}\n            </Typography>\n        </div>\n    );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n\nconst useStyles = makeStyles((theme) => ({\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 120,\n    },\n    selectEmpty: {\n        marginTop: theme.spacing(2),\n    },\n}));\n\nconst SimpleSelect = (props) => {\n    const classes = useStyles();\n    const [age, setAge] = React.useState('0');\n    const [state, setState] = React.useState({\n        pos: props.pos,\n    });\n    const handleChange = (event) => {\n        console.log(state.pos);\n        setAge(event.target.value);\n        props.onAlgoChanged(state.pos,event.target.value);\n    };\n\n    return (\n        <div className=\"ml-2 mr-2\">\n            <FormControl className={classes.formControl}>\n                <InputLabel id=\"demo-simple-select-label\">Algorithm</InputLabel>\n                <Select\n                    labelId=\"demo-simple-select-label\"\n                    id=\"demo-simple-select\"\n                    value={age}\n                    onChange={handleChange}\n                >\n                    <MenuItem value={0} style={{selected:true}} >Bubble Sort</MenuItem>\n                    <MenuItem value={1}>Selection Sort</MenuItem>\n                    <MenuItem value={2}>Insertion Sort</MenuItem>\n                    {/* <MenuItem value={3}>Quick Sort</MenuItem> */}\n                </Select>\n            </FormControl>\n        </div>\n    );\n}\n\nexport default SimpleSelect;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport Slider from '@material-ui/core/Slider';\nimport Typography from '@material-ui/core/Typography';\nimport Tooltip from '@material-ui/core/Tooltip';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: 300 + theme.spacing(3) * 2,\n    },\n    margin: {\n        height: theme.spacing(3),\n    },\n}));\n\nfunction ValueLabelComponent(props) {\n    const { children, open, value } = props;\n\n    return (\n        <Tooltip open={open} enterTouchDelay={0} placement=\"top\" title={value}>\n            {children}\n        </Tooltip>\n    );\n}\n\nValueLabelComponent.propTypes = {\n    children: PropTypes.element.isRequired,\n    open: PropTypes.bool.isRequired,\n    value: PropTypes.number.isRequired,\n};\n\n\n\n\nconst AirbnbSlider = withStyles({\n    root: {\n        color: '#3a8589',\n        height: 3,\n        padding: '13px 0',\n    },\n    thumb: {\n        height: 27,\n        width: 27,\n        backgroundColor: '#fff',\n        border: '1px solid currentColor',\n        marginTop: -12,\n        marginLeft: -13,\n        boxShadow: '#ebebeb 0 2px 2px',\n        '&:focus, &:hover, &$active': {\n            boxShadow: '#ccc 0 2px 3px 1px',\n        },\n        '& .bar': {\n            // display: inline-block !important;\n            height: 9,\n            width: 1,\n            backgroundColor: 'currentColor',\n            marginLeft: 1,\n            marginRight: 1,\n        },\n    },\n    active: {},\n    track: {\n        height: 3,\n    },\n    rail: {\n        color: '#ffffff',\n        opacity: 1,\n        height: 3,\n    },\n})(Slider);\n\nfunction AirbnbThumbComponent(props) {\n    return (\n        <span {...props}>\n      <span className=\"bar\" />\n      <span className=\"bar\" />\n      <span className=\"bar\" />\n    </span>\n    );\n}\n\nexport default function CustomizedSlider() {\n    const classes = useStyles();\n\n    return (\n        <div className={classes.root}>\n            <Typography gutterBottom>Airbnb</Typography>\n            <AirbnbSlider\n                ThumbComponent={AirbnbThumbComponent}\n                getAriaLabel={(index) => (index === 0 ? 'Minimum price' : 'Maximum price')}\n                defaultValue={[20, 40]}\n                valueLabelDisplay=\"on\"\n            />\n        </div>\n    );\n}\n","import React from 'react';\nimport {makeStyles, withStyles} from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Slider from '@material-ui/core/Slider';\n\nconst useStyles = makeStyles({\n    root: {\n        width: 200,\n    },\n});\n\n\nconst CSlider = withStyles({\n    root: {\n       // color: \"#ffffff\",\n        height: 3,\n        padding: \"13px 0\",\n    },\n    track: {\n        height: 4,\n        borderRadius: 2,\n    },\n    thumb: {\n        backgroundColor: \"#fff\",\n        //color: \"#fff\",\n    },\n})(Slider);\n\nfunction valuetext(value) {\n    return `${value}`;\n}\n\n\n\nexport default function RangeSlider(props) {\n    const classes = useStyles();\n    const [value, setValue] = React.useState([20, 37]);\n\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n\n    };\n    const handleCommit = (event, newValue) => {\n        console.log(newValue);\n    };\n\n    return (\n        <div className={classes.root}>\n            {/* <CSlider\n                disabled={props.disable}\n                value={value}\n                onChange={handleChange}\n                onChangeCommitted={handleCommit}\n                valueLabelDisplay=\"auto\"\n                aria-labelledby=\"range-slider\"\n                getAriaValueText={valuetext}\n                valueLabelDisplay=\"off\"\n            />\n            <Typography id=\"range-slider\" gutterBottom>\n                Value range\n            </Typography> */}\n        </div>\n    );\n}\n","import React from 'react';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\n\nexport default function SwitchLabels(props) {\n    const [state, setState] = React.useState({\n        checkedA: false,\n    });\n\n    const handleChange = (event) => {\n        setState({ ...state, [event.target.name]: event.target.checked });\n        props.onDoubleChange(event.target.checked);\n    };\n\n    return (\n        <FormGroup row>\n            <FormControlLabel\n                control={<Switch checked={state.checkedA} onChange={handleChange} name=\"checkedA\" />}\n                label=\"Duo\"\n                disabled={props.disable}\n            />\n\n        </FormGroup>\n    );\n}\n","import React, {Component} from 'react';\nimport DiscreteSlider from \"./slider\";\nimport SimpleSelect from \"./simpleSelect\";\nimport CustomizedSlider from \"./airBnbSlider\";\nimport RangeSlider from \"./doubleSlider\";\nimport SwitchLabels from \"./formControlLabel\";\n\n\nclass Menu extends Component {\n    render() {\n        return (\n            <nav className=\"nav alert-dark\">\n                <button\n                    className='btn btn-primary m-2'\n                    onClick={this.props.onRandomize}\n                    disabled={this.props.disable}\n                    style={this.isClickable()}\n                >\n                    Generate New Array\n                </button>\n\n                <RangeSlider\n                    disable={this.props.disable}\n                />\n                <DiscreteSlider\n                    default={20}\n                    min={10}\n                    max={100}\n                    step={10}\n                    title=\"Numbers\"\n                    onCountChange={this.props.onCountChange}\n                    disable={this.props.disable}\n                />\n                <DiscreteSlider\n                    default={50}\n                    min={10}\n                    max={100}\n                    step={1}\n                    title=\"Speed\"\n                    onCountChange={this.props.onSpeedChange}\n                    disable={false}\n                />\n                <SimpleSelect\n                    pos={0}\n                    onAlgoChanged={this.props.onAlgoChanged}\n                />\n                <SwitchLabels\n                    disable={this.props.disable}\n                    onDoubleChange={this.props.onDoubleChange}\n                />\n                <SimpleSelect\n                    pos={1}\n                    onAlgoChanged={this.props.onAlgoChanged}\n                />\n                <button\n                    className='btn btn-primary btn-lg visual'\n                    onClick={this.props.onViusalize}\n                    disabled={this.props.disable}\n                    style={this.isClickable()}\n                >\n                    Visualize\n                </button>\n                \n            </nav>\n            \n        );\n    }\n    isClickable = () =>{\n        if( this.props.disable ){\n            return {cursor: \"not-allowed\"};\n        } else{\n            return {};\n        }\n    }\n}\n\n\nexport default Menu;","import React, {Component} from 'react';\r\nimport Rect from \"./rect\";\r\nimport SimpleSelect from \"./simpleSelect\";\r\nimport onAlgoChanged from \"./menu.jsx\";\r\nimport Rects from \"./rects\";\r\n\r\nclass SortName1 extends Component {\r\n    render() {\r\n        let state= this.props.sorts;\r\n        let name=\"Bubble Sort\"\r\n        switch(state){\r\n            case 0:\r\n               name=\"Bubble Sort\";\r\n               break;\r\n            case 1:\r\n               name=\"Selection Sort\";\r\n               break;\r\n            case 2:\r\n                name=\"Insertion Sort\";\r\n                break;\r\n            case 3:\r\n                name=\"Quick Sort\";\r\n                break;  \r\n        }\r\n        return(\r\n            <div class=\"naming2\">\r\n                {name}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SortName1;","import React, {Component} from 'react';\n\nimport Rects from \"./rects\";\nimport {bubbleSort,selectionSort,insertionSort} from \"../algorithms/sortingAlgorithms\";\nimport {quickSort} from \"../algorithms/quickSort\";\nimport Navbar from \"./navbar\";\nimport Menu from \"./menu\";\nimport SortName1 from \"./SortName1\";\n\nclass Sort extends Component {\n  state = {\n      count:20,\n      rects: [],\n      rects2: [],\n      doubles:false,\n      speed:50,\n      isRunning:false,\n      isRunning1:false,\n      isRunning2:false,\n      algo1:0,\n      algo2:0\n  }\n\n  componentDidMount() {\n      const rect = getInitialRects(this.state.count);\n      const rect2 = rect.slice();\n      this.setState({rects:rect,rects2:rect2});\n  }\n\n    render() {\n    return (\n        <React.Fragment>\n            <Navbar/>\n            <Menu\n                disable={this.state.isRunning}\n                onDoubleChange={this.handleDouble}\n                onViusalize={this.handleSort}\n                onRandomize={this.handleRandomize}\n                onRefresh={this.handleRefresh}\n                onCountChange={this.handleCountChange}\n                onAlgoChanged={this.handleAlgoChanged}\n                onSpeedChange={this.handleSpeedChanged}\n            />\n            \n            <div className=' justify-content-center'>\n\n                <Rects\n                    speed={this.state.speed}\n                    rects={this.state.rects}\n                />\n                <SortName1\n                        sorts={this.state.algo1}\n                    />\n                { this.state.doubles && <hr style={{width:\"90%\"}}/>}\n                { this.state.doubles &&\n                <div><Rects\n                    rects={this.state.rects2}\n                /> \n                <SortName1\n                sorts={this.state.algo2}\n            /></div>}\n            </div>\n        \n        </React.Fragment>\n    );\n  }\n  handleRandomize = () => {\n      const rect = getInitialRects(this.state.count);\n      const rect2 = rect.slice();\n      this.setState({rects:rect,rects2:rect2});\n  }\n  handleRefresh = () =>{\n      const rects = this.state.rects;\n      for(let i=0;i<rects.length;i++){\n          const rect = {...rects[i],isSorted:false, isSorting:false}\n          rects[i] = rect;\n      }\n      const rects2 = rects.slice();\n      this.setState({rects,rects2});\n  }\n\n  handleDouble = (val) =>{\n      this.setState({doubles:val});\n  }\n  handleCountChange = (val) => {\n      this.setState({count:val});\n      this.handleRandomize();\n  }\n  handleAlgoChanged = (pos,val) =>{\n      if( pos === 0 ){\n          this.setState({algo1:val});\n      } else{\n          this.setState({algo2:val});\n      }\n  }\n  handleSpeedChanged = (val) =>{\n    const speed = (760-val*7.5);\n    this.setState({speed});\n  }\n  handleSort = () =>{\n\n      this.setState({isRunning:true});\n      let steps1;\n      switch (this.state.algo1){\n          case 0:\n              steps1 = bubbleSort(this.state.rects);\n              break;\n          case 1:\n              steps1 = selectionSort(this.state.rects);\n              break;\n          case 2:\n              steps1 = insertionSort(this.state.rects);\n              break;\n          case 3:\n              steps1 = quickSort(this.state.rects2);\n              console.log(steps1)\n              break;\n          default:\n              steps1 = bubbleSort(this.state.rects);\n              break;\n      }\n      let steps2;\n      if( this.state.doubles ){\n\n          switch (this.state.algo2){\n              case 0:\n                  steps2 = bubbleSort(this.state.rects2);\n                  break;\n              case 1:\n                  steps2 = selectionSort(this.state.rects2);\n                  break;\n              case 2:\n                  steps2 = insertionSort(this.state.rects2);\n                  break;\n              case 3:\n                  steps2 = quickSort(this.state.rects2);\n                  break;\n              default:\n                  steps2 = bubbleSort(this.state.rects2);\n                  break;\n          }\n\n      }\n      this.handleFirst(steps1);\n      if( this.state.doubles ) this.handleSecond(steps2);\n  }\n  handleFirst = async (steps) =>{\n     // console.log(\"fsdfsdfsdfasdf\");\n      this.setState({isRunning1:true});\n\n     // const steps = bubbleSort(this.state.rects);\n    //  console.log(steps.length);\n      const prevRect = this.state.rects;\n      for(let i = 0;i<steps.length;i++){\n       //   setTimeout(()=>{\n              if( i!==0 ){\n                  prevRect[steps[i-1].xx] = { ...prevRect[steps[i-1].xx],isSorting:false };\n                  prevRect[steps[i-1].yy] = { ...prevRect[steps[i-1].yy],isSorting:false };\n              }\n              if(steps[i].xx===steps[i].yy){\n                  prevRect[steps[i].xx] = {...prevRect[steps[i].xx],isSorted:true,isSorting:false};\n              }else if( steps[i].changed ){\n                  const recti = {...prevRect[steps[i].xx],isSorting:true};\n                  const rectj = {...prevRect[steps[i].yy],isSorting:true};\n                  prevRect[steps[i].yy] = recti;\n                  prevRect[steps[i].xx] = rectj;\n              } else{\n                  prevRect[steps[i].xx] = {...prevRect[steps[i].xx],isSorting:true};\n                  prevRect[steps[i].yy] = {...prevRect[steps[i].yy],isSorting:true};\n              }\n              if(i === steps.length-1){\n                  this.setState({isRunning1:false});\n                  if( this.state.isRunning2 === false ){\n                      this.setState({isRunning:false});\n                  }\n              }\n             /* if( i === (steps.length)-2 ){\n                  this.setState({isRunning1:false});\n                  if( this.state.isRunning2 === false ){\n                      this.setState({isRunning:false});\n                  }\n                  prevRect[steps[i].xx] = {...prevRect[steps[i].xx],isSorting:false,isSorted:true};\n                  prevRect[steps[i].yy] = {...prevRect[steps[i].yy],isSorting:false,isSorted:true};\n              }*/\n              this.setState({rects:prevRect});\n              await sleep(this.state.speed);\n         // },i*speed);\n      }\n  }\n    handleSecond = async (steps) =>{\n        this.setState({isRunning2:true});\n        const prevRect = this.state.rects2;\n        for(let i = 0;i<steps.length;i++){\n         //   setTimeout(()=>{\n                if( i!==0 ){\n                    prevRect[steps[i-1].xx] = { ...prevRect[steps[i-1].xx],isSorting:false };\n                    prevRect[steps[i-1].yy] = { ...prevRect[steps[i-1].yy],isSorting:false };\n                }\n                if(steps[i].xx===steps[i].yy){\n                    prevRect[steps[i].xx] = {...prevRect[steps[i].xx],isSorted:true,isSorting:false};\n                }else if( steps[i].changed ){\n                    const recti = {...prevRect[steps[i].xx],isSorting:true};\n                    const rectj = {...prevRect[steps[i].yy],isSorting:true};\n                    prevRect[steps[i].yy] = recti;\n                    prevRect[steps[i].xx] = rectj;\n                } else{\n                    prevRect[steps[i].xx] = {...prevRect[steps[i].xx],isSorting:true};\n                    prevRect[steps[i].yy] = {...prevRect[steps[i].yy],isSorting:true};\n                }\n                if( i === steps.length-1 ){\n                    this.setState({isRunning2:false});\n                    if( this.state.isRunning1 === false ){\n                        this.setState({isRunning:false});\n                    }\n                }\n               /* if( i === (steps.length)-2 ){\n                    prevRect[steps[i].xx] = {...prevRect[steps[i].xx],isSorting:false,isSorted:true};\n                    prevRect[steps[i].yy] = {...prevRect[steps[i].yy],isSorting:false,isSorted:true};\n                    this.setState({isRunning2:false});\n                    if( this.state.isRunning1 === false ){\n                        this.setState({isRunning:false});\n                    }\n                }*/\n                this.setState({rects2:prevRect});\n                await sleep(this.state.speed);\n           // },i*speed);\n        }\n    }\n\n\n}\nfunction sleep(ms) {\n    return new Promise(resolve => setTimeout(resolve, ms));\n}\nconst getInitialRects = (tot) => {\n    const rects = [];\n    for(let i = 0;i<tot;i++){\n        rects.push(getRect(i));\n    }\n    return rects;\n}\nconst getRect = (kk) => {\n  return {\n      width: Math.floor(Math.random() * 200)+50,\n      isSorted:false,\n      isSorting:false,\n      kk:kk\n  }\n}\nexport default Sort;\n","import React, {Component} from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport { LabelImportant } from '@material-ui/icons';\n\n\nclass EntryPoint extends Component {\n    state={\n        error:false\n    }\n    render() {\n        return (\n            <div>\n                <h1>\n                   <b>Enter a number to search</b> \n                </h1>\n                <TextField\n                    error={this.state.error}\n                    id=\"standard-error-helper-text\"\n                    // label=\"Upper Number\"\n                    type=\"number\"\n                    variant=\"outlined\"\n                    onChange={this.getData}\n                    style={{color:\"white\"}}\n                /> <br /><br />\n                <h1>\n                    Searching  number : {this.props.upper}\n                </h1>\n                <br />\n                <button\n                    className='btn btn-warning btn-lg'\n                    onClick={this.props.startGame}\n                    style={{backgroundColor: \"#0066ff\", color:\"white\"}}\n                >\n                    Start Search\n                </button>\n            </div>\n        );\n    }\n    getData = (e)=>{\n        if( e.target.value!== \"\" ){\n            console.log(e.target.value);\n            this.props.setUpper(e.target.value);\n        }\n        else{\n            this.props.setUpper(100)\n        }\n    }\n    validateNumbers = () =>{\n\n    }\n}\n\nexport default EntryPoint;","import React, {useEffect} from 'react';\nimport {makeStyles, withStyles} from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Slider from '@material-ui/core/Slider';\n\nconst useStyles = makeStyles({\n    root: {\n        width: 400,\n    },\n});\n\n\nconst CSlider = withStyles({\n    root: {\n       // color: \"#ffffff\",\n        height: 3,\n        width: 400,\n        padding: \"13px 0\",\n        color:\"blue\",\n        // backgroundColor:\"red\",\n    },\n    track: {\n        height: 4,\n        borderRadius: 2,\n        backgroundColor: \"blue\",\n        color:\"black\",\n    },\n    thumb: {\n        backgroundColor: \"black\",\n        //color: \"#fff\",\n        color:\"blue\",\n    },\n    // mark:{\n    //     backgroundColor: \"green\",\n    //     color:\"black\",\n    // }\n})(Slider);\n\nfunction valuetext(value) {\n    return `${value}`;\n}\n\n\n\nexport default function RangeSlider(props) {\n    const classes = useStyles();\n    const [value, setValue] = React.useState([props.lower, props.upper]);\n\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n\n    };\n    const handleCommit = (event, newValue) => {\n        console.log(newValue);\n    };\n    useEffect(()=>{\n        setValue([props.lower,props.upper]);\n    },[props.lower,props.upper])\n    return (\n        <div className={classes.root}>\n\n            <CSlider\n                className=\"drop1\"\n                disabled\n                value={value}\n                onChange={handleChange}\n                onChangeCommitted={handleCommit}\n                // valueLabelDisplay=\"auto\"\n                aria-labelledby=\"range-slider\"\n                getAriaValueText={valuetext}\n                valueLabelDisplay=\"on\"\n                max={props.max}\n            />\n            <Typography id=\"range-slider\" gutterBottom>\n                Binary Search\n            </Typography>\n        </div>\n    );\n}\n","import React, {Component} from 'react';\nimport RangeSlider from \"./doubleSlider\";\n\nclass Guess extends Component {\n    render() {\n        return (\n            <div >\n\n                <p>\n                    {/* <div className=\"btn btn-secondary btn-lg\"  data-toggle=\"collapse\"\n                            data-target=\"#collapseExample\" aria-expanded=\"false\" aria-controls=\"collapseExample\">\n                         \n                                upper={this.props.keyval}\n                              \n                    </div> */}\n                </p>\n                <div className=\"collapse\" id=\"collapseExample\">\n                    <div className=\"card card-body\">\n                        <center style={{justifyContent:\"center\"}}>\n                            <RangeSlider\n                                upper={this.props.upper}\n                                lower={this.props.lower}\n                                max={this.props.max}\n                            />\n                        </center>\n                    </div>\n                </div>\n\n               {/* <h1>\n                    Is you number greater than {this.getMid()}?\n                </h1> <br /> */}\n                {/* <button\n                    className='btn btn-lg btn-success m-2'\n                    onClick={this.props.yesButton}\n                >Yes</button>\n                <button\n                    className='btn btn-lg btn-danger m-2'\n                    onClick={this.props.noButton}\n                >No</button> <br/> */}\n            </div>\n        );\n    }\n    getMid = () => {\n        const mid = Math.floor( (this.props.upper+this.props.lower)/2);\n        return mid;\n    }\n}\n\nexport default Guess;","import React, {Component} from 'react';\nimport {keyval} from './binarySearch';\nimport BinarySearch from './binarySearch';\n\nclass Result extends Component {\n    render() {\n        return (\n            <div>\n                <span className='display-3'>\n                    {this.props.keyval == -1 ? \"The number is not found\":\"Your number is found at \" + this.props.keyval}\n                </span> <br />\n                <button\n                    className='btn btn-warning btn-lg'\n                    onClick={this.props.onRestart}\n                    style={{backgroundColor:\"#0066ff\", color:\"white\"}}\n                >\n                    Restart\n                </button>\n            </div>\n        );\n    }\n}\n\nexport default Result;\n","import React, {Component} from 'react';\nimport Guess from \"./guess\";\nimport Result from \"./result\";\n\nclass Search extends Component {\n    render() {\n        return (\n            <div>\n                {this.props.upper !== this.props.lower &&\n                <Guess\n                    yesButton={this.props.yesButton}\n                    noButton={this.props.noButton}\n                    upper={this.props.upper}\n                    lower={this.props.lower}\n                    max={this.props.max}\n                />\n                }\n                {this.props.phase === 1 &&\n                   <Result\n                       res={this.props.upper}\n                       onRestart={this.props.onRestart}\n                       keyval={this.props.keyval}\n                   />\n                }\n            </div>\n        );\n    }\n\n}\n\nexport default Search;","import React, {Component} from 'react';\nimport {Link} from \"react-router-dom\";\n\nclass Navbar extends Component {\n    render() {\n        return (\n            <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\" >\n                <span className=\"navbar-brand\" >Binary Search Game </span>\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\"\n                        data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\"\n                        aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                    <span className=\"navbar-toggler-icon\"></span>\n                </button>\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\" >\n                    <Link to={\"/\"}>\n                        <span style={{color:\"white\"}}>\n                            Home\n                        </span>\n                    </Link>\n                </div>\n\n            </nav>\n        );\n    }\n}\n\nexport default Navbar;","import React, {Component} from 'react';\r\n// import DiscreteSlider from \"./slider\";\r\n// import SimpleSelect from \"./simpleSelect\";\r\n// import CustomizedSlider from \"./airBnbSlider\";\r\n// import RangeSlider from \"./doubleSlider\";\r\n// import SwitchLabels from \"./formControlLabel\";\r\n\r\n\r\nclass Menu extends Component {\r\n    render() {\r\n        return (\r\n            <nav className=\"nav alert-dark\">\r\n                <button\r\n                    className='btn btn-primary m-2'\r\n                    onClick={this.props.onRandomize}\r\n                    disabled={this.props.disable}\r\n                    style={this.isClickable()}\r\n                >\r\n                   Generate New Array\r\n                </button>\r\n\r\n                {/* <RangeSlider\r\n                    disable={this.props.disable}\r\n                /> */}\r\n                {/* <DiscreteSlider\r\n                    default={20}\r\n                    min={10}\r\n                    max={100}\r\n                    step={10}\r\n                    title=\"Numbers\"\r\n                    onCountChange={this.props.onCountChange}\r\n                    disable={this.props.disable}\r\n                /> */}\r\n                {/* <DiscreteSlider\r\n                    default={50}\r\n                    min={10}\r\n                    max={100}\r\n                    step={1}\r\n                    title=\"Speed\"\r\n                    onCountChange={this.props.onSpeedChange}\r\n                    disable={false}\r\n                /> */}\r\n                {/* <SimpleSelect\r\n                    pos={0}\r\n                    onAlgoChanged={this.props.onAlgoChanged}\r\n                /> */}\r\n                {/* <button\r\n                    className='btn btn-primary btn-lg visual'\r\n                    onClick={this.props.startGame}\r\n                    disabled={this.props.disable}\r\n                    style={this.isClickable()}\r\n                >\r\n                    Search\r\n                </button> */}\r\n\r\n            </nav>\r\n        );\r\n    }\r\n    isClickable = () =>{\r\n        if( this.props.disable ){\r\n            return {cursor: \"not-allowed\"};\r\n        } else{\r\n            return {};\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport default Menu;","import React, {Component} from 'react';\n// import './style.css';\nclass Rect extends Component {\n\n    render() {\n        return (\n            <div\n                className='rect'\n                style={{height:this.props.rect.width,\n                    border: this.checkBorder(),\n                    background:this.checkColor(),\n                    margin:this.props.marg\n\n\n                }}\n            >\n                <div class=\"num\" >\n            <div>{this.props.rect.width}</div>\n\n                </div>  \n            </div>\n        );\n    }\n    checkColor = () => {\n        if( this.props.rect.isMid ){\n            return \"purple\";\n        } else if( this.props.rect.isFound ){\n            return \"green\";\n        } else if( this.props.rect.isNotFound ){\n            return \"red\";\n        }\n        // } else if(this.props.rect.isRight){\n        //     return \"purple\";\n        // }else{\n        //     return \"black\";\n        // }\n        // if( this.props.rect.isSorted ){\n        //     return \"green\";\n        // } else if( this.props.rect.isSorting ){\n        //     return \"orange\";\n        // } else if( this.props.rect.isLeft ){\n        //     return \"red\";\n        // } else if(this.props.rect.isRight){\n        //     return \"purple\";\n        // }else{\n        //     return \"black\";\n        // }\n    }\n    checkBorder = () =>{\n        if( this.props.rect.isRange ){\n            return \"0px solid black\";\n        } else{\n            return \"0px\"\n        }\n    }\n}\n\nexport default Rect;","import React, {Component} from 'react';\nimport Rect from \"./rect\";\n// import SimpleSelect from \"./simpleSelect\";\nimport onAlgoChanged from \"./menu.jsx\";\n\nclass Rects extends Component {\n    render() {\n        let margin = 5;\n        if( this.props.rects.length>50 ){\n            margin=1;\n        }\n        return (\n            <div className=\"d-flex justify-content-center align-items-end\">\n                {this.props.rects.map( (rect,rectidx)=>{\n                    return (\n                        <Rect\n                            marg={margin}\n                            key={rectidx}\n                            rect={rect}\n                        />\n                    );\n                } )}\n               \n               \n            </div>\n        );\n    }\n}\n\nexport default Rects;","import React, {Component} from 'react';\nimport EntryPoint from \"./entryPoint\";\nimport Search from \"./search\";\nimport Navbar from \"./navbar\";\nimport Menu from \"./menu\";\nimport Rect from \"./rect\";\nimport Rects from \"./rects\";\nimport { toBePartiallyChecked } from '@testing-library/jest-dom/dist/matchers';\nimport \"./style.css\";\nimport Result from './result';\n\nclass BinarySearch extends Component {\n    state = {\n        count: 20,\n        rects: [],\n        speed: 50,\n        isRunning: false,\n        algo: 0,\n        keyval:0,\n        phase:0\n    }\n\n    constructor() {\n        super();\n    }\n\n    componentDidMount() {\n        var rects = getInitialRects(this.state.count);\n        for(let i=0;i<rects.length;i++)\n        {\n            for(let j=0;j<rects.length-i-1;j++)\n            {\n                if(rects[j].width>rects[j+1].width)\n                {\n                    let temp=rects[j].width;\n                    rects[j].width=rects[j+1].width;\n                    rects[j+1].width=temp;\n                }\n            }\n        }\n        this.setState({rects});\n        // console.log(rects);\n        /* var rects2 = rects.slice();\n       \n         rects = mergeSort(rects);\n         console.log(rects);*/\n\n    }\n    render() {\n        return (\n            <div>\n                <Navbar/>\n                <Menu\n                    disable={this.state.isRunning}\n                    onSearch={this.handleSearch}\n                    onRandomize={this.handleRandomize}\n                    // onRefresh={this.handleRefresh}\n                    // onCountChange={this.handleCountChange}\n                    // onAlgoChanged={this.handleAlgoChanged}\n                    // onSpeedChange={this.handleSpeedChanged}\n                />\n                <div className=' justify-content-center'>\n                    <Rects\n                        rects={this.state.rects}\n                    />\n\n                </div>\n                {/* <div>\n                    {this.state.keyval}\n                </div> */}\n                <br />\n                <br />\n                <br />\n            <center>\n                {!this.state.isRunning &&\n                <EntryPoint\n                    startGame={this.handleStartGame}\n                    upper={this.state.upper}\n                    setUpper={this.handleSetUpper}\n                /> }\n                {this.state.isRunning &&\n                <Search\n                    // yesButton={this.handleYes}\n                    // noButton={this.handleNo}\n                    upper={this.state.upper}\n                    // lower={this.state.lower}\n                    max={this.state.max}\n                    onRestart={this.handleRestart}\n                    keyval={this.state.keyval}\n                    phase={this.state.phase}\n                />\n                }\n            </center>\n            {/* <div className='binsearch-new'>\n                Value is found at {this.state.keyval}\n            </div> */}\n            </div>\n        );\n    }\n\n    handleRandomize = () => {\n        const rect = getInitialRects(this.state.count);\n\n        this.setState({rects: rect});\n    }\n    handleRefresh = () => {\n        const rects = this.state.rects;\n        for (let i = 0; i < rects.length; i++) {\n            const rect = {...rects[i], isMid: false, isFound: false, isNotFound: false}\n            rects[i] = rect;\n\n            // alert(rects[i]);\n        }\n        for(let i=0;i<rects.length;i++)\n        {\n            for(let j=0;j<rects.length-i-1;j++)\n            {\n                if(rects[j].width>rects[j+1].width)\n                {\n                    let temp=rects[j].width;\n                    rects[j].width=rects[j+1].width;\n                    rects[j+1].width=temp;\n                }\n            }\n        }\n        this.setState({rects});\n    }\n    handleStartGame = () =>{\n        this.setState({isRunning:true});\n        let end=this.state.rects.length-1;\n        let pairs=[];\n        // let key=search(this.state.rects,this.state.upper,0,end);\n        let key=search1(this.state.rects,this.state.upper,0,end,pairs);\n        // console.log(key);\n      \n         this.setState({keyval:key,isRunning:true});\n         this.handleFirst(pairs);\n         this.setState({phase:1});\n    }\n    handleRestart = () =>{\n        this.setState({isRunning:false,upper:0,lower:0});\n\n        this.handleRandomize();\n        // this.handleRefresh();\n\n    }\n    \n    handleSetUpper = (up) =>{\n        let val = parseInt(up);\n        if( val<=0 ){\n            val = 100;\n        }\n        this.setState({upper:val,max:val});\n    }\n\n    handleFirst = async(pairs) =>{\n        const rect = this.state.rects;\n        for(let i=0;i<pairs.length;i++)\n        {\n            if(pairs[i].y==0){\n            rect[pairs[i].x] = {...rect[pairs[i].x], isMid: true, isFound: false, isNotFound: false}\n            }\n            if(pairs[i].y==2){\n                rect[pairs[i].x] = {...rect[pairs[i].x], isMid: false, isFound: true, isNotFound: false}\n                }\n                else{\n                    rect[pairs[i].x] = {...rect[pairs[i].x], isMid: false, isFound: false, isNotFound: true}\n                    }\n            this.setState({rects:rect});\n            await sleep(this.state.speed);\n        }\n    }\n}\n    // function sleep(ms) {\n    //     return new Promise(resolve => setTimeout(resolve, ms));\n    // }\n    function sleep(ms) {\n        return new Promise(resolve => setTimeout(resolve, ms));\n    }\n    const getInitialRects = (tot) => {\n        const rects = [];\n        for (let i = 0; i < tot; i++) {\n            rects.push(getRect());\n        }\n\n        for(let i=0;i<rects.length;i++)\n        {\n            for(let j=0;j<rects.length-i-1;j++)\n            {\n                if(rects[j].width>rects[j+1].width)\n                {\n                    let temp=rects[j].width;\n                    rects[j].width=rects[j+1].width;\n                    rects[j+1].width=temp;\n                }\n            }\n        }\n        // this.setState({rects});\n        return rects;\n    }\n    const getRect = () => {\n        return {\n            width: Math.floor(Math.random() * 200) + 50,\n            isSorted: false,\n            isSorting: false,\n            isLeft: false,\n            isRight: false\n        }\n    }\n    \n\n    const search1 = (rects,x,start,end,pairs) =>{\n        if (start > end) return -1;\n        // const rect=rects;\n        let mid=Math.floor((start + end)/2);\n        // rect[mid] = {...rects[mid], isMid: true, isFound: false, isNotFound: false}\n        // this.setState({rects:rect});\n        // sleep(this.state.speed);\n        pairs.push(\n            {\n                x:mid,y:0\n            }\n        );\n        if (rects[mid].width===x) {\n            // rects[mid].style.backgroundColor = \"green\";\n            // rect[mid] = {...rects[mid], isMid: false, isFound: true, isNotFound: false}\n            pairs.push(\n                {\n                    x:mid,y:2\n                }\n            );\n            return mid;\n        } \n        if(rects[mid].width > x)\n        {\n            // rect[mid] = {...rects[mid], isMid: false, isFound: false, isNotFound: true}\n            // rects[mid].style.backgroundColor = \"red\";\n            pairs.push(\n                {\n                    x:mid,y:1\n                }\n            );\n            return search1(rects, x, start, mid-1,pairs);\n        }\n        else{\n            // rect[mid] = {...rects[mid], isMid: false, isFound: false, isNotFound: true}\n            // rects[mid].style.backgroundColor = \"red\";\n            pairs.push(\n                {\n                    x:mid,y:1\n                }\n            );\n            return search1(rects, x, mid+1, end,pairs);\n        }\n\n        \n        // for(let i=0;i<rects.length;i++)\n        // {\n        //     if(rects[i].width===key1)\n        //         return i;\n        // }\n        // return -1;\n        \n       \n\n    }\nexport default BinarySearch;","import React, {Component} from 'react';\nimport './style.css';\nclass Rect extends Component {\n\n    render() {\n        return (\n            <div\n                className='rect'\n                style={{height:this.props.rect.width,\n                    border: this.checkBorder(),\n                    background:this.checkColor(),\n                    margin:this.props.marg\n\n\n                }}\n            >\n                <div class=\"num\" >\n            <div>{this.props.rect.width}</div>\n\n                </div>  \n            </div>\n        );\n    }\n    checkColor = () => {\n        if( this.props.rect.isSorted ){\n            return \"green\";\n        } else if( this.props.rect.isSorting ){\n            return \"orange\";\n        } else if( this.props.rect.isLeft ){\n            return \"red\";\n        } else if(this.props.rect.isRight){\n            return \"purple\";\n        }else{\n            return \"black\";\n        }\n    }\n    checkBorder = () =>{\n        if( this.props.rect.isRange ){\n            return \"0px solid black\";\n        } else{\n            return \"0px\"\n        }\n    }\n}\n\nexport default Rect;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n\nconst useStyles = makeStyles((theme) => ({\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 120,\n    },\n    selectEmpty: {\n        marginTop: theme.spacing(2),\n    },\n}));\n\nconst SimpleSelect = (props) => {\n    const classes = useStyles();\n    const [age, setAge] = React.useState('0');\n    const [state, setState] = React.useState({\n        pos: props.pos,\n    });\n    const handleChange = (event) => {\n        console.log(state.pos);\n        setAge(event.target.value);\n        props.onAlgoChanged(state.pos,event.target.value);\n    };\n\n    return (\n        <div className=\"ml-2 mr-2\">\n            <FormControl className={classes.formControl}>\n                <InputLabel id=\"demo-simple-select-label\">Algorithm</InputLabel>\n                <Select\n                    labelId=\"demo-simple-select-label\"\n                    id=\"demo-simple-select\"\n                    value={age}\n                    onChange={handleChange}\n                >\n                    <MenuItem value={0} style={{selected:true}} >Merge Sort</MenuItem>\n                    <MenuItem value={1} style={{selected:true}} >Heap Sort</MenuItem>\n                    <MenuItem value={2} style={{selected:true}} >Quick Sort</MenuItem>\n                </Select>\n            </FormControl>\n        </div>\n    );\n}\n\nexport default SimpleSelect;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Slider from '@material-ui/core/Slider';\n\nconst useStyles = makeStyles({\n    root: {\n        width: 200,\n    },\n});\n\nfunction valuetext(value) {\n    return `${value}`;\n}\n\n\nexport default function DiscreteSlider(props) {\n    const classes = useStyles();\n    const handleChange = (event) =>{\n        if( event.target.innerText === \"\" ){\n            return;\n        }\n        const num = parseInt(event.target.innerText,10);\n        props.onCountChange(num);\n    }\n    return (\n        <div className={classes.root+\" ml-2 mr-2\"}>\n\n            <Slider\n                defaultValue={props.default}\n                getAriaValueText={valuetext}\n                aria-labelledby=\"discrete-slider\"\n                valueLabelDisplay=\"auto\"\n                onChangeCommitted={handleChange}\n                step={props.step}\n               marks={props.marks}\n                min={props.min}\n                max={props.max}\n                // valueLabelDisplay=\"on\"\n                disabled={props.disable}\n            />\n            <Typography id=\"discrete-slider\" gutterBottom>\n                {props.title}\n            </Typography>\n        </div>\n    );\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport Slider from '@material-ui/core/Slider';\nimport Typography from '@material-ui/core/Typography';\nimport Tooltip from '@material-ui/core/Tooltip';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: 300 + theme.spacing(3) * 2,\n    },\n    margin: {\n        height: theme.spacing(3),\n    },\n}));\n\nfunction ValueLabelComponent(props) {\n    const { children, open, value } = props;\n\n    return (\n        <Tooltip open={open} enterTouchDelay={0} placement=\"top\" title={value}>\n            {children}\n        </Tooltip>\n    );\n}\n\nValueLabelComponent.propTypes = {\n    children: PropTypes.element.isRequired,\n    open: PropTypes.bool.isRequired,\n    value: PropTypes.number.isRequired,\n};\n\n\n\n\nconst AirbnbSlider = withStyles({\n    root: {\n        color: '#3a8589',\n        height: 3,\n        padding: '13px 0',\n    },\n    thumb: {\n        height: 27,\n        width: 27,\n        backgroundColor: '#fff',\n        border: '1px solid currentColor',\n        marginTop: -12,\n        marginLeft: -13,\n        boxShadow: '#ebebeb 0 2px 2px',\n        '&:focus, &:hover, &$active': {\n            boxShadow: '#ccc 0 2px 3px 1px',\n        },\n        '& .bar': {\n            // display: inline-block !important;\n            height: 9,\n            width: 1,\n            backgroundColor: 'currentColor',\n            marginLeft: 1,\n            marginRight: 1,\n        },\n    },\n    active: {},\n    track: {\n        height: 3,\n    },\n    rail: {\n        color: '#ffffff',\n        opacity: 1,\n        height: 3,\n    },\n})(Slider);\n\nfunction AirbnbThumbComponent(props) {\n    return (\n        <span {...props}>\n      <span className=\"bar\" />\n      <span className=\"bar\" />\n      <span className=\"bar\" />\n    </span>\n    );\n}\n\nexport default function CustomizedSlider() {\n    const classes = useStyles();\n\n    return (\n        <div className={classes.root}>\n            <Typography gutterBottom>Airbnb</Typography>\n            <AirbnbSlider\n                ThumbComponent={AirbnbThumbComponent}\n                getAriaLabel={(index) => (index === 0 ? 'Minimum price' : 'Maximum price')}\n                defaultValue={[20, 40]}\n                valueLabelDisplay=\"on\"\n            />\n        </div>\n    );\n}\n","import React from 'react';\nimport {makeStyles, withStyles} from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Slider from '@material-ui/core/Slider';\n\nconst useStyles = makeStyles({\n    root: {\n        width: 200,\n    },\n});\n\n\nconst CSlider = withStyles({\n    root: {\n       // color: \"#ffffff\",\n        height: 3,\n        padding: \"13px 0\",\n    },\n    track: {\n        height: 4,\n        borderRadius: 2,\n    },\n    thumb: {\n        backgroundColor: \"#fff\",\n        //color: \"#fff\",\n    },\n})(Slider);\n\nfunction valuetext(value) {\n    return `${value}`;\n}\n\n\n\nexport default function RangeSlider(props) {\n    const classes = useStyles();\n    const [value, setValue] = React.useState([20, 37]);\n\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n\n    };\n    const handleCommit = (event, newValue) => {\n        console.log(newValue);\n    };\n\n    return (\n        <div className={classes.root}>\n            {/* <CSlider\n                disabled={props.disable}\n                value={value}\n                onChange={handleChange}\n                onChangeCommitted={handleCommit}\n                valueLabelDisplay=\"auto\"\n                aria-labelledby=\"range-slider\"\n                getAriaValueText={valuetext}\n                // valueLabelDisplay=\"off\"\n            />\n            <Typography id=\"range-slider\" gutterBottom>\n                Value range\n            </Typography> */}\n        </div>\n    );\n}\n","import React, {Component} from 'react';\nimport DiscreteSlider from \"./slider\";\nimport SimpleSelect from \"./simpleSelect\";\nimport CustomizedSlider from \"./airBnbSlider\";\nimport RangeSlider from \"./doubleSlider\";\nimport SwitchLabels from \"./formControlLabel\";\n\n\nclass Menu extends Component {\n    render() {\n        return (\n            <nav className=\"nav alert-dark\">\n                <button\n                    className='btn btn-primary m-2'\n                    onClick={this.props.onRandomize}\n                    disabled={this.props.disable}\n                    style={this.isClickable()}\n                >\n                   Generate New Array\n                </button>\n\n                <RangeSlider\n                    disable={this.props.disable}\n                />\n                <DiscreteSlider\n                    default={20}\n                    min={10}\n                    max={100}\n                    step={10}\n                    title=\"Numbers\"\n                    onCountChange={this.props.onCountChange}\n                    disable={this.props.disable}\n                />\n                <DiscreteSlider\n                    default={50}\n                    min={10}\n                    max={100}\n                    step={1}\n                    title=\"Speed\"\n                    onCountChange={this.props.onSpeedChange}\n                    disable={false}\n                />\n                <SimpleSelect\n                    pos={0}\n                    onAlgoChanged={this.props.onAlgoChanged}\n                />\n                <button\n                    className='btn btn-primary btn-lg visual'\n                    onClick={this.props.onViusalize}\n                    disabled={this.props.disable}\n                    style={this.isClickable()}\n                >\n                    Visualize\n                </button>\n\n            </nav>\n        );\n    }\n    isClickable = () =>{\n        if( this.props.disable ){\n            return {cursor: \"not-allowed\"};\n        } else{\n            return {};\n        }\n    }\n}\n\n\nexport default Menu;","import React, {Component} from 'react';\nimport Rect from \"./rect\";\nimport SimpleSelect from \"./simpleSelect\";\nimport onAlgoChanged from \"./menu.jsx\";\n\nclass Rects extends Component {\n    render() {\n        let margin = 5;\n        if( this.props.rects.length>50 ){\n            margin=1;\n        }\n        return (\n            <div className=\"d-flex justify-content-center align-items-end\">\n                {this.props.rects.map( (rect,rectidx)=>{\n                    return (\n                        <Rect\n                            marg={margin}\n                            key={rectidx}\n                            rect={rect}\n                        />\n                    );\n                } )}\n               \n               \n            </div>\n        );\n    }\n}\n\nexport default Rects;","import React, {Component} from 'react';\r\nimport Rect from \"./rect\";\r\nimport SimpleSelect from \"./simpleSelect\";\r\nimport onAlgoChanged from \"./menu.jsx\";\r\nimport Rects from \"./rects\";\r\n\r\nclass SortName extends Component {\r\n    render() {\r\n        let state= this.props.sorts;\r\n        let name=\"Merge Sort\"\r\n        switch(state){\r\n            case 0:\r\n               name=\"Merge Sort\";\r\n               break;\r\n            case 1:\r\n               name=\"Heap Sort\";\r\n               break;\r\n            case 2:\r\n                name=\"Quick Sort\";\r\n                break;\r\n        }\r\n        return(\r\n            <div class=\"naming\">\r\n                {name}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SortName;","let values = [];\nexport default function mergeSort(rects2){\n    let rects = rects2.slice();\n    values = [];\n    let sz = rects2.length;\n   // console.log( \"fdsfsd\",sz );\n    sz = sz-1;\n    mergeS(rects,0,sz);\n    return values;\n}\n\nfunction merge(rects, l, m, r){\n  //  console.log(l,\" \",r);\n    let n1 = m-l+1;\n    let n2 = r-m;\n\n    const L = rects.slice(l, m+1);\n    const R = rects.slice(m+1,r+1);\n    let i = 0;\n    let j = 0;\n    let k = l;\n    while(i<n1 && j<n2){\n        if( L[i].width <= R[j].width ){\n            rects[k] = L[i];\n            i++;\n        } else{\n            rects[k] = R[j];\n            j++;\n        }\n        k++;\n    }\n    while (i < n1) {\n        rects[k] = L[i];\n        i++;\n        k++;\n    }\n    while (j < n2) {\n        rects[k] = R[j];\n        j++;\n        k++;\n    }\n\n}\n\nfunction mergeS(rects,l,r){\n\n    if( l>=r ) return;\n    let m = l+ (r-l)/2;\n    m = Math.floor(m);\n   // console.log(\"iiiiiiiiiiiiiiiiiiiiiiiii \",m);\n    mergeS(rects,l,m);\n    mergeS(rects,m+1,r);\n    merge(rects,l,m,r);\n    let rectsCopy = rects.slice(l,r+1);\n    let value = {\n        left:l,\n        right:r,\n        mid:m,\n        val:rectsCopy\n    }\n    values.push(value);\n}","let values = [];\nexport default function HeapSort(rects2){\n    let rects = rects2.slice();\n    values = [];\n    let sz = rects2.length;\n   // sz = sz-1;\n    heapSort(rects,sz);\n    return values;\n}\nfunction heapify(rects,n,i){\n    let largest = i; // Initialize largest as root\n    let l = 2 * i + 1; // left = 2*i + 1\n    let r = 2 * i + 2; // right = 2*i + 2\n\n    // If left child is larger than root\n    if (l < n && rects[l].width > rects[largest].width)\n        largest = l;\n\n    // If right child is larger than largest so far\n    if (r < n && rects[r].width > rects[largest].width)\n        largest = r;\n\n    // If largest is not root\n    if (largest != i) {\n        let temp = rects[i];\n        rects[i] = rects[largest];\n        rects[largest] = temp;\n        let value = {\n            left:i,\n            right:largest,\n            sorted: false\n        }\n        values.push(value);\n        // Recursively heapify the affected sub-tree\n        heapify(rects, n, largest);\n    }\n}\nfunction heapSort(rects,n){\n    for(let i = Math.floor(n/2)-1;i>=0;i--){\n      //  console.log(\"heap \",n,\" \",i);\n        heapify(rects,n,i);\n    }\n    for (let i = n-1 ; i > 0; i--) {\n        // Move current root to end\n        let temp = rects[i];\n        rects[i] = rects[0];\n        rects[0] = temp;\n        let value = {\n            left:i,\n            right:0,\n            sorted:true\n        }\n        values.push(value);\n        // call max heapify on the reduced heap\n        heapify(rects, i, 0);\n    }\n}\n","let values = [];\n\nexport function quickSortRecursive(rects2){\n    let rects = rects2.slice();\n    values = [];\n    let sz = rects2.length;\n    // console.log( \"fdsfsd\",sz );\n    sz = sz-1;\n    quick(rects,0,sz);\n    return values;\n}\n\n\nfunction getPartition(rects, left, right){\n    values.push({\n        left,\n        right,\n        swap:false,\n        changedRange:true,\n    })\n    let pivot = rects[right].width\n    let it = left-1;\n    for(var j=left;j<=right-1;j++){\n        if( rects[j].width< pivot){\n            it++;\n            if( it!==j ){\n                // swap(rects[it],rects[j];\n                const rect1 = {...rects[it]};\n                const rect2 = {...rects[j]};\n                rects[it] = rect2;\n                rects[j] = rect1;\n                values.push({\n                    left:it,\n                    right:j,\n                    swap:true,\n                    changedRange:false,\n                })\n            }\n        }\n    }\n    if( it+1!==right ){\n        const rect1 = {...rects[it+1]};\n        const rect2 = {...rects[right]};\n        rects[it+1] = rect2;\n        rects[right] = rect1;\n        values.push({\n            left:it+1,\n            right:right,\n            swap:true,\n            changedRange:false,\n        })\n    }\n    return it+1;\n}\nfunction quick(rects,left,right){\n    if( left>=right ) return ;\n    const partition = getPartition(rects,left,right);\n    quick(rects,left,partition-1);\n    quick(rects,partition+1,right);\n}","import React, {Component} from 'react';\nimport {Link} from \"react-router-dom\";\n\nclass Navbar extends Component {\n    render() {\n        return (\n            <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n                <span className=\"navbar-brand\">Recursive Sorting Visualizer</span>\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\"\n                        data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\"\n                        aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                    <span className=\"navbar-toggler-icon\"></span>\n                </button>\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\" >\n                    <Link to={\"/\"}>\n                            <span style={{color:\"white\"}}>\n                                Home\n                            </span>\n                    </Link>\n                </div>\n\n            </nav>\n        );\n    }\n}\n\nexport default Navbar;","import React, {Component} from 'react';\nimport Rect from \"./rect\";\nimport Rects from \"./rects\";\nimport SortName from \"./SortName\";\nimport mergeSort from '../algorithms/mergeSort';\nimport heapSort from \"../algorithms/heapSort\";\nimport {quickSortRecursive} from \"../algorithms/quickSortRecursive\";\nimport Navbar from \"./navbar\";\nimport Menu from \"./menu\";\n\nclass RecursiveSort extends Component {\n    state = {\n        count: 20,\n        rects: [],\n        speed: 50,\n        isRunning: false,\n        algo: 0\n    }\n\n    constructor() {\n        super();\n    }\n\n    componentDidMount() {\n        var rects = getInitialRects(this.state.count);\n        this.setState({rects});\n        /* var rects2 = rects.slice();\n         console.log(rects2);\n         rects = mergeSort(rects);\n         console.log(rects);*/\n\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <Navbar/>\n                <Menu\n                    disable={this.state.isRunning}\n                    onViusalize={this.handleSort}\n                    onRandomize={this.handleRandomize}\n                    onRefresh={this.handleRefresh}\n                    onCountChange={this.handleCountChange}\n                    onAlgoChanged={this.handleAlgoChanged}\n                    onSpeedChange={this.handleSpeedChanged}\n                />\n                \n                <div className=' justify-content-center'>\n                    <Rects\n                        rects={this.state.rects}\n                    />\n\n                </div>\n                <div>\n                    {/* x={this.state.algo} */}\n                    <SortName\n                        sorts={this.state.algo}\n                    />\n                </div>\n            </React.Fragment>\n        );\n    }\n\n    /*    */\n\n    handleName = () => {\n\n        this.setState({isRunning: true});\n        let steps;\n        let rects2;\n        switch (this.state.algo) {\n\n            case 0:\n                // \"MergeSort\"\n                this.render(\n                    <p>MergeSort</p>\n                )\n                break;\n            case 1:\n                rects2 = this.state.rects.slice();\n                steps = heapSort(rects2);\n                this.handleHeap(steps);\n                break;\n            case 2:\n                rects2 = this.state.rects.slice();\n                steps = quickSortRecursive(rects2);\n                this.handleQuick(steps);\n                break;\n            default:\n        }\n\n\n    }\n    \n    /*  */\n    handleRandomize = () => {\n        const rect = getInitialRects(this.state.count);\n        this.setState({rects: rect});\n    }\n    handleRefresh = () => {\n        const rects = this.state.rects;\n        for (let i = 0; i < rects.length; i++) {\n            const rect = {...rects[i], isSorted: false, isSorting: false}\n            rects[i] = rect;\n            // alert(rects[i]);\n        }\n        this.setState({rects});\n    }\n    handleCountChange = (val) => {\n        this.setState({count: val});\n        this.handleRandomize();\n    }\n    handleAlgoChanged = (pos, val) => {\n        if (pos === 0) {\n            // console.log(\"sup 0\");\n            this.setState({algo: val});\n        }\n    }\n    handleSpeedChanged = (val) => {\n        const speed = (110 - val);\n        this.setState({speed});\n    }\n\n    handleSort = () => {\n\n        this.setState({isRunning: true});\n        let steps;\n        let rects2;\n        switch (this.state.algo) {\n\n            case 0:\n                steps = mergeSort(this.state.rects);\n                this.handleMerge(steps);\n                break;\n            case 1:\n                rects2 = this.state.rects.slice();\n                steps = heapSort(rects2);\n                this.handleHeap(steps);\n                break;\n            case 2:\n                rects2 = this.state.rects.slice();\n                steps = quickSortRecursive(rects2);\n                this.handleQuick(steps);\n                break;\n            default:\n        }\n\n\n    }\n\n    handleQuick = async (steps) =>{\n        this.setState({isRunning: true});\n        let prevRect = this.state.rects;\n        for (let j = 0; j < this.state.count; j++) {\n            prevRect[j] = {...prevRect[j], isLeft: false,isSorting: false,isRight:false,isRange:false,isSorted: false};\n        }\n        this.setState({rects: prevRect});\n        let hasChanged = -1;\n        let changed;\n        for(let i=0;i<steps.length;i++){\n            let step = steps[i];\n            if( hasChanged!==-1 ){\n                let {left,right} = changed;\n                prevRect[left] = {...prevRect[left], isLeft: false,isSorting: false,isRight:false,isRange:false};\n                prevRect[right] = {...prevRect[right], isLeft: false,isSorting: false,isRight:false,isRange:false};\n            }\n            if( step.changedRange ){\n                await sleep(this.state.speed);await sleep(this.state.speed);await sleep(this.state.speed);await sleep(this.state.speed);\n                let {left,right} = step;\n                for (let j = 0; j < this.state.count; j++) {\n                    prevRect[j] = {...prevRect[j], isLeft: false,isSorting: false,isRight:false,isRange:false};\n                }\n                for (let j = left; j <=right; j++) {\n                    prevRect[j] = {...prevRect[j], isLeft: false,isSorting: false,isRight:true,isRange:true};\n                }\n                this.setState({rects: prevRect});\n                await sleep(this.state.speed);await sleep(this.state.speed);await sleep(this.state.speed);await sleep(this.state.speed);\n                for (let j = 0; j < this.state.count; j++) {\n                    prevRect[j] = {...prevRect[j], isLeft: false,isSorting: false,isRight:false};\n                }\n            }else if(step.swap){\n                let {left,right} = step;\n                prevRect[left] = {...prevRect[left], isLeft: false,isSorting: true,isRight:false,isRange:false};\n                prevRect[right] = {...prevRect[right], isLeft: true,isSorting: false,isRight:false,isRange:false};\n                let temp = prevRect[left];\n                prevRect[left] = prevRect[right];\n                prevRect[right] = temp;\n                hasChanged = 1;\n                changed = step;\n            }\n            this.setState({rects: prevRect});\n            await sleep(this.state.speed);\n            if (i === steps.length - 1) {\n                for (let j = 0; j < this.state.count; j++) {\n                    prevRect[j] = {...prevRect[j], isLeft: false,isSorting: false,isRight:false,isSorted: false,isRange:false};\n                }\n                this.setState({rects: prevRect});\n                for (let j = 0; j < this.state.count; j++) {\n                    prevRect[j] = {...prevRect[j], isLeft: false,isSorting: false,isRight:false,isSorted: true,isRange:false};\n                    this.setState({rects: prevRect});\n                    await sleep(10);\n                }\n                this.setState({isRunning: false,rects: prevRect});\n            }\n        }\n    }\n    handleHeap = async (steps) =>{\n        this.setState({isRunning: true});\n        let prevRect = this.state.rects;\n        for (let j = 0; j < this.state.count; j++) {\n            prevRect[j] = {...prevRect[j], isLeft: false,isSorting: false,isRight:false,isRange:false,isSorted: false};\n        }\n        this.setState({rects: prevRect});\n\n        for(let i = 0;i<steps.length;i++){\n            let step = steps[i];\n            //   console.log(step);\n            for (let i = 0; i < this.state.count; i++) {\n                prevRect[i] = {...prevRect[i], isLeft: false,isSorting: false,isRight:false};\n            }\n            let {left,right,sorted} = step;\n            prevRect[left] = {...prevRect[left],isLeft:true};\n            prevRect[right] = {...prevRect[right],isRight:true};\n            this.setState({rects: prevRect});\n            await sleep(this.state.speed);\n            let temp = prevRect[left];\n            prevRect[left] = prevRect[right];\n            prevRect[right] = temp;\n            this.setState({rects: prevRect});\n            if( sorted ) prevRect[left] = {...prevRect[left],isSorted: true};\n            await sleep(this.state.speed);await sleep(this.state.speed);await sleep(this.state.speed);\n            if (i === steps.length - 1) {\n\n                for (let i = 0; i < this.state.count; i++) {\n                    prevRect[i] = {...prevRect[i], isLeft: false,isSorting: false,isRight:false,isSorted: true};\n                    this.setState({rects: prevRect});\n                    await sleep(this.state.speed);\n                }\n                this.setState({isRunning: false,rects: prevRect});\n            }\n        }\n    }\n    handleMerge = async (steps) => {\n        this.setState({isRunning1: true});\n\n        const {speed} = this.state;\n\n        let prevRect = this.state.rects;\n        for (let j = 0; j < this.state.count; j++) {\n            prevRect[j] = {...prevRect[j], isLeft: false,isSorting: false,isRight:false,isRange:false,isSorted: false};\n        }\n        this.setState({rects: prevRect});\n        await sleep(this.state.speed);\n      //  console.log(\"steps \", steps.length);\n        for (let ii = 0; ii < steps.length; ii++) {\n            let step = steps[ii];\n            for (let i = 0; i < this.state.count; i++) {\n                prevRect[i] = {...prevRect[i], isLeft: false,isSorting: false,isRight:false};\n            }\n           // console.log(step.left,\" \",step.mid,\" \",step.right);\n            for (let i = step.left; i <= step.mid; i++) {\n                prevRect[i] = {...prevRect[i], isLeft: true,isSorting: false};\n            }\n            for (let i = step.mid + 1; i <= step.right; i++) {\n                prevRect[i] = {...prevRect[i], isRight: true,isLeft:false,isSorting: false};\n            }\n            this.setState({rects: prevRect});\n            await sleep(this.state.speed);await sleep(this.state.speed);await sleep(this.state.speed);\n          //  console.log(step);\n            for(let i= step.left;i<=step.right;i++){\n                prevRect[i] = {...prevRect[i],width:step.val[i-step.left].width,isSorting: true };\n                this.setState({rects: prevRect});\n                await sleep(this.state.speed);\n            }\n\n            if (ii === steps.length - 1) {\n\n                for (let i = 0; i < this.state.count; i++) {\n                    prevRect[i] = {...prevRect[i], isLeft: false,isSorting: false,isRight:false,isSorted: true};\n                    this.setState({rects: prevRect});\n                    await sleep(this.state.speed);\n                }\n                this.setState({isRunning: false});\n            }\n\n            this.setState({rects: prevRect});\n            await sleep(this.state.speed);\n            prevRect = this.state.rects;\n          /*  for (let i = 0; i < this.state.count; i++) {\n                prevRect[i] = {...prevRect[i], isLeft: false,isSorting: false,isRight:false,isSorted: false};\n            }*/\n            this.setState({rects: prevRect});\n        }\n    }\n\n}\n\nfunction sleep(ms) {\n    return new Promise(resolve => setTimeout(resolve, ms));\n}\n\nconst getInitialRects = (tot) => {\n    const rects = [];\n    for (let i = 0; i < tot; i++) {\n        rects.push(getRect());\n    }\n    return rects;\n}\nconst getRect = () => {\n    return {\n        width: Math.floor(Math.random() * 200) + 50,\n        isSorted: false,\n        isSorting: false,\n        isLeft: false,\n        isRight: false\n    }\n}\n\nexport default RecursiveSort;","import React, {Component} from 'react';\n\nclass Vertex extends Component {\n\n    constructor() {\n        super();\n\n    }\n    componentDidMount() {\n        if( this.props.id === 0 ) return;\n        // document.getElementById('ranim'+this.props.id).beginElement();\n        document.getElementById('cxanim'+this.props.id).beginElement();\n        document.getElementById('cyanim'+this.props.id).beginElement();\n        document.getElementById('tanim'+this.props.id).beginElement();\n    }\n    render() {\n\n        return (\n            <g>\n                <circle\n                    cx={this.props.pos.x}\n                    cy={this.props.pos.y}\n                    r={6}\n                    // ry={3}\n                    stroke=\"black\" stroke-width=\"0.5\" fill={this.props.current?'cyan':'white'}\n                >\n                    <animate\n                        id={'cxanim'+this.props.id}\n                        attributeName='cx'\n                        values={this.props.pos.px+\";\"+this.props.pos.x}\n                        dur='0.5s'\n                        repeatCount=\"1\"\n                    />\n                    <animate\n                        id={'cyanim'+this.props.id}\n                        attributeName='cy'\n                        values={this.props.pos.py+\";\"+this.props.pos.y}\n                        dur='0.5s'\n                        repeatCount=\"1\"\n                    />\n                    {/*<animate*/}\n                    {/*    id={'ranim'+this.props.id}*/}\n                    {/*    attributeName='rx'*/}\n                    {/*    values='0;3'*/}\n                    {/*    dur='0.5s'*/}\n                    {/*    repeatCount=\"1\"*/}\n                    {/*/>*/}\n                    {/*<animate*/}\n                    {/*    id={'vbanim'}*/}\n                    {/*    attributeName='cx'*/}\n                    {/*    values={(this.state.poss.x-50)+';'+this.state.poss.x}*/}\n                    {/*    dur='2s'*/}\n                    {/*    repeatCount=\"1\"*/}\n                    {/*/>*/}\n                </circle>\n                <text\n                    style={{font:'3px sans-serif'}}\n                    x={this.props.pos.x}\n                    y={this.props.pos.y-4}\n                    textAnchor={'middle'}\n                    // alignmentBaseline={'top'}\n                >\n                    <animate\n                        id={'tanim'+this.props.id}\n                        attributeName='opacity'\n                        values='0;0;1'\n                        dur='1s'\n                        repeatCount=\"1\"\n                    />\n                    <tspan x={this.props.pos.x} dy='1.2em' >N:{this.props.label}</tspan>\n                    <tspan  x={this.props.pos.x} dy='1.2em'>R:{this.props.ret}</tspan>\n                </text>\n\n            </g>\n        );\n    }\n}\n\nfunction sleep(ms) {\n    return new Promise(resolve => setTimeout(resolve, ms));\n}\n\nexport default Vertex;","import React, {Component} from 'react';\n\nclass Edge extends Component {\n    constructor() {\n        super();\n        this.state={\n            x1:0\n        }\n    }\n    componentDidMount() {\n        this.setState({x1:this.props.pos.x1});\n        document.getElementById('vbanim1'+this.props.id).beginElement();\n        document.getElementById('vbanim2'+this.props.id).beginElement();\n    }\n\n    componentDidUpdate(prevProps) {\n        if (this.state.x1 !== this.props.pos.x1) {\n            this.setState({x1:this.props.pos.x1});\n            document.getElementById('vbanim1'+this.props.id).beginElement();\n            document.getElementById('vbanim2'+this.props.id).beginElement();\n        }\n    }\n    getPolyPoints = ()=>{\n        let x1 = this.props.pos.x1;\n        let y1 = this.props.pos.y1;\n        let x2 = this.props.pos.x2;\n        let y2 = this.props.pos.y2;\n        let l = Math.sqrt((x1-x2)*(x1-x2)+(y1-y2)*(y1-y2));\n        let r = 6.5;\n        let xx1 = ( x1*(l-r)+x2*r )/l;\n        let yy1 = ( y1*(l-r)+y2*r )/l;\n        return xx1+\",\"+yy1+\" \"+x2+\",\"+y2;\n    }\n    getPolyPointsX = ()=>{\n        let x1 = this.props.pos.x1;\n        let y1 = this.props.pos.y1;\n        let x2 = this.props.pos.x2;\n        let y2 = this.props.pos.y2;\n        let l = Math.sqrt((x1-x2)*(x1-x2)+(y1-y2)*(y1-y2));\n        let r = 6.5;\n        let xx1 = ( x2*(l-r)+x1*r )/l;\n        let yy1 = ( y2*(l-r)+y1*r )/l;\n        return xx1;\n        // return xx1+\",\"+yy1+\" \"+x2+\",\"+y2;\n    }\n    getPolyPointsY = ()=>{\n        let x1 = this.props.pos.x1;\n        let y1 = this.props.pos.y1;\n        let x2 = this.props.pos.x2;\n        let y2 = this.props.pos.y2;\n        let l = Math.sqrt((x1-x2)*(x1-x2)+(y1-y2)*(y1-y2));\n        let r = 6.5;\n        let xx1 = ( x2*(l-r)+x1*r )/l;\n        let yy1 = ( y2*(l-r)+y1*r )/l;\n        return yy1;\n        // return xx1+\",\"+yy1+\" \"+x2+\",\"+y2;\n    }\n    render() {\n        return (\n            <g>\n                <defs>\n                    <marker id=\"arrow\" viewBox=\"0 0 10 10\" refX=\"5\" refY=\"5\"\n                            markerWidth=\"4\" markerHeight=\"4\"\n                            orient=\"auto-start-reverse\">\n                        <path d=\"M 0 0 L 10 5 L 0 10 z\" />\n                    </marker>\n                </defs>\n                <line x2={this.getPolyPointsX()} y2={this.getPolyPointsY()} x1={this.props.pos.x1} y1={this.props.pos.y1}\n                      style={{stroke:'black', strokeWidth:'0.5'}}\n                      marker-end=\"url(#arrow)\"\n                >\n                    <animate\n                        id={'vbanim1'+this.props.id}\n                        attributeName='x2'\n                        values={this.props.pos.x1+';'+this.getPolyPointsX()}\n                        dur='0.5s'\n                        repeatCount=\"1\"\n                    />\n                    <animate\n                        id={'vbanim2'+this.props.id}\n                        attributeName='y2'\n                        values={this.props.pos.y1+';'+this.getPolyPointsY()}\n                        dur='0.5s'\n                        repeatCount=\"1\"\n                    />\n                </line>\n                {/*<polyline points={this.getPolyPoints()} fill=\"none\" stroke=\"black\" strokeWidth={'0.5'}*/}\n                {/*          marker-start=\"url(#arrow)\" />*/}\n            </g>\n        );\n    }\n}\n\nexport default Edge;","import React, {Component} from 'react';\nimport Vertex from \"./vertex\";\nimport Edge from \"./edge\";\n\nclass CanvasSvg extends Component {\n    constructor() {\n        super();\n        this.state = {\n            pos: {\n                x: 50,\n                y: 10\n            }\n        }\n    }\n\n    increamentXY = ()=>{\n        let pos = this.state.pos;\n        pos.x = (pos.x+50)%240;\n        this.setState({pos});\n    }\n\n    render() {\n        console.log(this.props.vertices.length);\n        let off = this.props.offset;\n        return (\n            <div>\n                <svg viewBox=\"0 0 240 150\" xmlns=\"http://www.w3.org/2000/svg\">\n                    {\n                        this.props.edges.map((edge, cellidx) => {\n                            return (\n                                <Edge\n                                    // key={vertex.id}\n                                    id={cellidx}\n\n                                    pos={ {x1:(edge.x1-off)*15+120,y1:edge.y1*15+10,\n                                        x2:(edge.x2-off)*15+120,y2:edge.y2*15+10} }\n                                />\n                            );\n                        })}\n                    {/* } */}\n                    {\n                        this.props.vertices.map((vertex, cellidx) => {\n                            return (\n                                <Vertex\n                                    // key={vertex.id}\n                                    id={cellidx}\n                                    current={this.props.current === cellidx}\n                                    label={vertex.label}\n                                    ret={vertex.val}\n                                    pos={ {x:(vertex.x-off)*15+120,y:vertex.y*15+10,\n                                        px:(vertex.px-off)*15+120,py:vertex.py*15+10} }\n                                />\n                            );\n                        })}\n                    {/* } */}\n\n\n                </svg>\n            </div>\n        )\n            ;\n    }\n}\n\nexport default CanvasSvg;","// draw tree class functions start :/\n\n\nexport class Tree{\n    constructor(node=0,children=[],label=\"\") {\n        this.id = 0;\n        this.node = node;\n        this.label = label;\n        this.width = node.length;\n        this.children = children;\n    }\n}\n\nexport class DrawTree{\n    constructor(tree,parent=undefined,depth=0,number=1) {\n        this.x =-1;\n        this.y = depth;\n        this.tree = tree;\n        this.children = [];\n        for( let i=0;i<tree.children.length;i++ ){\n            let newTree = new DrawTree(tree.children[i],this,depth+1,i+1);\n            this.children.push(newTree);\n        }\n        this.parent = parent;\n        this.thread = undefined;\n        this.mod = 0;\n        this.ancestor = this;\n        this.change = 0;\n        this.shift = 0;\n        this._lmost_sibling = undefined;\n        this.number = number;\n        // this.lmost_sibling = this.get_lmost_sibling();\n    }\n\n    left = ()=>{\n        if( this.thread!==undefined ) return this.thread;\n        if( this.children.length!==0 ) return this.children[0];\n        return undefined;\n        return this.thread || this.children.length && this.children[0];\n    }\n    right = ()=>{\n        if( this.thread ) return this.thread;\n        if( this.children.length ) return this.children[this.children.length-1];\n        return undefined;\n        return this.thread || this.children.length && this.children[-1];\n    }\n    lbrother = ()=>{\n        let n = undefined;\n        if( this.parent ){\n            // for(let node in this.parent.children)\n            for(let i=0;i<this.parent.children.length;i++)\n            {\n                let node = this.parent.children[i];\n                if( node === this ){\n                    return n;\n                }else{\n                    n = node;\n                }\n            }\n        }\n        return n;\n    }\n    get_lmost_sibling = ()=>{\n        if( !this._lmost_sibling && this.parent && this!==this.parent.children[0] ){\n            this._lmost_sibling = this.parent.children[0];\n        }\n        return this._lmost_sibling;\n    }\n\n\n}\n\n\n\n\nexport function buchheim(tree) {\n    let dt = firstwalk(new DrawTree(tree))\n    let min = second_walk(dt)\n    if (min < 0) {\n        third_walk(dt, -min);\n    }\n    return dt\n}\n\nfunction third_walk(tree, n) {\n    tree.x += n;\n    //for (let c in tree.children)\n    for(let i=0;i<tree.children;i++)\n    {\n        let c = tree.children[i];\n        third_walk(c, n);\n    }\n}\n\nfunction firstwalk(v, distance = 1) {\n    //console.log('hue hue hue',v);\n    if (v.children.length === 0) {\n        if (v.get_lmost_sibling()) {\n            v.x = v.lbrother().x + distance;\n        } else {\n            v.x = 0.;\n        }\n    } else {\n        let default_ancestor = v.children[0];\n        //for (let w in v.children)\n        for(let i=0;i<v.children.length;i++) {\n            let w = v.children[i];\n            firstwalk(w);\n            default_ancestor = apportion(w, default_ancestor, distance);\n        }\n        // console.log(\"finished v =\", v.tree, \"children\");\n        execute_shifts(v);\n\n        let midpoint = (v.children[0].x + v.children[v.children.length-1].x) / 2;\n\n        let ell = v.children[0];\n        let arr = v.children[-1];\n        let w = v.lbrother();\n        if (w) {\n            v.x = w.x + distance;\n            v.mod = v.x - midpoint;\n        } else {\n            v.x = midpoint;\n        }\n    }\n    return v;\n}\n\n\nfunction apportion(v, default_ancestor, distance) {\n\n    let w = v.lbrother();\n    if (w !== undefined) {\n        // inbuchheimnotation:\n        //i == inner;o == outer;r == right;l == left;r = +;l = -\n        let vir, vor, vil, vol, sir, sor, sol, sil;\n        vir = vor = v;\n        vil = w;\n        vol = v.get_lmost_sibling();\n        sir = sor = v.mod;\n        sil = vil.mod;\n        sol = vol.mod;\n        while (vil.right() && vir.left()) {\n            vil = vil.right();\n            vir = vir.left();\n            vol = vol.left();\n            vor = vor.right();\n            vor.ancestor = v;\n            let shift = (vil.x + sil) - (vir.x + sir) + distance;\n            if (shift > 0) {\n                move_subtree(ancestor(vil, v, default_ancestor), v, shift);\n                sir = sir + shift;\n                sor = sor + shift;\n            }\n            sil += vil.mod;\n            sir += vir.mod;\n            sol += vol.mod;\n            sor += vor.mod;\n        }\n        if (vil.right() && !vor.right()) {\n            vor.thread = vil.right();\n            vor.mod += sil - sor;\n        } else {\n            if (vir.left() && !vol.left()) {\n                vol.thread = vir.left();\n                vol.mod += sir - sol;\n            }\n            default_ancestor = v\n        }\n    }\n    return default_ancestor\n}\n\nfunction move_subtree(wl, wr, shift) {\n    let subtrees = wr.number - wl.number;\n    // console.log(wl.tree, \"is conflicted with\", wr.tree, 'moving', subtrees, 'shift', shift);\n    // print wl, wr, wr.number, wl.number, shift, subtrees, shift / subtrees\n    wr.change -= shift / subtrees;\n    wr.shift += shift;\n    wl.change += shift / subtrees;\n    wr.x += shift;\n    wr.mod += shift;\n}\n\nfunction execute_shifts(v) {\n    let shift, change;\n    shift = change = 0;\n    // for (let w in v.children[:: - 1])\n    for(let i=v.children.length-1;i>=0;i--){\n        let w = v.children[i];\n        //console.log(\"shift:\", w.tree.node, shift, w.change);\n        w.x += shift;\n        w.mod += shift;\n        change += w.change;\n        shift += w.shift + change;\n    }\n}\n\nfunction ancestor(vil, v, default_ancestor) {\n\n    if (vil.ancestor in v.parent.children){\n\n        return vil.ancestor;\n    }\n    else\n        return default_ancestor;\n}\n\nfunction second_walk(v, m = 0, depth = 0, min = undefined) {\n    v.x += m;\n    v.y = depth;\n\n    if (min === undefined || v.x < min)\n        min = v.x;\n\n    // for (let w in v.children)\n    for(let i=0;i<v.children.length;i++){\n        let w = v.children[i];\n        min = second_walk(w, m + v.mod, depth + 1, min);\n    }\n    return min;\n}\n\nfunction dfs(tree){\n    if( tree.tree.node === 'B' ) return;\n    console.log( tree.tree.node, tree.x,tree.y );\n    for(let i=0;i<tree.children.length;i++)\n        dfs(tree.children[i]);\n}\n/*\nlet blank = new Tree('B',[]);\nlet ll = new Tree(\"ll\",[]);\nlet lr = new Tree(\"lr\",[]);\nlet rr = new Tree(\"rr\",[]);\nlet rl = new Tree(\"rl\",[]);\nlet l = new Tree(\"l\",[ll,lr]);\nlet r = new Tree(\"r\",[rl,rr]);\nlet root = new Tree(\"root\",[l,r] );\n\nlet tree = buchheim(root);\nconsole.log(\"==================================================================\");\ndfs(tree);\n*/\n","import {Tree,buchheim} from './Tree';\nexport function getTree(n,algo=0,r=0){\n    if(algo === 0)\n        return buchheim( fib(n) );\n    else if( algo === 1 )\n        return buchheim(NcR(n,r));\n    else if( algo === 2 )\n        return buchheim(derangement(n));\n    else if( algo === 3 )\n        return buchheim(bigmod(n,r));\n    else if( algo === 4 )\n        return buchheim(stirling2(n,r));\n}\n\nfunction fib(n){\n    let tree = new Tree(n,[],n+\"\");\n    if( n <2 ) return tree;\n    tree.children.push( fib(n-1) );\n    tree.children.push( fib(n-2) );\n    tree.node = tree.children[0].node+tree.children[1].node;\n    return tree;\n}\n\nfunction sib(n){\n    let tree = new Tree(n,[]);\n    if( n <3 ) return tree;\n    tree.children.push( sib(n-2) );\n    tree.children.push( sib(n-3) );\n    tree.node = tree.children[0].node+tree.children[1].node;\n    return tree;\n}\n\nfunction NcR(n,r){\n    if (r > n)\n        return new Tree(-1,[],\"(\"+n+\",\"+r+\")\");\n\n    if (n === r)\n        return new Tree(1,[],\"(\"+n+\",\"+r+\")\");\n\n    if (r === 0)\n        return new Tree(1,[],\"(\"+n+\",\"+r+\")\");;\n\n    // nCr(n, r) = nCr(n - 1, r - 1) + nCr(n - 1, r)\n    let tree = new Tree(0,[],\"(\"+n+\",\"+r+\")\");\n    tree.children.push( NcR(n-1,r-1) );\n    tree.children.push( NcR(n-1,r) );\n    tree.node = tree.children[0].node+tree.children[1].node;\n    return tree;\n}\n\nfunction derangement(n){\n    if( n == 0 ) return new Tree(1,[],n+\"\");\n    if( n == 1 ) return new Tree(0,[],n+\"\");\n    let tree = new Tree(0,[],n+\"\");\n    tree.children.push( derangement(n-1) );\n    tree.children.push( derangement(n-2) );\n    tree.node = (n-1)*(tree.children[0].node+tree.children[1].node);\n    return tree;\n}\n\nfunction bigmod(n,r){\n    if( r === 0 ) return new Tree(1,[],\"(\"+n+\",\"+r+\")\");\n    if( r === 1 ) return new Tree(n,[],\"(\"+n+\",\"+r+\")\");\n    let tree = new Tree(1,[],\"(\"+n+\",\"+r+\")\");\n    if( r%2 === 1 ){\n        tree.children.push( bigmod(n,(r-1)/2 ) );\n        tree.children.push( bigmod(n,(r-1)/2) );\n        tree.children.push( bigmod(n,1) );\n    }else{\n        tree.children.push( bigmod(n,r/2 ) );\n        tree.children.push( bigmod(n,r/2) );\n    }\n    for(let i=0;i<tree.children.length;i++){\n        tree.node *= tree.children[i].node;\n    }\n    return tree;\n}\n\nfunction stirling2(n,r){\n    if( n === r ) return new Tree(1,[],\"(\"+n+\",\"+r+\")\");\n    if( r === 0 ) return new Tree(0,[],\"(\"+n+\",\"+r+\")\");\n\n    let tree = new Tree(0,[],\"(\"+n+\",\"+r+\")\");\n    tree.children.push( stirling2(n-1,r) );\n    tree.children.push( stirling2(n-1,r-1) );\n    tree.node = tree.children[0].node*r+tree.children[1].node;\n    return tree;\n}","import React from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport Edge from \"./edge\";\n\nconst useStyles = makeStyles((theme) => ({\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 120,\n    },\n    selectEmpty: {\n        marginTop: theme.spacing(2),\n    },\n}));\n\nconst SimpleSelect = (props) => {\n    const classes = useStyles();\n    const [age, setAge] = React.useState('0');\n    const [state, setState] = React.useState({\n        pos: props.pos,\n    });\n    const handleChange = (event) => {\n        console.log(state.pos);\n        setAge(event.target.value);\n        props.onValueChanged(state.pos, event.target.value);\n    };\n    // console.log(props.items);\n    return (\n        <div className=\"ml-2 mr-2\">\n            <FormControl className={classes.formControl}>\n                <InputLabel id=\"demo-simple-select-label\">{props.label}</InputLabel>\n                <Select\n                    labelId=\"demo-simple-select-label\"\n                    id=\"demo-simple-select\"\n                    value={age}\n                    onChange={handleChange}\n                >\n                    {props.items.map((item, cellidx) => {\n                        return (\n                            <MenuItem value={cellidx} style={{selected: true}}>{item}</MenuItem>\n                        );\n                    })}\n                </Select>\n            </FormControl>\n        </div>\n    );\n}\n\nexport default SimpleSelect;","import React, {Component} from 'react';\nimport SimpleSelect from \"./simpleSelect\";\n\n\nclass Menu extends Component {\n    render() {\n        return (\n            <nav className=\"nav alert-dark\">\n\n\n                {/*<DiscreteSlider*/}\n                {/*    default={50}*/}\n                {/*    min={10}*/}\n                {/*    max={100}*/}\n                {/*    step={1}*/}\n                {/*    title=\"Speed\"*/}\n                {/*    onCountChange={this.props.onSpeedChange}*/}\n                {/*    disable={false}*/}\n                {/*/>*/}\n                <SimpleSelect\n                    pos={0}\n                    label={'Task'}\n                    items={['Fibonacci','Binomial Coefficient',\"Derangement\",\"Bigmod\",\"Stirling2\"]}\n                    onValueChanged={this.props.setAlgo}\n                />\n                <SimpleSelect\n                    pos={0}\n                    label={'N'}\n                    items={[0,1,2,3,4,5,6]}\n                    onValueChanged={this.props.setN}\n                />\n                <SimpleSelect\n                    pos={0}\n                    label={'R'}\n                    items={[0,1,2,3,4,5,6]}\n                    onValueChanged={this.props.setR}\n                />\n                <button\n                    className='btn btn-warning btn-lg m-2'\n                    onClick={this.props.onReset}\n                    disabled={this.props.disable}\n                >Reset</button>\n\n                <button\n                    className='btn btn-warning btn-lg '\n                    onClick={this.props.onStart}\n                    disabled={this.props.disable}\n                >Visualize</button>\n\n            </nav>\n    );\n    }\n    isClickable = () =>\n        {\n            if (this.props.disable) {\n                return {cursor: \"not-allowed\"};\n            } else {\n                return {};\n            }\n        }\n    }\n\n\n    export default Menu;","import React, {Component} from 'react';\nimport {Link} from \"react-router-dom\";\n\nclass Navbar extends Component {\n    render() {\n        return (\n            <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\" style={{backgroundColor:\"black\"}}>\n                <span className=\"navbar-brand\">Recursion Tree</span>\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\"\n                        data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\"\n                        aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                    <span className=\"navbar-toggler-icon\"></span>\n                </button>\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\" >\n                    <Link to={\"/\"}>\n                        <span style={{color:\"white\"}}>\n                            Home\n                        </span>\n                    </Link>\n                </div>\n\n            </nav>\n        );\n    }\n}\n\nexport default Navbar;","import React, {Component} from 'react';\n\nclass Details extends Component {\n\n    Switcherr = () => {\n        switch (this.props.algo) {\n            case 0:\n                return <div className='row bg-info m-0 p-2'>\n                    <div className='col-3  card me-1 bg-light '>\n                        The Fibonacci sequence, in which each number is the sum of the two preceding ones. The sequence\n                        commonly starts from 0 and 1\n                    </div>\n                    <div className='col-3  card me-1 bg-light '>\n                        N = Nth fibonacchi Number\n                    </div>\n                    <div className='col-3  bg-light '>\n                        function = nCr(n,r)\n                    </div>\n                    <div className='col-3  card me-1 bg-light'>\n                        Fib(0) = 0 <br/>\n                        Fib(1) = 1 <br/>\n                        Fib(n) = Fib(n-1) + Fib(n-2)\n                    </div>\n                </div>;\n\n            case 1:\n                return <div className='row bg-info m-0 p-2 '>\n                    <div className='col-3  card me-1 bg-light'>\n                        In mathematics, the binomial coefficients are the positive integers that occur as coefficients\n                        in the binomial theorem. It is the coefficient of\n                        the x^k term in the polynomial expansion of the binomial power (1+x)^n\n                    </div>\n                    <div className='col-3  card me-1 bg-light'>\n                        nCr = n! / ( k! * (n-k)! )\n                    </div>\n                    <div className='col-3  card me-1 bg-light'>\n                        function = nCr(n,r)\n                    </div>\n                    <div className='col-3  card me-1 bg-light'>\n                        nCr(a,a) = 1 <br/>\n                        nCr(a,0) = 1 <br/>\n                        nCr(n,r) = nCr(n-1,r-1)+nCr(n-1,r)\n                    </div>\n                </div>;\n            case 2:\n                return <div className='row bg-info m-0 p-2 '>\n                    <div className='col-3  card me-1 bg-light '>\n                        In combinatorial mathematics, a derangement is a permutation of the elements of a set, such that\n                        no element appears in its original position.\n                    </div>\n                    <div className='col-3  card me-1 bg-light '>\n                        N = Nth Derangement\n                    </div>\n                    <div className='col-3  card me-1 bg-light '>\n                        function = der(n)\n                    </div>\n                    <div className='col-3  card me-1 bg-light '>\n                        der(0) = 1 <br/>\n                        der(1) = 0 <br/>\n                        der(n) = (n-1) * ( der(n-1) + der(n-2) )\n                    </div>\n                </div>;\n            case 3:\n                return <div className='row bg-info m-0 p-2 '>\n                    <div className='col-3  card me-1 bg-light '>\n                        N = Number\n                        P = Power\n                    </div>\n                    <div className='col-3  card me-1 bg-light '>\n                        function = bigmod(n,p)\n                    </div>\n                    <div className='col-3  card me-1 bg-light '>\n                        bigmod(a,0) = 1 <br/>\n                        bigmod(a,1) = a <br/>\n                        bigmod(n,p) = bigmod(n,p/2)^2; p is even <br/>\n                        bigmod(n,p) = bigmod(n,(p-1)/2)^2 * n ; p is odd\n                    </div>\n                </div>;\n            case 4:\n                return <div className='row bg-info m-0 p-2 '>\n                    <div className='col-3  card me-1 bg-light '>\n                        a Stirling number of the second kind (or Stirling partition number) is the number of ways to\n                        partition a set of n objects into k non-empty subsets\n                    </div>\n                    <div className='col-3  card me-1 bg-light '>\n                        N = Row\n                        R = Column\n                    </div>\n                    <div className='col-3  card me-1 bg-light '>\n                        function = stir2(n,r)\n                    </div>\n                    <div className='col-3  card me-1 bg-light '>\n                        stir2(a,a) = 1 <br/>\n                        stir2(0,a) = 0 <br/>\n                        stir2(n,r) = stir2(n-1,r) * r + stir2(n-1,r-1)\n\n                    </div>\n                </div>;\n\n            default:\n                return <b>Henlo</b>;\n\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                {this.Switcherr()}\n            </div>\n        );\n    }\n}\n\nexport default Details;","import React, {Component} from 'react';\nimport CanvasSvg from \"./canvasSVG\";\nimport {getFibTree, getTree} from \"./fib\";\nimport Menu from \"./menu\";\nimport Navbar from \"./navbar\";\nimport Details from \"./details\";\n\nclass Graph extends Component {\n    constructor() {\n        super();\n        this.state = {\n            root:undefined,\n            vertices:[],\n            edges:[],\n            current:-1,\n            n:0,\n            r:2,\n            algo:0,\n            offset:0\n        }\n    }\n    // setNumber = (event)=>{\n    //     let value = event.target.valueAsNumber;\n    //     if(value!== NaN && value<99)\n    //         this.setState({inputNumber:value});\n    //\n    //     // document\n    // }\n    setAlgo = (pos, val) => {\n        if (pos === 0) {\n            // console.log(\"sup 0\");\n            this.setState({algo: val});\n        }\n    }\n    setN = (pos, val) => {\n        if (pos === 0) {\n            // console.log(\"sup 0\");\n            this.setState({n: val});\n        }\n    }\n    setR = (pos, val) => {\n        if (pos === 0) {\n            // console.log(\"sup 0\");\n            this.setState({r: val});\n        }\n    }\n    addNumber = ()=>{\n        // console.log(getFibTree(3));\n        let tree = getTree(this.state.n,this.state.algo,this.state.r);\n        this.setState({edges:[],vertices:[],offset:tree.x});\n        this.state.vertices = [];\n        // this.setState({});\n        this.recur(tree,undefined);\n\n    }\n    recur = async (node,parent)=>{\n\n        let vertices = this.state.vertices;\n        let current = this.state.vertices.length;\n\n\n        if( parent!==undefined ){\n            if( node.children.length )\n                vertices.push({label:node.tree.label,val:0,x:node.x,y:node.y,px:parent.x,py:parent.y});\n            else\n                vertices.push({label:node.tree.label,val:node.tree.node,x:node.x,y:node.y,px:parent.x,py:parent.y});\n            this.setState({vertices,current});\n\n\n\n            let edges = this.state.edges;\n            edges.push({\n                x1:parent.x,\n                y1:parent.y,\n                x2:node.x,\n                y2:node.y\n            });\n            this.setState({edges});\n        }else{\n            if( node.children.length )\n                vertices.push({label:node.tree.label,val:0,x:node.x,y:node.y,px:node.x,py:node.y});\n            else\n                vertices.push({label:node.tree.label,val:node.tree.node,x:node.x,y:node.y,px:node.x,py:node.y});\n            this.setState({vertices,current});\n        }\n        await sleep(500);\n\n\n        for(let i=0;i<node.children.length;i++){\n            await this.recur( node.children[i],node );\n            // let verticess = [...this.state.vertices];\n            // verticess[current].val+=node.children[i].tree.node;\n            this.setState({current});\n            await sleep(500);\n        }\n        let verticess = [...this.state.vertices];\n        verticess[current].val=node.tree.node;\n        this.setState({vertices:verticess});\n    }\n    render() {\n        return (\n            <div>\n                <Navbar/>\n                <Menu\n                    setN={this.setN}\n                    setR={this.setR}\n                    setAlgo={this.setAlgo}\n                    onStart={this.addNumber}\n                />\n                <Details\n                    algo={this.state.algo}\n                />\n                <CanvasSvg\n                    vertices={this.state.vertices}\n                    edges={this.state.edges}\n                    current={this.state.current}\n                    offset={this.state.offset}\n                />\n            </div>\n        );\n    }\n}\nfunction sleep(ms) {\n    return new Promise(resolve => setTimeout(resolve, ms));\n}\nexport default Graph;","import React, {Component} from 'react';\n\nimport {HashRouter as Router, Switch, Route} from 'react-router-dom';\nimport Pathfinder from \"./pathfinderComponents/pathfinder\";\nimport Home from \"./homeComponents/home\";\nimport Seive from \"./primeComponents/seive\";\nimport Sort from \"./sortComponents/sort\";\nimport BinarySearch from './binarySearchComponent/binarySearch'\n// import BinaryNew from \"./binarySearchComponent/binaryNew\";\nimport RecursiveSort from \"./recursiveSortComponents/recursiveSort\";\n\n\nimport Graph from \"./Graph/graph\";\n\nclass App extends Component {\n\n    constructor() {\n        super();\n    }\n    componentDidMount() {\n        // console.log(window.innerHeight,\"  \",window.innerWidth);\n    }\n\n    render() {\n        return (\n            <Router basename='/'>\n                <Switch>\n                    <Route path='/pathfinder'  component={Pathfinder}/>\n                    <Route path='/prime' component={Seive}/>\n                    <Route path='/sort' component={Sort}/>\n                    <Route path='/binarysearch' component={BinarySearch}/>\n                    {/* <Route path='/binarysearch' component={BinaryNew}/> */}\n                    <Route path='/recursivesort' component={RecursiveSort}/>\n                    <Route path='/graph' component={Graph}/>\n                    <Route path='/' component={Home}/>\n\n                </Switch>\n            </Router>\n        );\n    }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'fontsource-roboto';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}