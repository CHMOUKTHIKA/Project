{"version":3,"sources":["pathfinderComponents/node.jsx","pathfinderComponents/grid.jsx","pathfinderComponents/simpleSelect.jsx","pathfinderComponents/navbar.jsx","pathfinderComponents/menu.jsx","algorithms/bfs.jsx","pathfinderComponents/pathfinder.jsx","algorithms/dijkstra.js","homeComponents/greet.jsx","homeComponents/images/graph.jpg","homeComponents/card2.jsx","homeComponents/images/primes.png","homeComponents/sort.jpeg","homeComponents/sorting.jpeg","homeComponents/images/binaryTree.jpg","homeComponents/cards.jsx","homeComponents/cardDetails.js","homeComponents/footer.jsx","homeComponents/home.jsx","primeComponents/cell.jsx","primeComponents/cells.jsx","primeComponents/navbar.jsx","primeComponents/slider.jsx","primeComponents/simpleSelect.jsx","primeComponents/menu.jsx","primeComponents/seive.jsx","sortComponents/rect.jsx","sortComponents/rects.jsx","algorithms/sortingAlgorithms.js","sortComponents/navbar.jsx","sortComponents/slider.jsx","sortComponents/simpleSelect.jsx","sortComponents/airBnbSlider.jsx","sortComponents/doubleSlider.jsx","sortComponents/formControlLabel.jsx","sortComponents/menu.jsx","sortComponents/SortName1.jsx","sortComponents/sort.js","binarySearchComponent/entryPoint.jsx","binarySearchComponent/result.jsx","binarySearchComponent/search.jsx","binarySearchComponent/navbar.jsx","binarySearchComponent/menu.jsx","binarySearchComponent/rect.jsx","binarySearchComponent/rects.jsx","binarySearchComponent/binarySearch.jsx","recursiveSortComponents/rect.jsx","recursiveSortComponents/simpleSelect.jsx","recursiveSortComponents/slider.jsx","recursiveSortComponents/airBnbSlider.jsx","recursiveSortComponents/doubleSlider.jsx","recursiveSortComponents/menu.jsx","recursiveSortComponents/rects.jsx","recursiveSortComponents/SortName.jsx","algorithms/mergeSort.js","algorithms/heapSort.js","algorithms/quickSortRecursive.js","recursiveSortComponents/navbar.jsx","recursiveSortComponents/recursiveSort.js","App.js","reportWebVitals.js","index.js"],"names":["Node","static","row","props","col","this","onMouseDown","isVisited","onMouseEnter","onMouseUp","id","className","getClassName","node","isWall","isStartNode","isEndNode","ispathNode","Component","Grid","state","grid","map","rowidx","nodeidx","visitedNode","useStyles","makeStyles","theme","formControl","margin","spacing","minWidth","selectEmpty","marginTop","SimpleSelect","classes","React","useState","age","setAge","FormControl","InputLabel","Select","labelId","value","onChange","event","target","onAlgoChanged","items","item","itemidx","MenuItem","Navbar","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","to","style","color","Menu","algorithms","onMazeChanged","mazes","onClick","onVisualize","onClearPath","onClearBoard","bfsdfs","startNode","endNode","algo","list","nodesInOrder","push","length","currentNode","shift","pop","nodesToPush","getNeighbours","previousNode","neighbors","filter","neighbor","Pathfinder","handleMouseDown","newGrid","getNewGridWithWallToggled","setState","mouseIsPressed","handleMouseEnter","handleMouseUp","handleAlgoChanged","val","handleMazeChanged","maze","handleClearBoard","clearBoard","handleClearPath","clearPath","handleClick","visualizePath","width","window","innerWidth","height","innerHeight","Math","max","floor","getInitialGrid","textAlign","visitedNodesInOrder","finishNode","nodesInShortestPathOrder","unshift","getNodesInShortestPathOrder","animatePath","i","sleep","animateShortestPath","toggleVisit","document","getElementById","slice","newNode","j","distance","Infinity","totRow","totCol","currentRow","createNode","ms","Promise","resolve","setTimeout","Greet","card","maxWidth","minHeight","borderRadius","boxShadow","media","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","actionArea","padding","ImgMediaCard2","expanded","setExpanded","CardActionArea","m","Card","route","CardMedia","component","alt","title","src","img","CardHeader","backgroundColor","action","IconButton","clsx","Collapse","in","timeout","unmountOnExit","CardContent","Typography","description","Cards","cards","getData","e","console","log","sort","sorting","primes","binSearch","graph","Fragment","toLowerCase","includes","Footer","class","Home","Cell","getClass","cell","isVisiting","isChecking","isPrime","Cells","cells","cellidx","root","valuetext","DiscreteSlider","gutterBottom","Slider","defaultValue","default","getAriaValueText","aria-labelledby","valueLabelDisplay","onChangeCommitted","innerText","num","parseInt","step","marks","min","disabled","isDisabled","pos","selected","isClickable","cursor","onRefresh","setAlgo","onChangeSpeed","onChangeValues","Seive","number","isRunning","speed","maxPrime","changeSpeed","handleValueIncease","getCells","handleRefresh","startAlgo","startSeive","a","prime","changedCells","prevCheck","getNewCellPrimeToggled","getNewCellVisitingToggled","getNewCellCheckToggled","newCells","newCell","rows","createCell","Rect","checkColor","rect","isSorted","isSorting","background","marg","Rects","rects","rectidx","kk","selectionSort","arr","pairs","n","prevRect","min_idx","xx","yy","changed","recti","rectj","bubbleSort","insertionSort","key","onCountChange","disable","withStyles","thumb","border","marginRight","active","track","rail","opacity","RangeSlider","SwitchLabels","checkedA","FormGroup","FormControlLabel","control","Switch","checked","name","onDoubleChange","label","onRandomize","onSpeedChange","onViusalize","SortName1","sorts","Sort","count","rects2","doubles","isRunning1","isRunning2","algo1","algo2","handleRandomize","getInitialRects","rect2","handleDouble","handleCountChange","handleSpeedChanged","handleSort","steps1","steps2","handleFirst","handleSecond","steps","tot","getRect","random","EntryPoint","error","setUpper","validateNumbers","TextField","variant","upper","startGame","Result","fontSize","keyval","res","onRestart","Search","phase","isMid","isFound","isNotFound","checkBorder","isRange","BinarySearch","temp","handleStartGame","end","search1","handleRestart","lower","handleSetUpper","up","y","x","onSearch","handleSearch","isLeft","isRight","start","mid","SortName","values","mergeSort","sz","mergeS","l","r","n1","n2","L","R","k","merge","left","right","HeapSort","heapify","sorted","heapSort","largest","quickSortRecursive","quick","partition","swap","changedRange","pivot","it","rect1","getPartition","RecursiveSort","handleName","render","handleHeap","handleQuick","handleMerge","hasChanged","ii","App","basename","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.a2b86f11.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport './node.css'\r\nclass Node extends Component {\r\n    static = {\r\n        row: this.props.row,\r\n        col: this.props.col\r\n    }\r\n    render() {\r\n        const { row,col,isVisited, onMouseDown, onMouseEnter,onMouseUp } = this.props;\r\n        return (\r\n            <div\r\n                id = {`node-${this.props.row}-${this.props.col}`}\r\n                className={this.getClassName()}\r\n                onMouseDown={() => onMouseDown(row,col)}\r\n                onMouseEnter={() => onMouseEnter(row,col)}\r\n                onMouseUp={() => onMouseUp(row,col)}\r\n            />\r\n        );\r\n    }\r\n    getClassName(){\r\n        if(this.props.node.isWall === true){\r\n            return \"node node-wall\";\r\n        } else if( this.props.node.isStartNode === true ){\r\n            return \"node  node-start\";\r\n        } else if( this.props.node.isEndNode === true ){\r\n            return \"node  node-end\";\r\n        } else if(this.props.node.ispathNode){\r\n            return 'node node-shortest-path';\r\n        }else if( this.props.node.isVisited === true ){\r\n            return \"node  node-visited\";\r\n        } else{\r\n            return \"node\";\r\n        }\r\n    }\r\n}\r\n\r\nexport default Node;","import React, {Component} from 'react';\r\nimport Node from \"./node\";\r\nimport './grid.css';\r\nclass Grid extends Component {\r\n    state = {\r\n        grid: this.props.grid\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"Grid\">\r\n                {this.props.grid.map((row, rowidx) => {\r\n                    return (\r\n                        <div key={rowidx}>\r\n                            {row.map((node, nodeidx) => {\r\n                                const {row, col, isWall, visitedNode, } = node;\r\n                                return (\r\n                                    <Node\r\n                                        key={nodeidx}\r\n                                        row={row}\r\n                                        col={col}\r\n                                        node={node}\r\n                                        isWall={isWall}\r\n                                        visitedNode={ visitedNode }\r\n                                        onMouseDown = {this.props.onMouseDown}\r\n                                        onMouseEnter = {this.props.onMouseEnter}\r\n                                        onMouseUp = {this.props.onMouseUp}\r\n                                    />\r\n                                );\r\n                            })}\r\n                        </div>\r\n                    );\r\n                })}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Grid;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120,\r\n    },\r\n    selectEmpty: {\r\n        marginTop: theme.spacing(2),\r\n    },\r\n}));\r\n\r\nconst SimpleSelect = (props) => {\r\n    const classes = useStyles();\r\n    const [age, setAge] = React.useState('0');\r\n\r\n    const handleChange = (event) => {\r\n        setAge(event.target.value);\r\n        props.onAlgoChanged(event.target.value);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <FormControl className={classes.formControl}>\r\n                <InputLabel id=\"demo-simple-select-label\">Algorithm</InputLabel>\r\n                <Select\r\n                    labelId=\"demo-simple-select-label\"\r\n                    id=\"demo-simple-select\"\r\n                    value={age}\r\n                    onChange={handleChange}\r\n                >\r\n                    {props.items.map( (item,itemidx)=>{\r\n                        return(\r\n                            <MenuItem\r\n                                key={itemidx}\r\n                                value={itemidx}>{item}</MenuItem>\r\n                        );\r\n                    } )}\r\n                </Select>\r\n            </FormControl>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SimpleSelect;","import React, {Component} from 'react';\r\nimport SimpleSelect from \"./simpleSelect\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nclass Navbar extends Component {\r\n    render() {\r\n        return (\r\n            <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n                <span className=\"navbar-brand\">Pathfinder</span>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\"\r\n                        data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\"\r\n                        aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\" >\r\n                    <Link to={\"/\"}>\r\n                        <span style={{color:\"white\"}}>\r\n                            Home\r\n                        </span>\r\n                    </Link>\r\n                </div>\r\n\r\n            </nav>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Navbar;","import React, {Component} from 'react';\r\nimport SimpleSelect from \"./simpleSelect\";\r\n\r\nclass Menu extends Component {\r\n    render() {\r\n        return (\r\n            <nav className=\"nav alert-dark\" >\r\n                <SimpleSelect\r\n                    onAlgoChanged = {this.props.onAlgoChanged}\r\n                    items={this.props.algorithms}\r\n                />\r\n                <SimpleSelect\r\n                    onAlgoChanged={this.props.onMazeChanged}\r\n                    items={this.props.mazes}\r\n                />\r\n                {/* <button\r\n                    className='btn btn-success btn-secondary m-2'\r\n                    onClick={this.props.onCreateMaze}>\r\n                    Create Maze\r\n                </button> */}\r\n                <button\r\n                    onClick={this.props.onVisualize}\r\n                    className=\"btn btn-primary  m-2\"\r\n                >Visualize</button>\r\n                <button\r\n                    onClick={this.props.onClearPath}\r\n                    className='btn btn-danger btn-secondary m-2'>Clear Path</button>\r\n                <button\r\n                    onClick={this.props.onClearBoard}\r\n                    className='btn btn-lg btn-secondary m-2'>Clear Board</button>\r\n            </nav>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Menu;","export function bfsdfs(grid,startNode,endNode,algo){\n    var list = [];\n    const nodesInOrder = [];\n    nodesInOrder.push(startNode);\n    list.push(startNode);\n    startNode.isVisited = true;\n    while(!!list.length){\n        const currentNode = (algo === \"bfs\" ? list.shift():list.pop());\n        nodesInOrder.push(currentNode);\n        if( currentNode === endNode ) return nodesInOrder;\n        if( algo === \"dfs\" ) currentNode.isVisited = true;\n        const nodesToPush = getNeighbours(grid,currentNode);\n        for( const node of nodesToPush ){\n            if(algo === \"bfs\"){\n                node.isVisited = true;\n            }\n            node.previousNode = currentNode;\n            list.push(node);\n\n        }\n    }\n    return nodesInOrder;\n}\n\nfunction getNeighbours(grid,node){\n    const neighbors = [];\n    const {col, row} = node;\n   // console.log(node);\n\n    if (col > 0) neighbors.push(grid[row][col - 1]);\n    if (row > 0) neighbors.push(grid[row - 1][col]);\n    if (row < grid.length - 1) neighbors.push(grid[row + 1][col]);\n    if (col < grid[0].length - 1) neighbors.push(grid[row][col + 1]);\n    return neighbors.filter(neighbor => (!neighbor.isVisited && !neighbor.isWall ));\n}","import React, {Component, Fragment} from 'react';\r\nimport Grid from \"./grid\";\r\nimport Navbar from \"./navbar\";\r\nimport Menu from \"./menu\";\r\nimport {dijkstra,getNodesInShortestPathOrder} from \"../algorithms/dijkstra\";\r\nimport {getMaze} from \"../algorithms/recursiveMaze\";\r\nimport {bfsdfs} from \"../algorithms/bfs\";\r\nimport {randomMaze} from \"../algorithms/randomMaze\";\r\n\r\nclass Pathfinder extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            grid:[],\r\n            mouseIsPressed:false,\r\n            algorithms:[\r\n                \"BFS\",\"DFS\"\r\n            ],\r\n            algo:0,\r\n           mazes:[ \"Recursive\"],\r\n            maze:0\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        const width = window.innerWidth;\r\n        const height = window.innerHeight;\r\n        const row = Math.max(Math.floor(height/25)-7,10);\r\n        const col = Math.floor(width/25);\r\n        const startNode = {\r\n            row:4,\r\n            col:4\r\n        };\r\n        const endNode = {\r\n            row: row-5,\r\n            col: col-5\r\n        }\r\n        // console.log( endNode.row );\r\n        const grid = getInitialGrid(row,col);\r\n        grid[startNode.row][startNode.col].isStartNode = true;\r\n        grid[row-5][col-5].isEndNode = true;\r\n        this.setState({grid,row,col,startNode,endNode});\r\n        \r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <Navbar/>\r\n\r\n                <Menu\r\n                    onAlgoChanged = {this.handleAlgoChanged}\r\n                    onVisualize = {this.handleClick}\r\n                    algorithms={this.state.algorithms}\r\n                    mazes={this.state.mazes}\r\n                    onMazeChanged={this.handleMazeChanged}\r\n                    onClearBoard={this.handleClearBoard}\r\n                    onClearPath={this.handleClearPath}\r\n                />\r\n                <span style={{margin: 2}}/>\r\n                <div style={{textAlign:\"center\"}} >\r\n                    <Grid\r\n                        grid={this.state.grid}\r\n                        onMouseDown={this.handleMouseDown}\r\n                        onMouseEnter={this.handleMouseEnter}\r\n                        onMouseUp={this.handleMouseUp}\r\n                    />\r\n                </div>\r\n            </Fragment>\r\n        );\r\n    }\r\n\r\n    handleMouseDown = (row, col) => {\r\n        if((this.state.startNode.row!==row || this.state.startNode.col!==col) && (this.state.endNode.row!==row || this.state.endNode.col!==col) ){\r\n            const newGrid = getNewGridWithWallToggled(this.state.grid, row, col);\r\n            this.setState({grid:newGrid});\r\n        }\r\n        this.setState({mouseIsPressed: true});\r\n    }\r\n\r\n    handleMouseEnter = (row, col) => {\r\n        if (this.state.mouseIsPressed === false) return;\r\n        if((this.state.startNode.row!==row || this.state.startNode.col!==col) && (this.state.endNode.row!==row || this.state.endNode.col!==col) ){\r\n            const newGrid = getNewGridWithWallToggled(this.state.grid, row, col);\r\n            this.setState({grid:newGrid});\r\n        }\r\n    }\r\n\r\n    handleMouseUp = (row,col) => {\r\n        this.setState({mouseIsPressed: false});\r\n    }\r\n\r\n    handleAlgoChanged = (val) =>{\r\n        this.setState({algo:val});\r\n    }\r\n\r\n    handleMazeChanged = (val)=>{\r\n        this.setState({maze:val});\r\n    }\r\n\r\n    handleClearBoard = ()=>{\r\n        const {grid,row,col} = this.state;\r\n        this.setState({grid:clearBoard(grid,row,col)});\r\n    }\r\n    handleClearPath = () =>{\r\n        const {grid,row,col} = this.state;\r\n        this.setState({grid:clearPath(grid,row,col)});\r\n    }\r\n    handleClick = () =>{\r\n      \r\n        this.visualizePath();\r\n       \r\n    }\r\n\r\n    visualizePath() {\r\n        const {grid} = this.state;\r\n        const startNode = grid[this.state.startNode.row][this.state.startNode.col];\r\n        const finishNode = grid[this.state.endNode.row][this.state.endNode.col];\r\n        let visitedNodesInOrder;\r\n        switch (this.state.algo){\r\n            \r\n            case 0:\r\n                visitedNodesInOrder = bfsdfs(grid, startNode, finishNode,\"bfs\");\r\n                break;\r\n            default:\r\n                visitedNodesInOrder = bfsdfs(grid, startNode, finishNode,\"dfs\");\r\n        }\r\n        const nodesInShortestPathOrder = getNodesInShortestPathOrder(finishNode);\r\n        this.animatePath(visitedNodesInOrder, nodesInShortestPathOrder);\r\n    }\r\n    async animatePath(visitedNodesInOrder, nodesInShortestPathOrder) {\r\n        for (let i = 0; i <= visitedNodesInOrder.length; i++) {\r\n\r\n            if (i === visitedNodesInOrder.length) {\r\n                    await sleep(100);\r\n                    await this.animateShortestPath(nodesInShortestPathOrder);\r\n\r\n              \r\n                return;\r\n            }\r\n                const node = visitedNodesInOrder[i];\r\n                const newGrid = toggleVisit(this.state.grid,node.row,node.col);\r\n                document.getElementById(`node-${node.row}-${node.col}`).className =\r\n                    'node node-visited';\r\n                await sleep(10);\r\n           \r\n        }\r\n    }\r\n\r\n    async animateShortestPath(nodesInShortestPathOrder) {\r\n        const grid = this.state.grid;\r\n        const newGrid = grid.slice();\r\n        for (let i = 0; i < nodesInShortestPathOrder.length; i++) {\r\n         //   setTimeout(() => {\r\n\r\n                const node = nodesInShortestPathOrder[i];\r\n                const newNode = {...newGrid[node.row][node.col],ispathNode:true};\r\n                newGrid[node.row][node.col] = newNode;\r\n                if( i === nodesInShortestPathOrder.length-1 ){\r\n                    this.setState({grid:newGrid});\r\n                }\r\n                document.getElementById(`node-${node.row}-${node.col}`).className =\r\n                    'node node-shortest-path';\r\n                await sleep(50);\r\n            //}, 50 * i);\r\n        }\r\n    }\r\n\r\n}\r\n\r\nconst clearPath = (grid,row,col)=>{\r\n    const newGrid = grid.slice();\r\n    for(let i = 0;i < row ; i++){\r\n        for( let j = 0;j < col; j++){\r\n            const node = newGrid[i][j];\r\n            const newNode = {\r\n                ...node,\r\n                distance:Infinity,\r\n                visitedNode: false,\r\n                isVisited:false,\r\n                ispathNode:false,\r\n                previousNode:null\r\n\r\n            };\r\n            newGrid[i][j] = newNode;\r\n        }\r\n    }\r\n    return newGrid;\r\n}\r\nconst clearBoard = (grid,row,col)=>{\r\n    const newGrid = grid.slice();\r\n    for(let i = 0;i < row ; i++){\r\n        for( let j = 0;j < col; j++){\r\n            const node = newGrid[i][j];\r\n            const newNode = {\r\n                ...node,\r\n                isWall: false,\r\n                distance:Infinity,\r\n                visitedNode: false,\r\n                isVisited:false,\r\n                ispathNode:false,\r\n                previousNode:null\r\n\r\n            };\r\n            newGrid[i][j] = newNode;\r\n        }\r\n    }\r\n    return newGrid;\r\n}\r\n\r\nconst toggleVisit = (grid,row,col) =>{\r\n    const newGrid = grid.slice();\r\n    const node = newGrid[row][col];\r\n    const newNode = {\r\n        ...node,\r\n        visitedNode: !node.visitedNode\r\n    };\r\n    newGrid[row][col] = newNode;\r\n    return newGrid;\r\n}\r\nconst getNewGridWithWallToggled = (grid, row, col) => {\r\n    const newGrid = grid.slice();\r\n    const node = newGrid[row][col];\r\n    const newNode = {\r\n        ...node,\r\n        isWall: true//!node.isWall,\r\n    };\r\n    newGrid[row][col] = newNode;\r\n    return newGrid;\r\n};\r\nconst getInitialGrid = (totRow,totCol) => {\r\n    const grid = [];\r\n    for (let row = 0; row < totRow; row++) {\r\n        const currentRow = [];\r\n        for (let col = 0; col < totCol; col++) {\r\n            currentRow.push(createNode(row,col));\r\n        }\r\n        grid.push(currentRow);\r\n    }\r\n    return grid;\r\n}\r\n\r\nconst createNode = (row,col)=>{\r\n    return {\r\n        row,\r\n        col,\r\n        isWall: false,\r\n        isStartNode:false,\r\n        isEndNode:false,\r\n        distance:Infinity,\r\n        visitedNode: false,\r\n        isVisited:false,\r\n        ispathNode:false,\r\n        previousNode:null\r\n    };\r\n}\r\nfunction sleep(ms) {\r\n    return new Promise(resolve => setTimeout(resolve, ms));\r\n}\r\n\r\nexport default Pathfinder;","\nexport function dijkstra(grid, startNode, finishNode) {\n  const visitedNodesInOrder = [];\n  startNode.distance = 0;\n  const unvisitedNodes = getAllNodes(grid);\n  while (!!unvisitedNodes.length) {\n    sortNodesByDistance(unvisitedNodes);\n    const closestNode = unvisitedNodes.shift();\n    if (closestNode.isWall) continue;\n    \n    if (closestNode.distance === Infinity) return visitedNodesInOrder;\n    closestNode.isVisited = true;\n    visitedNodesInOrder.push(closestNode);\n    if (closestNode === finishNode) return visitedNodesInOrder;\n    updateUnvisitedNeighbors(closestNode, grid);\n  }\n}\n\nfunction sortNodesByDistance(unvisitedNodes) {\n  unvisitedNodes.sort((nodeA, nodeB) => nodeA.distance - nodeB.distance);\n}\n\nfunction updateUnvisitedNeighbors(node, grid) {\n  const unvisitedNeighbors = getUnvisitedNeighbors(node, grid);\n  for (const neighbor of unvisitedNeighbors) {\n    neighbor.distance = node.distance + 1;\n    neighbor.previousNode = node;\n  }\n}\n\nfunction getUnvisitedNeighbors(node, grid) {\n  const neighbors = [];\n  const {col, row} = node;\n  if (row > 0) neighbors.push(grid[row - 1][col]);\n  if (row < grid.length - 1) neighbors.push(grid[row + 1][col]);\n  if (col > 0) neighbors.push(grid[row][col - 1]);\n  if (col < grid[0].length - 1) neighbors.push(grid[row][col + 1]);\n  return neighbors.filter(neighbor => !neighbor.isVisited);\n}\n\nfunction getAllNodes(grid) {\n  const nodes = [];\n  for (const row of grid) {\n    for (const node of row) {\n      nodes.push(node);\n    }\n  }\n  return nodes;\n}\n\nexport function getNodesInShortestPathOrder(finishNode) {\n  const nodesInShortestPathOrder = [];\n  let currentNode = finishNode;\n  while (currentNode !== null) {\n    nodesInShortestPathOrder.unshift(currentNode);\n    currentNode = currentNode.previousNode;\n  }\n  return nodesInShortestPathOrder;\n}\n","import React, {Component} from 'react';\nimport \"./style.css\"\nclass Greet extends Component {\n    render() {\n        return (\n            <div className=\"greet\">\n                <h1 className=\"display-3\">\n                    ALGOVIZ\n                </h1>\n                <hr className=\"dropdown-divider\"/>\n                <h2 className=\"display-5\">\n                    \"Understand algorithms in a better and efficient way...\"\n                </h2>\n            </div>\n        );\n    }\n}\n\nexport default Greet;","export default __webpack_public_path__ + \"static/media/graph.8f8b53ae.jpg\";","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport clsx from 'clsx';\nimport Collapse from '@material-ui/core/Collapse';\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardActions from '@material-ui/core/CardActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Typography from \"@material-ui/core/Typography\";\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport \"./style.css\";\nimport \"./images/graph.jpg\";\nimport {ExpandMore} from \"@material-ui/icons\";\nimport {Link} from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n    card: {\n        minWidth: 350,\n        maxWidth:350,\n        minHeight:200,\n        borderRadius: 25,\n        '&:hover': {\n            boxShadow: `0 6px 12px 0 #000000\n                .rotate(-12)\n                .darken(0.2)\n                .fade(0.5)}`\n                ,\n        },\n    },\n    media: {\n        height: 100\n    },\n    expand: {\n        transform: 'rotate(0deg)',\n        marginLeft: 'auto',\n        transition: theme.transitions.create('transform', {\n            duration: theme.transitions.duration.shortest,\n        }),\n    },\n    expandOpen: {\n        transform: 'rotate(180deg)',\n    },\n    actionArea: {\n        padding:15,\n        transition: '0.2s',\n        '&:hover': {\n            transform: 'scale(1.1)',\n\n        },\n    },\n}));\n\nexport default function ImgMediaCard2(props) {\n    const classes = useStyles();\n    const [expanded, setExpanded] = React.useState(false);\n\n    const handleExpandClick = () => {\n        setExpanded(!expanded);\n    };\n\n    return (\n        <CardActionArea className={classes.actionArea} m={20}>\n            <Card\n                className={classes.card}\n                >\n               <Link to={props.card.route}>\n                   <CardMedia\n                       component=\"img\"\n                       alt={props.card.title}\n                       height=\"150\"\n                       src={props.card.img}\n                   />\n               </Link>\n                <CardHeader\n                    title={props.card.title}\n                    style={{backgroundColor:\"lightgrey\"}}\n                    action={\n                        <IconButton\n                            className={clsx(classes.expand, {\n                                [classes.expandOpen]: expanded,\n                            })}\n                            onClick={handleExpandClick}\n                            aria-expanded={expanded}\n                            aria-label=\"show more\"\n                        >\n                            <ExpandMoreIcon />\n                        </IconButton>\n                    }\n                />\n                <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\n                    <CardContent\n                        style={{backgroundColor:\"whitesmoke\"}}\n                    >\n                        <Typography>\n                            {props.card.description}\n                        </Typography>\n                    </CardContent>\n                </Collapse>\n            </Card>\n        </CardActionArea>\n    );\n}\n","export default __webpack_public_path__ + \"static/media/primes.59966538.png\";","export default __webpack_public_path__ + \"static/media/sort.4e3a1709.jpeg\";","export default __webpack_public_path__ + \"static/media/sorting.ac907d10.jpeg\";","export default __webpack_public_path__ + \"static/media/binaryTree.3861da9c.jpg\";","import React, {Component} from 'react';\nimport ImgMediaCard2 from \"./card2\";\nimport \"./style.css\";\nimport {getDetails} from \"./cardDetails\";\nclass Cards extends Component {\n\n    state = {\n        cards:[],\n        filter:\"\"\n    }\n\n    componentDidMount() {\n        this.setState({cards:getDetails()});\n    }\n    getData = (e)=>{\n        console.log(e.target.value);\n        this.setState({filter:e.target.value});\n    }\n    render() {\n        return (\n           <React.Fragment>\n               <div className=\"d-flex flex-wrap justify-content-center Cards p-lg-5 \"  >\n                   {\n                       this.state.cards.filter((card) => card.title.toLowerCase().includes(this.state.filter.toLowerCase())||card.description.toLowerCase().includes(this.state.filter.toLowerCase())).map(card=>(\n                           <div>\n                               <ImgMediaCard2\n                                   className=\"d-flex flex-wrap samp\"\n                                   key={card.id}\n                                   card={card}\n                                   />\n                           </div>\n                       ))\n                   }\n\n               </div>\n           </React.Fragment>\n        );\n    }\n}\n\nexport default Cards;\n","import graph from \"./images/graph.jpg\";\nimport primes from \"./images/primes.png\";\nimport sort from \"./sort.jpeg\";\nimport sorting from \"./sorting.jpeg\"\nimport binSearch from \"./images/binaryTree.jpg\";\n\nexport function getDetails(){\n   return [\n       \n       {\n           id:3,\n           title:\"Sorting Algorithm\",\n           description:\"Compare different sorting algorithms\",\n           route:\"/sort\",\n           img:sort\n       },\n       {\n           id:4,\n           title:\"Recursive Sorting\",\n           description:\"Visualize different recursive sorting algorithms\",\n           route:\"/recursivesort\",\n           img:sorting\n       },\n       {\n           id:7,\n           title:\"Prime Numbers\",\n           description:\"Visualize how Seive is better than brute force\",\n           route:\"/prime\",\n           img:primes\n       },\n       {\n           id:9,\n           title:\"Binary Search\",\n           description:\"Binary search is an efficient algorithm for finding an item from a sorted list of item\",\n           route:\"/binarysearch\",\n           img:binSearch\n       },\n       {\n        id:10,\n        title:\"Pathfinder\",\n        description:\"Visualize graph algorithms like dijkstra, BFS, DFS\",\n        route:\"/pathfinder\",\n        img:graph\n    }\n\n   ]\n}","import React, {Component} from 'react';\nimport \"./style.css\";\nclass Footer extends Component {\n    render() {\n        return (\n            <footer class=\"page-footer font-small special-color-dark pt-4 \">\n\n                <div className='flex-wrap' style={{textAlign:\"center\"}}>\n\n                    <div className='m-2' style={{color:\"white\"}}>\n                        Developed by:<br></br>\n                        Chakka Moukthika, Jirra Sri Vani, Thagili Aishwarya<br></br>\n                    </div>\n                    \n                </div>\n\n            </footer>\n        );\n    }\n}\n\nexport default Footer;","import React, {Component} from 'react';\nimport Greet from \"./greet\";\nimport Cards from \"./cards\";\nimport Footer from \"./footer\";\n\nclass Home extends Component {\n    render() {\n        return (\n            <React.Fragment>\n                <Greet/>\n                <Cards/>\n                <Footer/>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default Home;","import React, {Component} from 'react';\nimport './cell.css';\nclass Cell extends Component {\n    render() {\n        return (\n            <div className={this.getClass()}>\n                <span >\n                    {this.props.cell.val}\n                </span>\n            </div>\n        );\n    }\n    getClass = () =>{\n        const { val, isVisiting,isChecking,isPrime} = this.props.cell;\n        if(isPrime){\n            return \"cell cell-prime bg-success text-light m-2\";\n        }else if( isVisiting ){\n            return \"cell cell-visiting m-2\";\n        } else if( isChecking ){\n            return \"cell cell-check m-2\";\n        } else{\n            return \"cell m-2\";\n        }\n    }\n}\n\nexport default Cell;","import React, {Component} from 'react';\nimport Cell from \"./cell\";\nimport './cells.css'\nclass Cells extends Component {\n\n    render() {\n        return (\n            <div className=\"Cells\">\n                {this.props.cells.map( (cell,cellidx)=>{\n                    return (\n                        <Cell\n                            key={cellidx}\n                            cell={cell}\n                        />\n                    );\n                } )}\n            </div>\n        );\n    }\n}\n\nexport default Cells;","import React, {Component} from 'react';\nimport {Link} from \"react-router-dom\";\n\n\nclass Navbar extends Component {\n    render() {\n        return (\n            <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark sample2\">\n                <span className=\"navbar-brand\">Sieve</span>\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\"\n                        data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\"\n                        aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                    <span className=\"navbar-toggler-icon\"></span>\n                </button>\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\" >\n                    <Link to={\"/\"}>\n                        <span style={{color:\"white\"}}>\n                            Home\n                        </span>\n                    </Link>\n                </div>\n\n            </nav>\n        );\n    }\n}\n\n\nexport default Navbar;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Slider from '@material-ui/core/Slider';\n\nconst useStyles = makeStyles({\n    root: {\n        width: 300,\n    },\n});\n\nfunction valuetext(value) {\n    return `${value}`;\n}\n\n\nexport default function DiscreteSlider(props) {\n    const classes = useStyles();\n    const handleChange = (event) =>{\n        if( event.target.innerText === \"\" ){\n            return;\n        }\n        const num = parseInt(event.target.innerText,10);\n        props.onChange(num);\n    }\n    return (\n        <div className={classes.root+\" ml-2 mr-2\"}>\n            <Typography id=\"discrete-slider\" gutterBottom>\n                {props.title}\n            </Typography>\n            <Slider\n                defaultValue={props.default}\n                getAriaValueText={valuetext}\n                aria-labelledby=\"discrete-slider\"\n                valueLabelDisplay=\"auto\"\n                onChangeCommitted={handleChange}\n                step={props.step}\n                marks={props.marks}\n                min={props.min}\n                max={props.max}\n                // valueLabelDisplay=\"on\"\n                disabled={props.isDisabled}\n            />\n        </div>\n    );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n\nconst useStyles = makeStyles((theme) => ({\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 120,\n    },\n    selectEmpty: {\n        marginTop: theme.spacing(2),\n    },\n}));\n\nconst SimpleSelect = (props) => {\n    const classes = useStyles();\n    const [age, setAge] = React.useState('0');\n    const [state, setState] = React.useState({\n        pos: props.pos,\n    });\n    const handleChange = (event) => {\n\n\n        console.log('aa ',event.target.value);\n        setAge(event.target.value);\n        props.onAlgoChanged(state.pos,event.target.value);\n    };\n\n    return (\n        <div className=\"ml-2 mr-2\">\n            <FormControl className={classes.formControl}>\n                <InputLabel id=\"demo-simple-select-label\">Task</InputLabel>\n                <Select\n                    labelId=\"demo-simple-select-label\"\n                    id=\"demo-simple-select\"\n                    value={age}\n                    onChange={handleChange}\n                >\n                    <MenuItem value={0} style={{selected:true}} >Seive</MenuItem>\n                    {/* <MenuItem value={1} style={{selected:true}} >Archimedes Spiral</MenuItem> */}\n                    {/*<MenuItem value={3} style={{selected:true}} >Bitwise AND</MenuItem>*/}\n                    {/*<MenuItem value={4} style={{selected:true}} >Bitwise OR</MenuItem>*/}\n                </Select>\n            </FormControl>\n        </div>\n    );\n}\n\nexport default SimpleSelect;","import React, {Component} from 'react';\nimport DiscreteSlider from \"./slider\";\nimport SimpleSelect from \"./simpleSelect\";\n\nclass Menu extends Component {\n    render() {\n        return (\n            <nav className=\"nav alert-dark\">\n                <button className=\"btn btn-primary btn-lg m-2\" onClick={this.props.onRefresh} disabled={this.props.isDisabled} style={this.isClickable()}>Refresh</button>\n                <SimpleSelect\n                    pos={0}\n                    onAlgoChanged={this.props.setAlgo}\n                />\n                <DiscreteSlider\n                    onChange={this.props.onChangeSpeed}\n                    title=\"speed\"\n                    marks={false}\n                    default={10}\n                    step={1}\n                    min={10}\n                    max={50}\n                    isDisabled={false}\n                />\n                <DiscreteSlider\n                    onChange={this.props.onChangeValues}\n                    title=\"Total Number\"\n                    marks={false}\n                    default={100}\n                    step={1}\n                    min={10}\n                    max={500}\n                    isDisabled={this.props.isDisabled}\n                />\n                <button className=\"btn btn-primary btn-lg m-2\" onClick={this.props.onVisualize} disabled={this.props.isDisabled} style={this.isClickable()}>Visualize</button>\n\n\n            </nav>\n        );\n    }\n    isClickable = () =>{\n        if( this.props.isDisabled ){\n            return {cursor: \"not-allowed\"};\n        } else{\n            return {};\n        }\n    }\n}\n\nexport default Menu;","import React, {Component} from 'react';\nimport Cells from \"./cells\";\nimport Navbar from \"./navbar\";\nimport DiscreteSlider from \"./slider\";\nimport Menu from \"./menu\";\nimport {seive} from \"../algorithms/prime\";\n\n\nclass Seive extends Component {\n    state = {\n        number: 100,\n        cells:[],\n        isRunning:false,\n        speed:500,\n        primes:[],\n        maxPrime:0,\n        algo:0\n    }\n\n    constructor(props) {\n        super(props);\n    }\n    componentDidMount() {\n        const cells = getCells(this.state.number);\n        this.setState({cells});\n    }\n    setAlgo = (pos, val) => {\n        if (pos === 0) {\n\n            this.setState({algo: val});\n            // console.log(this.state.algo);\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <Navbar/>\n                <Menu\n                    onChangeSpeed={this.changeSpeed}\n                    onChangeValues={this.handleValueIncease}\n                    onVisualize = {this.startAlgo}\n                    onRefresh = {this.handleRefresh}\n                    isDisabled = {this.state.isRunning}\n                    setAlgo={this.setAlgo}\n                />\n                {this.state.algo === 0 &&\n                    <Cells\n                        num={this.state.number}\n                        cells={this.state.cells}\n                    />\n                }\n\n            </div>\n        );\n    }\n\n    changeSpeed = (speed) => {\n        //console.log(typeof speed);\n        this.setState({speed:600-speed*10});\n    }\n    handleValueIncease = (value) => {\n        this.setState({number:value});\n        if( this.state.algo === 0 ){\n            this.setState({cells:getCells(value),isRunning:false});\n\n        }\n        // console.log(value);\n    }\n    handleRefresh = () => {\n        this.setState({cells:getCells(this.state.number),isRunning:false});\n    }\n\n    startAlgo = () =>{\n        console.log(this.state.algo);\n        \n            this.startSeive();\n        \n    }\n    \n    startSeive = async () => {\n        const speed = this.state.speed;\n        this.setState({isRunning:true});\n        const prime = [];\n        for(let i = 0;i<=this.state.number;i++){\n            prime.push(1);\n        }\n        prime[0] = prime[1] = 0;\n        let changedCells = this.state.cells;\n        let prevCheck = -1;\n        let counter = 0;\n        for( let i = 2; i<=this.state.number;i++){\n            if( prime[i] === 1 ){\n             //   setTimeout(()=>{\n                    changedCells = getNewCellPrimeToggled(changedCells,i-1);\n                    this.setState({cells:changedCells});\n                //},counter*speed);\n                await sleep(this.state.speed);\n                counter++;\n                for(let j = i*i;j<=this.state.number;j+=i){\n                    //setTimeout(()=>{\n                        if( prevCheck!=-1 ){\n                            changedCells = getNewCellVisitingToggled(changedCells,prevCheck);\n                        }\n                        prevCheck = j-1;\n                        changedCells = getNewCellCheckToggled(changedCells,j-1);\n                        changedCells = getNewCellVisitingToggled(changedCells,prevCheck);\n                        this.setState({cells:changedCells});\n                  //  },counter*speed);\n                    await sleep(this.state.speed);\n                    counter++;\n                    prime[j] = 0;\n                }\n            }\n        }\n      //  setTimeout(()=>{\n            changedCells = getNewCellVisitingToggled(changedCells,prevCheck);\n            this.setState({cells:changedCells,isRunning:false});\n       // },counter*speed);\n    }\n}\n\nconst getNewCellPrimeToggled = (cells,pos) =>{\n    const newCells = cells.slice();\n    const cell = newCells[pos];\n    const newCell = {\n        ...cell,\n        isPrime:true\n    }\n    newCells[pos] = newCell;\n    return newCells;\n}\n\nconst getNewCellVisitingToggled = (cells,pos)=>{\n    const newCells = cells.slice();\n    const cell = newCells[pos];\n    const newCell = {\n        ...cell,\n        isVisiting:!cell.isVisiting\n    }\n    newCells[pos] = newCell;\n    return newCells;\n}\n\nconst getNewCellCheckToggled = (cells,pos) =>{\n    const newCells = cells.slice();\n    const cell = newCells[pos];\n    const newCell = {\n        ...cell,\n        isChecking:true\n    }\n    newCells[pos] = newCell;\n    return newCells;\n}\n\nconst getCells = (rows)=>{\n    const cells = [];\n    for(let cell = 1;cell<=rows;cell++){\n        cells.push(createCell(cell))\n    }\n    return cells;\n}\nconst createCell = (val)=>{\n    return {\n        val,\n        isChecking:false,\n        isVisiting:false,\n        isPrime:false\n    };\n}\nfunction sleep(ms) {\n    return new Promise(resolve => setTimeout(resolve, ms));\n}\nexport default Seive;","import React, {Component} from 'react';\r\nimport './style.css';\r\nclass Rect extends Component {\r\n\r\n    render() {\r\n        return (\r\n\r\n            <div\r\n                className='rect'\r\n                style={{height:this.props.rect.width,\r\n                    background:this.checkColor(),\r\n                    margin:this.props.marg,\r\n                    // float:'left',\r\n                    'vertical-align': 'middle'\r\n                }}\r\n            >\r\n             <div class=\"num\" >\r\n            <div>{this.props.rect.width}</div>\r\n\r\n                </div>   \r\n            </div>\r\n        );\r\n    }\r\n    checkColor = () => {\r\n        if( this.props.rect.isSorted ){\r\n            return \"green\";\r\n        } else if( this.props.rect.isSorting ){\r\n            return \"red\";\r\n        } else{\r\n            return \"black\"\r\n        }\r\n    }\r\n}\r\n\r\nexport default Rect;","import React, {Component} from 'react';\nimport Rect from \"./rect\";\nimport FlipMove from 'react-flip-move';\n\nclass Rects extends Component {\n    render() {\n        let margin = 5;\n        if( this.props.rects.length>50 ){\n            margin=1;\n        }\n        return (\n            <div>\n                <FlipMove\n                    className=\"d-flex justify-content-center align-items-end\"\n                    duration={this.props.speed}\n                    // easing=\"cubic-bezier(.12,.36,.14,1.2)\"\n                >\n                {this.props.rects.map( (rect,rectidx)=>{\n                    return (\n                        <Rect\n                            marg={margin}\n                            key={rect.kk}\n                            rect={rect}\n                        />\n                    );\n                } )}\n                </FlipMove>\n            </div>\n        );\n    }\n}\n\nexport default Rects;","export function bubbleSort2(rects ){\n    const pairs = [];\n    const num  = rects.length;\n    const prevRect = rects.slice();\n\n    for( let i = 0; i<num; i++ ){\n        for( let j = i+1;j<num;j++ ){\n            if( prevRect[i].width>prevRect[j].width ){\n                const recti = {...prevRect[i]};\n                const rectj = {...prevRect[j]};\n                prevRect[j] = recti;\n                prevRect[i] = rectj;\n                pairs.push( {\n                    xx:i,\n                    yy:j,\n                    changed:true\n                } );\n            } else{\n                pairs.push( {\n                    xx:i,\n                    yy:j,\n                    changed:false\n                });\n            }\n            if( j === num-1 ){\n                pairs.push( {\n                    xx:i,\n                    yy:i,\n                    changed:false\n                });\n            }\n        }\n    }\n    return pairs;\n}\n\nexport function selectionSort(arr) {\n    const pairs = [];\n    let n = arr.length;\n    const prevRect = arr.slice();\n    // One by one move boundary of unsorted subarray\n    for (let i = 0; i < n-1; i++)\n    {\n        let min_idx = i;\n        for (let j = i+1; j < n; j++){\n            pairs.push( {\n                xx:min_idx,\n                yy:j,\n                changed:false\n            } );\n            if (prevRect[j].width < prevRect[min_idx].width){\n                min_idx = j;\n            }\n        }\n\n        // Swap the found minimum element with the first\n        // element\n        const recti = {...prevRect[i]};\n        const rectj = {...prevRect[min_idx]};\n        prevRect[min_idx] = recti;\n        prevRect[i] = rectj;\n        pairs.push( {\n            xx:min_idx,\n            yy:i,\n            changed:true\n        } );\n        pairs.push( {\n            xx:i,\n            yy:i,\n            changed:false\n        });\n    }\n    pairs.push({\n            xx:n-1,\n            yy:n-1,\n            changed:false\n        }\n    )\n    return pairs;\n}\n\nexport function bubbleSort(arr){\n    const pairs= [];\n    let n = arr.length;\n    const prevRect = arr.slice();\n    for (let i = 0; i < n-1; i++){\n        for (let j = 0; j < n-i-1; j++){\n            if (prevRect[j].width > prevRect[j+1].width) {\n                // swap arr[j+1] and arr[j]\n                const recti = {...prevRect[j]};\n                const rectj = {...prevRect[j+1]};\n                prevRect[j+1] = recti;\n                prevRect[j] = rectj;\n                pairs.push( {\n                    xx:j,\n                    yy:j+1,\n                    changed:true\n                } );\n            } else{\n                pairs.push( {\n                    xx:j,\n                    yy:j+1,\n                    changed:false\n                } );\n            }\n            if( j === n-i-2 ){\n                pairs.push( {\n                    xx:n-i-1,\n                    yy:n-i-1,\n                    changed:false\n                } );\n            }\n        }\n    }\n    pairs.push({\n            xx:0,\n            yy:0,\n            changed:false\n        }\n    )\n    return pairs;\n}\n\nexport function insertionSort(arr){\n    const pairs = [];\n    let n = arr.length;\n    const prevRect = arr.slice();\n    for (let i = 1; i < n; ++i) {\n        let key = prevRect[i].width;\n        let j = i - 1;\n\n        while (j >= 0 && prevRect[j].width > key) {\n            const recti = {...prevRect[j]};\n            const rectj = {...prevRect[j+1]};\n            prevRect[j+1] = recti;\n            prevRect[j] = rectj;\n            pairs.push( {\n                xx:j,\n                yy:j+1,\n                changed:true\n            } );\n            j = j - 1;\n        }\n       // arr[j + 1] = arr[i];\n    }\n    for(let i=0;i<n;i++){\n        pairs.push({\n            xx:i,\n            yy:i,\n            changed:true\n        })\n    }\n    return pairs;\n}","import React, {Component} from 'react';\nimport {Link} from \"react-router-dom\";\n\nclass Navbar extends Component {\n    render() {\n        return (\n            <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark temp\">\n                <span className=\"navbar-brand\">Sorting Visualizer</span>\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\"\n                        data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\"\n                        aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                    <span className=\"navbar-toggler-icon\"></span>\n                </button>\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\" >\n                    <Link to={\"/\"}>\n                            <span style={{color:\"white\"}}>\n                                Home\n                            </span>\n                    </Link>\n                </div>\n\n            </nav>\n        );\n    }\n}\n\nexport default Navbar;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Slider from '@material-ui/core/Slider';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        width: 200,\r\n    },\r\n});\r\n\r\nfunction valuetext(value) {\r\n    return `${value}`;\r\n}\r\n\r\n\r\nexport default function DiscreteSlider(props) {\r\n    const classes = useStyles();\r\n    const handleChange = (event) =>{\r\n        if( event.target.innerText === \"\" ){\r\n            return;\r\n        }\r\n        const num = parseInt(event.target.innerText,10);\r\n        props.onCountChange(num);\r\n    }\r\n    return (\r\n        <div className={classes.root+\" ml-2 mr-2\"}>\r\n\r\n            <Slider\r\n                defaultValue={props.default}\r\n                getAriaValueText={valuetext}\r\n                aria-labelledby=\"discrete-slider\"\r\n                valueLabelDisplay=\"auto\"\r\n                onChangeCommitted={handleChange}\r\n                step={props.step}\r\n               // marks={props.marks}\r\n                min={props.min}\r\n                max={props.max}\r\n                // valueLabelDisplay=\"on\"\r\n                disabled={props.disable}\r\n            />\r\n            <Typography id=\"discrete-slider\" gutterBottom>\r\n                {props.title}\r\n            </Typography>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120,\r\n    },\r\n    selectEmpty: {\r\n        marginTop: theme.spacing(2),\r\n    },\r\n}));\r\n\r\nconst SimpleSelect = (props) => {\r\n    const classes = useStyles();\r\n    const [age, setAge] = React.useState('0');\r\n    const [state, setState] = React.useState({\r\n        pos: props.pos,\r\n    });\r\n    const handleChange = (event) => {\r\n        console.log(state.pos);\r\n        setAge(event.target.value);\r\n        props.onAlgoChanged(state.pos,event.target.value);\r\n    };\r\n\r\n    return (\r\n        <div className=\"ml-2 mr-2\">\r\n            <FormControl className={classes.formControl}>\r\n                <InputLabel id=\"demo-simple-select-label\">Algorithm</InputLabel>\r\n                <Select\r\n                    labelId=\"demo-simple-select-label\"\r\n                    id=\"demo-simple-select\"\r\n                    value={age}\r\n                    onChange={handleChange}\r\n                >\r\n                    <MenuItem value={0} style={{selected:true}} >Bubble Sort</MenuItem>\r\n                    <MenuItem value={1}>Selection Sort</MenuItem>\r\n                    <MenuItem value={2}>Insertion Sort</MenuItem>\r\n                </Select>\r\n            </FormControl>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SimpleSelect;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport Slider from '@material-ui/core/Slider';\nimport Typography from '@material-ui/core/Typography';\nimport Tooltip from '@material-ui/core/Tooltip';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: 300 + theme.spacing(3) * 2,\n    },\n    margin: {\n        height: theme.spacing(3),\n    },\n}));\n\nfunction ValueLabelComponent(props) {\n    const { children, open, value } = props;\n\n    return (\n        <Tooltip open={open} enterTouchDelay={0} placement=\"top\" title={value}>\n            {children}\n        </Tooltip>\n    );\n}\n\nValueLabelComponent.propTypes = {\n    children: PropTypes.element.isRequired,\n    open: PropTypes.bool.isRequired,\n    value: PropTypes.number.isRequired,\n};\n\n\n\n\nconst AirbnbSlider = withStyles({\n    root: {\n        color: '#3a8589',\n        height: 3,\n        padding: '13px 0',\n    },\n    thumb: {\n        height: 27,\n        width: 27,\n        backgroundColor: '#fff',\n        border: '1px solid currentColor',\n        marginTop: -12,\n        marginLeft: -13,\n        boxShadow: '#ebebeb 0 2px 2px',\n        '&:focus, &:hover, &$active': {\n            boxShadow: '#ccc 0 2px 3px 1px',\n        },\n        '& .bar': {\n            // display: inline-block !important;\n            height: 9,\n            width: 1,\n            backgroundColor: 'currentColor',\n            marginLeft: 1,\n            marginRight: 1,\n        },\n    },\n    active: {},\n    track: {\n        height: 3,\n    },\n    rail: {\n        color: '#ffffff',\n        opacity: 1,\n        height: 3,\n    },\n})(Slider);\n\nfunction AirbnbThumbComponent(props) {\n    return (\n        <span {...props}>\n      <span className=\"bar\" />\n      <span className=\"bar\" />\n      <span className=\"bar\" />\n    </span>\n    );\n}\n\nexport default function CustomizedSlider() {\n    const classes = useStyles();\n\n    return (\n        <div className={classes.root}>\n            <Typography gutterBottom>Airbnb</Typography>\n            <AirbnbSlider\n                ThumbComponent={AirbnbThumbComponent}\n                getAriaLabel={(index) => (index === 0 ? 'Minimum price' : 'Maximum price')}\n                defaultValue={[20, 40]}\n                valueLabelDisplay=\"on\"\n            />\n        </div>\n    );\n}\n","import React from 'react';\r\nimport {makeStyles, withStyles} from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Slider from '@material-ui/core/Slider';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        width: 200,\r\n    },\r\n});\r\n\r\n\r\nconst CSlider = withStyles({\r\n    root: {\r\n       // color: \"#ffffff\",\r\n        height: 3,\r\n        padding: \"13px 0\",\r\n    },\r\n    track: {\r\n        height: 4,\r\n        borderRadius: 2,\r\n    },\r\n    thumb: {\r\n        backgroundColor: \"#fff\",\r\n        //color: \"#fff\",\r\n    },\r\n})(Slider);\r\n\r\nfunction valuetext(value) {\r\n    return `${value}`;\r\n}\r\n\r\n\r\n\r\nexport default function RangeSlider(props) {\r\n    const classes = useStyles();\r\n    const [value, setValue] = React.useState([20, 37]);\r\n\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n\r\n    };\r\n    const handleCommit = (event, newValue) => {\r\n        console.log(newValue);\r\n    };\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            {/* <CSlider\r\n                disabled={props.disable}\r\n                value={value}\r\n                onChange={handleChange}\r\n                onChangeCommitted={handleCommit}\r\n                valueLabelDisplay=\"auto\"\r\n                aria-labelledby=\"range-slider\"\r\n                getAriaValueText={valuetext}\r\n                valueLabelDisplay=\"off\"\r\n            />\r\n            <Typography id=\"range-slider\" gutterBottom>\r\n                Value range\r\n            </Typography> */}\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\n\nexport default function SwitchLabels(props) {\n    const [state, setState] = React.useState({\n        checkedA: false,\n    });\n\n    const handleChange = (event) => {\n        setState({ ...state, [event.target.name]: event.target.checked });\n        props.onDoubleChange(event.target.checked);\n    };\n\n    return (\n        <FormGroup row>\n            <FormControlLabel\n                control={<Switch checked={state.checkedA} onChange={handleChange} name=\"checkedA\" />}\n                label=\"Duo\"\n                disabled={props.disable}\n            />\n\n        </FormGroup>\n    );\n}\n","import React, {Component} from 'react';\r\nimport DiscreteSlider from \"./slider\";\r\nimport SimpleSelect from \"./simpleSelect\";\r\nimport CustomizedSlider from \"./airBnbSlider\";\r\nimport RangeSlider from \"./doubleSlider\";\r\nimport SwitchLabels from \"./formControlLabel\";\r\n\r\n\r\nclass Menu extends Component {\r\n    render() {\r\n        return (\r\n            <nav className=\"nav alert-dark\">\r\n                <button\r\n                    className='btn btn-primary m-2'\r\n                    onClick={this.props.onRandomize}\r\n                    disabled={this.props.disable}\r\n                    style={this.isClickable()}\r\n                >\r\n                    Generate New Array\r\n                </button>\r\n\r\n                <RangeSlider\r\n                    disable={this.props.disable}\r\n                />\r\n                <DiscreteSlider\r\n                    default={20}\r\n                    min={10}\r\n                    max={100}\r\n                    step={10}\r\n                    title=\"Numbers\"\r\n                    onCountChange={this.props.onCountChange}\r\n                    disable={this.props.disable}\r\n                />\r\n                <DiscreteSlider\r\n                    default={50}\r\n                    min={10}\r\n                    max={100}\r\n                    step={1}\r\n                    title=\"Speed\"\r\n                    onCountChange={this.props.onSpeedChange}\r\n                    disable={false}\r\n                />\r\n                <SimpleSelect\r\n                    pos={0}\r\n                    onAlgoChanged={this.props.onAlgoChanged}\r\n                />\r\n                <SwitchLabels\r\n                    disable={this.props.disable}\r\n                    onDoubleChange={this.props.onDoubleChange}\r\n                />\r\n                <SimpleSelect\r\n                    pos={1}\r\n                    onAlgoChanged={this.props.onAlgoChanged}\r\n                />\r\n                <button\r\n                    className='btn btn-primary btn-lg visual'\r\n                    onClick={this.props.onViusalize}\r\n                    disabled={this.props.disable}\r\n                    style={this.isClickable()}\r\n                >\r\n                    Visualize\r\n                </button>\r\n                \r\n            </nav>\r\n            \r\n        );\r\n    }\r\n    isClickable = () =>{\r\n        if( this.props.disable ){\r\n            return {cursor: \"not-allowed\"};\r\n        } else{\r\n            return {};\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport default Menu;","import React, {Component} from 'react';\r\nimport Rect from \"./rect\";\r\nimport SimpleSelect from \"./simpleSelect\";\r\nimport onAlgoChanged from \"./menu.jsx\";\r\nimport Rects from \"./rects\";\r\n\r\nclass SortName1 extends Component {\r\n    render() {\r\n        let state= this.props.sorts;\r\n        let name=\"Bubble Sort\"\r\n        switch(state){\r\n            case 0:\r\n               name=\"Bubble Sort\";\r\n               break;\r\n            case 1:\r\n               name=\"Selection Sort\";\r\n               break;\r\n            case 2:\r\n                name=\"Insertion Sort\";\r\n                break;\r\n        }\r\n        return(\r\n            <div class=\"naming2\">\r\n                {name}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SortName1;","import React, {Component} from 'react';\r\n\r\nimport Rects from \"./rects\";\r\nimport {bubbleSort,selectionSort,insertionSort} from \"../algorithms/sortingAlgorithms\";\r\nimport Navbar from \"./navbar\";\r\nimport Menu from \"./menu\";\r\nimport SortName1 from \"./SortName1\";\r\n\r\nclass Sort extends Component {\r\n  state = {\r\n      count:20,\r\n      rects: [],\r\n      rects2: [],\r\n      doubles:false,\r\n      speed:50,\r\n      isRunning:false,\r\n      isRunning1:false,\r\n      isRunning2:false,\r\n      algo1:0,\r\n      algo2:0\r\n  }\r\n\r\n  componentDidMount() {\r\n      const rect = getInitialRects(this.state.count);\r\n      const rect2 = rect.slice();\r\n      this.setState({rects:rect,rects2:rect2});\r\n  }\r\n\r\n    render() {\r\n    return (\r\n        <React.Fragment>\r\n            <Navbar/>\r\n            <Menu\r\n                disable={this.state.isRunning}\r\n                onDoubleChange={this.handleDouble}\r\n                onViusalize={this.handleSort}\r\n                onRandomize={this.handleRandomize}\r\n                onRefresh={this.handleRefresh}\r\n                onCountChange={this.handleCountChange}\r\n                onAlgoChanged={this.handleAlgoChanged}\r\n                onSpeedChange={this.handleSpeedChanged}\r\n            />\r\n            \r\n            <div className=' justify-content-center'>\r\n\r\n                <Rects\r\n                    speed={this.state.speed}\r\n                    rects={this.state.rects}\r\n                />\r\n                <SortName1\r\n                        sorts={this.state.algo1}\r\n                    />\r\n                { this.state.doubles && <hr style={{width:\"90%\"}}/>}\r\n                { this.state.doubles &&\r\n                <div><Rects\r\n                    rects={this.state.rects2}\r\n                /> \r\n                <SortName1\r\n                sorts={this.state.algo2}\r\n            /></div>}\r\n            </div>\r\n        \r\n        </React.Fragment>\r\n    );\r\n  }\r\n  handleRandomize = () => {\r\n      const rect = getInitialRects(this.state.count);\r\n      const rect2 = rect.slice();\r\n      this.setState({rects:rect,rects2:rect2});\r\n  }\r\n  handleRefresh = () =>{\r\n      const rects = this.state.rects;\r\n      for(let i=0;i<rects.length;i++){\r\n          const rect = {...rects[i],isSorted:false, isSorting:false}\r\n          rects[i] = rect;\r\n      }\r\n      const rects2 = rects.slice();\r\n      this.setState({rects,rects2});\r\n  }\r\n\r\n  handleDouble = (val) =>{\r\n      this.setState({doubles:val});\r\n  }\r\n  handleCountChange = (val) => {\r\n      this.setState({count:val});\r\n      this.handleRandomize();\r\n  }\r\n  handleAlgoChanged = (pos,val) =>{\r\n      if( pos === 0 ){\r\n          this.setState({algo1:val});\r\n      } else{\r\n          this.setState({algo2:val});\r\n      }\r\n  }\r\n  handleSpeedChanged = (val) =>{\r\n    const speed = (760-val*7.5);\r\n    this.setState({speed});\r\n  }\r\n  handleSort = () =>{\r\n\r\n      this.setState({isRunning:true});\r\n      let steps1;\r\n      switch (this.state.algo1){\r\n          case 0:\r\n              steps1 = bubbleSort(this.state.rects);\r\n              break;\r\n          case 1:\r\n              steps1 = selectionSort(this.state.rects);\r\n              break;\r\n          case 2:\r\n              steps1 = insertionSort(this.state.rects);\r\n              break;\r\n          default:\r\n              steps1 = bubbleSort(this.state.rects);\r\n              break;\r\n      }\r\n      let steps2;\r\n      if( this.state.doubles ){\r\n\r\n          switch (this.state.algo2){\r\n              case 0:\r\n                  steps2 = bubbleSort(this.state.rects2);\r\n                  break;\r\n              case 1:\r\n                  steps2 = selectionSort(this.state.rects2);\r\n                  break;\r\n              case 2:\r\n                  steps2 = insertionSort(this.state.rects2);\r\n                  break;\r\n              default:\r\n                  steps2 = bubbleSort(this.state.rects2);\r\n                  break;\r\n          }\r\n\r\n      }\r\n      this.handleFirst(steps1);\r\n      if( this.state.doubles ) this.handleSecond(steps2);\r\n  }\r\n  handleFirst = async (steps) =>{\r\n     // console.log(\"fsdfsdfsdfasdf\");\r\n      this.setState({isRunning1:true});\r\n\r\n     // const steps = bubbleSort(this.state.rects);\r\n    //  console.log(steps.length);\r\n      const prevRect = this.state.rects;\r\n      for(let i = 0;i<steps.length;i++){\r\n       //   setTimeout(()=>{\r\n              if( i!==0 ){\r\n                  prevRect[steps[i-1].xx] = { ...prevRect[steps[i-1].xx],isSorting:false };\r\n                  prevRect[steps[i-1].yy] = { ...prevRect[steps[i-1].yy],isSorting:false };\r\n              }\r\n              if(steps[i].xx===steps[i].yy){\r\n                  prevRect[steps[i].xx] = {...prevRect[steps[i].xx],isSorted:true,isSorting:false};\r\n              }else if( steps[i].changed ){\r\n                  const recti = {...prevRect[steps[i].xx],isSorting:true};\r\n                  const rectj = {...prevRect[steps[i].yy],isSorting:true};\r\n                  prevRect[steps[i].yy] = recti;\r\n                  prevRect[steps[i].xx] = rectj;\r\n              } else{\r\n                  prevRect[steps[i].xx] = {...prevRect[steps[i].xx],isSorting:true};\r\n                  prevRect[steps[i].yy] = {...prevRect[steps[i].yy],isSorting:true};\r\n              }\r\n              if(i === steps.length-1){\r\n                  this.setState({isRunning1:false});\r\n                  if( this.state.isRunning2 === false ){\r\n                      this.setState({isRunning:false});\r\n                  }\r\n              }\r\n              this.setState({rects:prevRect});\r\n              await sleep(this.state.speed);\r\n      }\r\n  }\r\n    handleSecond = async (steps) =>{\r\n        this.setState({isRunning2:true});\r\n        const prevRect = this.state.rects2;\r\n        for(let i = 0;i<steps.length;i++){\r\n         //   setTimeout(()=>{\r\n                if( i!==0 ){\r\n                    prevRect[steps[i-1].xx] = { ...prevRect[steps[i-1].xx],isSorting:false };\r\n                    prevRect[steps[i-1].yy] = { ...prevRect[steps[i-1].yy],isSorting:false };\r\n                }\r\n                if(steps[i].xx===steps[i].yy){\r\n                    prevRect[steps[i].xx] = {...prevRect[steps[i].xx],isSorted:true,isSorting:false};\r\n                }else if( steps[i].changed ){\r\n                    const recti = {...prevRect[steps[i].xx],isSorting:true};\r\n                    const rectj = {...prevRect[steps[i].yy],isSorting:true};\r\n                    prevRect[steps[i].yy] = recti;\r\n                    prevRect[steps[i].xx] = rectj;\r\n                } else{\r\n                    prevRect[steps[i].xx] = {...prevRect[steps[i].xx],isSorting:true};\r\n                    prevRect[steps[i].yy] = {...prevRect[steps[i].yy],isSorting:true};\r\n                }\r\n                if( i === steps.length-1 ){\r\n                    this.setState({isRunning2:false});\r\n                    if( this.state.isRunning1 === false ){\r\n                        this.setState({isRunning:false});\r\n                    }\r\n                }\r\n                this.setState({rects2:prevRect});\r\n                await sleep(this.state.speed);\r\n           \r\n        }\r\n    }\r\n\r\n\r\n}\r\nfunction sleep(ms) {\r\n    return new Promise(resolve => setTimeout(resolve, ms));\r\n}\r\nconst getInitialRects = (tot) => {\r\n    const rects = [];\r\n    for(let i = 0;i<tot;i++){\r\n        rects.push(getRect(i));\r\n    }\r\n    return rects;\r\n}\r\nconst getRect = (kk) => {\r\n  return {\r\n      width: Math.floor(Math.random() * 200)+50,\r\n      isSorted:false,\r\n      isSorting:false,\r\n      kk:kk\r\n  }\r\n}\r\nexport default Sort;\r\n","import React, {Component} from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { LabelImportant } from '@material-ui/icons';\r\n\r\n\r\nclass EntryPoint extends Component {\r\n    state={\r\n        error:false\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>\r\n                   <b>Enter a number to search</b> \r\n                </h1>\r\n                <TextField\r\n                    error={this.state.error}\r\n                    id=\"standard-error-helper-text\"\r\n                    // label=\"Upper Number\"\r\n                    type=\"number\"\r\n                    variant=\"outlined\"\r\n                    onChange={this.getData}\r\n                    style={{color:\"white\"}}\r\n                /> <br /><br />\r\n                <h1>\r\n                    Searching  number : {this.props.upper}\r\n                </h1>\r\n                <br />\r\n                <button\r\n                    className='btn btn-warning btn-lg'\r\n                    onClick={this.props.startGame}\r\n                    style={{backgroundColor: \"#0066ff\", color:\"white\"}}\r\n                >\r\n                    Start Search\r\n                </button>\r\n            </div>\r\n        );\r\n    }\r\n    getData = (e)=>{\r\n        if( e.target.value!== \"\" ){\r\n            console.log(e.target.value);\r\n            this.props.setUpper(e.target.value);\r\n        }\r\n        else{\r\n            this.props.setUpper(100)\r\n        }\r\n    }\r\n    validateNumbers = () =>{\r\n\r\n    }\r\n}\r\n\r\nexport default EntryPoint;","import React, {Component} from 'react';\r\nimport {keyval} from './binarySearch';\r\nimport BinarySearch from './binarySearch';\r\n\r\nclass Result extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <span className='display-3' style={{fontSize: \"45px\"}}>\r\n                    {this.props.keyval == -1 ? \"The number \"+this.props.res+\" is not found\":\"The number \"+this.props.res+\" is found at index:\" + this.props.keyval}\r\n                </span> <br />\r\n                <button\r\n                    className='btn btn-warning btn-lg'\r\n                    onClick={this.props.onRestart}\r\n                    style={{backgroundColor:\"#0066ff\", color:\"white\"}}\r\n                >\r\n                    Restart\r\n                </button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Result;\r\n","import React, {Component} from 'react';\r\nimport Result from \"./result\";\r\n\r\nclass Search extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.props.phase === 1 &&\r\n                   <Result\r\n                       res={this.props.upper}\r\n                       onRestart={this.props.onRestart}\r\n                       keyval={this.props.keyval}\r\n                   />\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default Search;","import React, {Component} from 'react';\nimport {Link} from \"react-router-dom\";\n\nclass Navbar extends Component {\n    render() {\n        return (\n            <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\" >\n                <span className=\"navbar-brand\" >Binary Search Game </span>\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\"\n                        data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\"\n                        aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                    <span className=\"navbar-toggler-icon\"></span>\n                </button>\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\" >\n                    <Link to={\"/\"}>\n                        <span style={{color:\"white\"}}>\n                            Home\n                        </span>\n                    </Link>\n                </div>\n\n            </nav>\n        );\n    }\n}\n\nexport default Navbar;","import React, {Component} from 'react';\r\n// import DiscreteSlider from \"./slider\";\r\n// import SimpleSelect from \"./simpleSelect\";\r\n// import CustomizedSlider from \"./airBnbSlider\";\r\n// import RangeSlider from \"./doubleSlider\";\r\n// import SwitchLabels from \"./formControlLabel\";\r\n\r\n\r\nclass Menu extends Component {\r\n    render() {\r\n        return (\r\n            <nav className=\"nav alert-dark\">\r\n                <button\r\n                    className='btn btn-primary m-2'\r\n                    onClick={this.props.onRandomize}\r\n                    disabled={this.props.disable}\r\n                    style={this.isClickable()}\r\n                >\r\n                   Generate New Array\r\n                </button>\r\n\r\n                {/* <RangeSlider\r\n                    disable={this.props.disable}\r\n                /> */}\r\n                {/* <DiscreteSlider\r\n                    default={20}\r\n                    min={10}\r\n                    max={100}\r\n                    step={10}\r\n                    title=\"Numbers\"\r\n                    onCountChange={this.props.onCountChange}\r\n                    disable={this.props.disable}\r\n                /> */}\r\n                {/* <DiscreteSlider\r\n                    default={50}\r\n                    min={10}\r\n                    max={100}\r\n                    step={1}\r\n                    title=\"Speed\"\r\n                    onCountChange={this.props.onSpeedChange}\r\n                    disable={false}\r\n                /> */}\r\n                {/* <SimpleSelect\r\n                    pos={0}\r\n                    onAlgoChanged={this.props.onAlgoChanged}\r\n                /> */}\r\n                {/* <button\r\n                    className='btn btn-primary btn-lg visual'\r\n                    onClick={this.props.startGame}\r\n                    disabled={this.props.disable}\r\n                    style={this.isClickable()}\r\n                >\r\n                    Search\r\n                </button> */}\r\n\r\n            </nav>\r\n        );\r\n    }\r\n    isClickable = () =>{\r\n        if( this.props.disable ){\r\n            return {cursor: \"not-allowed\"};\r\n        } else{\r\n            return {};\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport default Menu;","import React, {Component} from 'react';\r\n// import './style.css';\r\nclass Rect extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div\r\n                className='rect'\r\n                style={{height:this.props.rect.width,\r\n                    border: this.checkBorder(),\r\n                    background:this.checkColor(),\r\n                    margin:this.props.marg\r\n\r\n\r\n                }}\r\n            >\r\n                <div class=\"num\" >\r\n            <div>{this.props.rect.width}</div>\r\n\r\n                </div>  \r\n            </div>\r\n        );\r\n    }\r\n    checkColor = () => {\r\n        if( this.props.rect.isMid ){\r\n            return \"purple\";\r\n        } else if( this.props.rect.isFound ){\r\n            return \"green\";\r\n        } else if( this.props.rect.isNotFound ){\r\n            return \"red\";\r\n        }\r\n        // } else if(this.props.rect.isRight){\r\n        //     return \"purple\";\r\n        // }else{\r\n        //     return \"black\";\r\n        // }\r\n        // if( this.props.rect.isSorted ){\r\n        //     return \"green\";\r\n        // } else if( this.props.rect.isSorting ){\r\n        //     return \"orange\";\r\n        // } else if( this.props.rect.isLeft ){\r\n        //     return \"red\";\r\n        // } else if(this.props.rect.isRight){\r\n        //     return \"purple\";\r\n        // }else{\r\n        //     return \"black\";\r\n        // }\r\n    }\r\n    checkBorder = () =>{\r\n        if( this.props.rect.isRange ){\r\n            return \"0px solid black\";\r\n        } else{\r\n            return \"0px\"\r\n        }\r\n    }\r\n}\r\n\r\nexport default Rect;","import React, {Component} from 'react';\r\nimport Rect from \"./rect\";\r\n// import SimpleSelect from \"./simpleSelect\";\r\nimport onAlgoChanged from \"./menu.jsx\";\r\n\r\nclass Rects extends Component {\r\n    render() {\r\n        let margin = 5;\r\n        if( this.props.rects.length>50 ){\r\n            margin=1;\r\n        }\r\n        return (\r\n            <div className=\"d-flex justify-content-center align-items-end\">\r\n                {this.props.rects.map( (rect,rectidx)=>{\r\n                    return (\r\n                        <Rect\r\n                            marg={margin}\r\n                            key={rectidx}\r\n                            rect={rect}\r\n                        />\r\n                    );\r\n                } )}\r\n               \r\n               \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Rects;","import React, {Component} from 'react';\r\nimport EntryPoint from \"./entryPoint\";\r\nimport Search from \"./search\";\r\nimport Navbar from \"./navbar\";\r\nimport Menu from \"./menu\";\r\nimport Rect from \"./rect\";\r\nimport Rects from \"./rects\";\r\nimport { toBePartiallyChecked } from '@testing-library/jest-dom/dist/matchers';\r\nimport Result from './result';\r\n\r\nclass BinarySearch extends Component {\r\n    state = {\r\n        count: 20,\r\n        rects: [],\r\n        speed: 50,\r\n        isRunning: false,\r\n        algo: 0,\r\n        keyval:0,\r\n        phase:0\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    componentDidMount() {\r\n        var rects = getInitialRects(this.state.count);\r\n        for(let i=0;i<rects.length;i++)\r\n        {\r\n            for(let j=0;j<rects.length-i-1;j++)\r\n            {\r\n                if(rects[j].width>rects[j+1].width)\r\n                {\r\n                    let temp=rects[j].width;\r\n                    rects[j].width=rects[j+1].width;\r\n                    rects[j+1].width=temp;\r\n                }\r\n            }\r\n        }\r\n        this.setState({rects});\r\n\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Navbar/>\r\n                <Menu\r\n                    disable={this.state.isRunning}\r\n                    onSearch={this.handleSearch}\r\n                    onRandomize={this.handleRandomize}\r\n                />\r\n                <div className=' justify-content-center'>\r\n                    <Rects\r\n                        rects={this.state.rects}\r\n                    />\r\n\r\n                </div>\r\n                \r\n                <br />\r\n                <br />\r\n                <br />\r\n            <center>\r\n                {!this.state.isRunning &&\r\n                <EntryPoint\r\n                    startGame={this.handleStartGame}\r\n                    upper={this.state.upper}\r\n                    setUpper={this.handleSetUpper}\r\n                /> }\r\n                {this.state.isRunning &&\r\n                <Search\r\n                    \r\n                    upper={this.state.upper}\r\n                    max={this.state.max}\r\n                    onRestart={this.handleRestart}\r\n                    keyval={this.state.keyval}\r\n                    phase={this.state.phase}\r\n                />\r\n                }\r\n            </center>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    handleRandomize = () => {\r\n        const rect = getInitialRects(this.state.count);\r\n\r\n        this.setState({rects: rect});\r\n    }\r\n    handleRefresh = () => {\r\n        const rects = this.state.rects;\r\n        for (let i = 0; i < rects.length; i++) {\r\n            const rect = {...rects[i], isMid: false, isFound: false, isNotFound: false}\r\n            rects[i] = rect;\r\n\r\n            // alert(rects[i]);\r\n        }\r\n        for(let i=0;i<rects.length;i++)\r\n        {\r\n            for(let j=0;j<rects.length-i-1;j++)\r\n            {\r\n                if(rects[j].width>rects[j+1].width)\r\n                {\r\n                    let temp=rects[j].width;\r\n                    rects[j].width=rects[j+1].width;\r\n                    rects[j+1].width=temp;\r\n                }\r\n            }\r\n        }\r\n        this.setState({rects});\r\n    }\r\n    handleStartGame = () =>{\r\n        this.setState({isRunning:true});\r\n        let end=this.state.rects.length-1;\r\n        let pairs=[];\r\n        let key=search1(this.state.rects,this.state.upper,0,end,pairs);\r\n      \r\n         this.setState({keyval:key,isRunning:true});\r\n         this.handleFirst(pairs);\r\n         this.setState({phase:1});\r\n    }\r\n    handleRestart = () =>{\r\n        this.setState({isRunning:false,upper:0,lower:0});\r\n\r\n        this.handleRandomize();\r\n\r\n    }\r\n    \r\n    handleSetUpper = (up) =>{\r\n        let val = parseInt(up);\r\n        if( val<=0 ){\r\n            val = 100;\r\n        }\r\n        this.setState({upper:val,max:val});\r\n    }\r\n\r\n    handleFirst = async(pairs) =>{\r\n        const rect = this.state.rects;\r\n        for(let i=0;i<pairs.length;i++)\r\n        {\r\n            if(pairs[i].y==0){\r\n            rect[pairs[i].x] = {...rect[pairs[i].x], isMid: true, isFound: false, isNotFound: false}\r\n            }\r\n            if(pairs[i].y==2){\r\n                rect[pairs[i].x] = {...rect[pairs[i].x], isMid: false, isFound: true, isNotFound: false}\r\n                }\r\n                else{\r\n                    rect[pairs[i].x] = {...rect[pairs[i].x], isMid: false, isFound: false, isNotFound: true}\r\n                    }\r\n            this.setState({rects:rect});\r\n            await sleep(this.state.speed);\r\n        }\r\n    }\r\n}\r\n    function sleep(ms) {\r\n        return new Promise(resolve => setTimeout(resolve, ms));\r\n    }\r\n    const getInitialRects = (tot) => {\r\n        const rects = [];\r\n        for (let i = 0; i < tot; i++) {\r\n            rects.push(getRect());\r\n        }\r\n\r\n        for(let i=0;i<rects.length;i++)\r\n        {\r\n            for(let j=0;j<rects.length-i-1;j++)\r\n            {\r\n                if(rects[j].width>rects[j+1].width)\r\n                {\r\n                    let temp=rects[j].width;\r\n                    rects[j].width=rects[j+1].width;\r\n                    rects[j+1].width=temp;\r\n                }\r\n            }\r\n        }\r\n        return rects;\r\n    }\r\n    const getRect = () => {\r\n        return {\r\n            width: Math.floor(Math.random() * 200) + 50,\r\n            isSorted: false,\r\n            isSorting: false,\r\n            isLeft: false,\r\n            isRight: false\r\n        }\r\n    }\r\n    \r\n\r\n    const search1 = (rects,x,start,end,pairs) =>{\r\n        if (start > end) return -1;\r\n        let mid=Math.floor((start + end)/2);\r\n        pairs.push(\r\n            {\r\n                x:mid,y:0\r\n            }\r\n        );\r\n        if (rects[mid].width===x) {\r\n            pairs.push(\r\n                {\r\n                    x:mid,y:2\r\n                }\r\n            );\r\n            return mid;\r\n        } \r\n        if(rects[mid].width > x)\r\n        {\r\n            pairs.push(\r\n                {\r\n                    x:mid,y:1\r\n                }\r\n            );\r\n            return search1(rects, x, start, mid-1,pairs);\r\n        }\r\n        else{\r\n            pairs.push(\r\n                {\r\n                    x:mid,y:1\r\n                }\r\n            );\r\n            return search1(rects, x, mid+1, end,pairs);\r\n        }\r\n\r\n\r\n    }\r\nexport default BinarySearch;","import React, {Component} from 'react';\r\nimport './style.css';\r\nclass Rect extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div\r\n                className='rect'\r\n                style={{height:this.props.rect.width,\r\n                    border: this.checkBorder(),\r\n                    background:this.checkColor(),\r\n                    margin:this.props.marg\r\n\r\n\r\n                }}\r\n            >\r\n                <div class=\"num\" >\r\n            <div>{this.props.rect.width}</div>\r\n\r\n                </div>  \r\n            </div>\r\n        );\r\n    }\r\n    checkColor = () => {\r\n        if( this.props.rect.isSorted ){\r\n            return \"green\";\r\n        } else if( this.props.rect.isSorting ){\r\n            return \"orange\";\r\n        } else if( this.props.rect.isLeft ){\r\n            return \"red\";\r\n        } else if(this.props.rect.isRight){\r\n            return \"purple\";\r\n        }else{\r\n            return \"black\";\r\n        }\r\n    }\r\n    checkBorder = () =>{\r\n        if( this.props.rect.isRange ){\r\n            return \"0px solid black\";\r\n        } else{\r\n            return \"0px\"\r\n        }\r\n    }\r\n}\r\n\r\nexport default Rect;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n\nconst useStyles = makeStyles((theme) => ({\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 120,\n    },\n    selectEmpty: {\n        marginTop: theme.spacing(2),\n    },\n}));\n\nconst SimpleSelect = (props) => {\n    const classes = useStyles();\n    const [age, setAge] = React.useState('0');\n    const [state, setState] = React.useState({\n        pos: props.pos,\n    });\n    const handleChange = (event) => {\n        console.log(state.pos);\n        setAge(event.target.value);\n        props.onAlgoChanged(state.pos,event.target.value);\n    };\n\n    return (\n        <div className=\"ml-2 mr-2\">\n            <FormControl className={classes.formControl}>\n                <InputLabel id=\"demo-simple-select-label\">Algorithm</InputLabel>\n                <Select\n                    labelId=\"demo-simple-select-label\"\n                    id=\"demo-simple-select\"\n                    value={age}\n                    onChange={handleChange}\n                >\n                    <MenuItem value={0} style={{selected:true}} >Merge Sort</MenuItem>\n                    <MenuItem value={1} style={{selected:true}} >Heap Sort</MenuItem>\n                    <MenuItem value={2} style={{selected:true}} >Quick Sort</MenuItem>\n                </Select>\n            </FormControl>\n        </div>\n    );\n}\n\nexport default SimpleSelect;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Slider from '@material-ui/core/Slider';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        width: 200,\r\n    },\r\n});\r\n\r\nfunction valuetext(value) {\r\n    return `${value}`;\r\n}\r\n\r\n\r\nexport default function DiscreteSlider(props) {\r\n    const classes = useStyles();\r\n    const handleChange = (event) =>{\r\n        if( event.target.innerText === \"\" ){\r\n            return;\r\n        }\r\n        const num = parseInt(event.target.innerText,10);\r\n        props.onCountChange(num);\r\n    }\r\n    return (\r\n        <div className={classes.root+\" ml-2 mr-2\"}>\r\n\r\n            <Slider\r\n                defaultValue={props.default}\r\n                getAriaValueText={valuetext}\r\n                aria-labelledby=\"discrete-slider\"\r\n                valueLabelDisplay=\"auto\"\r\n                onChangeCommitted={handleChange}\r\n                step={props.step}\r\n               marks={props.marks}\r\n                min={props.min}\r\n                max={props.max}\r\n                // valueLabelDisplay=\"on\"\r\n                disabled={props.disable}\r\n            />\r\n            <Typography id=\"discrete-slider\" gutterBottom>\r\n                {props.title}\r\n            </Typography>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport Slider from '@material-ui/core/Slider';\nimport Typography from '@material-ui/core/Typography';\nimport Tooltip from '@material-ui/core/Tooltip';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: 300 + theme.spacing(3) * 2,\n    },\n    margin: {\n        height: theme.spacing(3),\n    },\n}));\n\nfunction ValueLabelComponent(props) {\n    const { children, open, value } = props;\n\n    return (\n        <Tooltip open={open} enterTouchDelay={0} placement=\"top\" title={value}>\n            {children}\n        </Tooltip>\n    );\n}\n\nValueLabelComponent.propTypes = {\n    children: PropTypes.element.isRequired,\n    open: PropTypes.bool.isRequired,\n    value: PropTypes.number.isRequired,\n};\n\n\n\n\nconst AirbnbSlider = withStyles({\n    root: {\n        color: '#3a8589',\n        height: 3,\n        padding: '13px 0',\n    },\n    thumb: {\n        height: 27,\n        width: 27,\n        backgroundColor: '#fff',\n        border: '1px solid currentColor',\n        marginTop: -12,\n        marginLeft: -13,\n        boxShadow: '#ebebeb 0 2px 2px',\n        '&:focus, &:hover, &$active': {\n            boxShadow: '#ccc 0 2px 3px 1px',\n        },\n        '& .bar': {\n            // display: inline-block !important;\n            height: 9,\n            width: 1,\n            backgroundColor: 'currentColor',\n            marginLeft: 1,\n            marginRight: 1,\n        },\n    },\n    active: {},\n    track: {\n        height: 3,\n    },\n    rail: {\n        color: '#ffffff',\n        opacity: 1,\n        height: 3,\n    },\n})(Slider);\n\nfunction AirbnbThumbComponent(props) {\n    return (\n        <span {...props}>\n      <span className=\"bar\" />\n      <span className=\"bar\" />\n      <span className=\"bar\" />\n    </span>\n    );\n}\n\nexport default function CustomizedSlider() {\n    const classes = useStyles();\n\n    return (\n        <div className={classes.root}>\n            <Typography gutterBottom>Airbnb</Typography>\n            <AirbnbSlider\n                ThumbComponent={AirbnbThumbComponent}\n                getAriaLabel={(index) => (index === 0 ? 'Minimum price' : 'Maximum price')}\n                defaultValue={[20, 40]}\n                valueLabelDisplay=\"on\"\n            />\n        </div>\n    );\n}\n","import React from 'react';\r\nimport {makeStyles, withStyles} from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Slider from '@material-ui/core/Slider';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        width: 200,\r\n    },\r\n});\r\n\r\n\r\nconst CSlider = withStyles({\r\n    root: {\r\n       // color: \"#ffffff\",\r\n        height: 3,\r\n        padding: \"13px 0\",\r\n    },\r\n    track: {\r\n        height: 4,\r\n        borderRadius: 2,\r\n    },\r\n    thumb: {\r\n        backgroundColor: \"#fff\",\r\n        //color: \"#fff\",\r\n    },\r\n})(Slider);\r\n\r\nfunction valuetext(value) {\r\n    return `${value}`;\r\n}\r\n\r\n\r\n\r\nexport default function RangeSlider(props) {\r\n    const classes = useStyles();\r\n    const [value, setValue] = React.useState([20, 37]);\r\n\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n\r\n    };\r\n    const handleCommit = (event, newValue) => {\r\n        console.log(newValue);\r\n    };\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            {/* <CSlider\r\n                disabled={props.disable}\r\n                value={value}\r\n                onChange={handleChange}\r\n                onChangeCommitted={handleCommit}\r\n                valueLabelDisplay=\"auto\"\r\n                aria-labelledby=\"range-slider\"\r\n                getAriaValueText={valuetext}\r\n                // valueLabelDisplay=\"off\"\r\n            />\r\n            <Typography id=\"range-slider\" gutterBottom>\r\n                Value range\r\n            </Typography> */}\r\n        </div>\r\n    );\r\n}\r\n","import React, {Component} from 'react';\r\nimport DiscreteSlider from \"./slider\";\r\nimport SimpleSelect from \"./simpleSelect\";\r\nimport CustomizedSlider from \"./airBnbSlider\";\r\nimport RangeSlider from \"./doubleSlider\";\r\nimport SwitchLabels from \"./formControlLabel\";\r\n\r\n\r\nclass Menu extends Component {\r\n    render() {\r\n        return (\r\n            <nav className=\"nav alert-dark\">\r\n                <button\r\n                    className='btn btn-primary m-2'\r\n                    onClick={this.props.onRandomize}\r\n                    disabled={this.props.disable}\r\n                    style={this.isClickable()}\r\n                >\r\n                   Generate New Array\r\n                </button>\r\n\r\n                <RangeSlider\r\n                    disable={this.props.disable}\r\n                />\r\n                <DiscreteSlider\r\n                    default={20}\r\n                    min={10}\r\n                    max={100}\r\n                    step={10}\r\n                    title=\"Numbers\"\r\n                    onCountChange={this.props.onCountChange}\r\n                    disable={this.props.disable}\r\n                />\r\n                <DiscreteSlider\r\n                    default={50}\r\n                    min={10}\r\n                    max={100}\r\n                    step={1}\r\n                    title=\"Speed\"\r\n                    onCountChange={this.props.onSpeedChange}\r\n                    disable={false}\r\n                />\r\n                <SimpleSelect\r\n                    pos={0}\r\n                    onAlgoChanged={this.props.onAlgoChanged}\r\n                />\r\n                <button\r\n                    className='btn btn-primary btn-lg visual'\r\n                    onClick={this.props.onViusalize}\r\n                    disabled={this.props.disable}\r\n                    style={this.isClickable()}\r\n                >\r\n                    Visualize\r\n                </button>\r\n\r\n            </nav>\r\n        );\r\n    }\r\n    isClickable = () =>{\r\n        if( this.props.disable ){\r\n            return {cursor: \"not-allowed\"};\r\n        } else{\r\n            return {};\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport default Menu;","import React, {Component} from 'react';\r\nimport Rect from \"./rect\";\r\nimport SimpleSelect from \"./simpleSelect\";\r\nimport onAlgoChanged from \"./menu.jsx\";\r\n\r\nclass Rects extends Component {\r\n    render() {\r\n        let margin = 5;\r\n        if( this.props.rects.length>50 ){\r\n            margin=1;\r\n        }\r\n        return (\r\n            <div className=\"d-flex justify-content-center align-items-end\">\r\n                {this.props.rects.map( (rect,rectidx)=>{\r\n                    return (\r\n                        <Rect\r\n                            marg={margin}\r\n                            key={rectidx}\r\n                            rect={rect}\r\n                        />\r\n                    );\r\n                } )}\r\n               \r\n               \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Rects;","import React, {Component} from 'react';\r\nimport Rect from \"./rect\";\r\nimport SimpleSelect from \"./simpleSelect\";\r\nimport onAlgoChanged from \"./menu.jsx\";\r\nimport Rects from \"./rects\";\r\n\r\nclass SortName extends Component {\r\n    render() {\r\n        let state= this.props.sorts;\r\n        let name=\"Merge Sort\"\r\n        switch(state){\r\n            case 0:\r\n               name=\"Merge Sort\";\r\n               break;\r\n            case 1:\r\n               name=\"Heap Sort\";\r\n               break;\r\n            case 2:\r\n                name=\"Quick Sort\";\r\n                break;\r\n        }\r\n        return(\r\n            <div class=\"naming\">\r\n                {name}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SortName;","let values = [];\nexport default function mergeSort(rects2){\n    let rects = rects2.slice();\n    values = [];\n    let sz = rects2.length;\n   // console.log( \"fdsfsd\",sz );\n    sz = sz-1;\n    mergeS(rects,0,sz);\n    return values;\n}\n\nfunction merge(rects, l, m, r){\n  //  console.log(l,\" \",r);\n    let n1 = m-l+1;\n    let n2 = r-m;\n\n    const L = rects.slice(l, m+1);\n    const R = rects.slice(m+1,r+1);\n    let i = 0;\n    let j = 0;\n    let k = l;\n    while(i<n1 && j<n2){\n        if( L[i].width <= R[j].width ){\n            rects[k] = L[i];\n            i++;\n        } else{\n            rects[k] = R[j];\n            j++;\n        }\n        k++;\n    }\n    while (i < n1) {\n        rects[k] = L[i];\n        i++;\n        k++;\n    }\n    while (j < n2) {\n        rects[k] = R[j];\n        j++;\n        k++;\n    }\n\n}\n\nfunction mergeS(rects,l,r){\n\n    if( l>=r ) return;\n    let m = l+ (r-l)/2;\n    m = Math.floor(m);\n   // console.log(\"iiiiiiiiiiiiiiiiiiiiiiiii \",m);\n    mergeS(rects,l,m);\n    mergeS(rects,m+1,r);\n    merge(rects,l,m,r);\n    let rectsCopy = rects.slice(l,r+1);\n    let value = {\n        left:l,\n        right:r,\n        mid:m,\n        val:rectsCopy\n    }\n    values.push(value);\n}","let values = [];\nexport default function HeapSort(rects2){\n    let rects = rects2.slice();\n    values = [];\n    let sz = rects2.length;\n   // sz = sz-1;\n    heapSort(rects,sz);\n    return values;\n}\nfunction heapify(rects,n,i){\n    let largest = i; // Initialize largest as root\n    let l = 2 * i + 1; // left = 2*i + 1\n    let r = 2 * i + 2; // right = 2*i + 2\n\n    // If left child is larger than root\n    if (l < n && rects[l].width > rects[largest].width)\n        largest = l;\n\n    // If right child is larger than largest so far\n    if (r < n && rects[r].width > rects[largest].width)\n        largest = r;\n\n    // If largest is not root\n    if (largest != i) {\n        let temp = rects[i];\n        rects[i] = rects[largest];\n        rects[largest] = temp;\n        let value = {\n            left:i,\n            right:largest,\n            sorted: false\n        }\n        values.push(value);\n        // Recursively heapify the affected sub-tree\n        heapify(rects, n, largest);\n    }\n}\nfunction heapSort(rects,n){\n    for(let i = Math.floor(n/2)-1;i>=0;i--){\n      //  console.log(\"heap \",n,\" \",i);\n        heapify(rects,n,i);\n    }\n    for (let i = n-1 ; i > 0; i--) {\n        // Move current root to end\n        let temp = rects[i];\n        rects[i] = rects[0];\n        rects[0] = temp;\n        let value = {\n            left:i,\n            right:0,\n            sorted:true\n        }\n        values.push(value);\n        // call max heapify on the reduced heap\n        heapify(rects, i, 0);\n    }\n}\n","let values = [];\n\nexport function quickSortRecursive(rects2){\n    let rects = rects2.slice();\n    values = [];\n    let sz = rects2.length;\n    // console.log( \"fdsfsd\",sz );\n    sz = sz-1;\n    quick(rects,0,sz);\n    return values;\n}\n\n\nfunction getPartition(rects, left, right){\n    values.push({\n        left,\n        right,\n        swap:false,\n        changedRange:true,\n    })\n    let pivot = rects[right].width\n    let it = left-1;\n    for(var j=left;j<=right-1;j++){\n        if( rects[j].width< pivot){\n            it++;\n            if( it!==j ){\n                // swap(rects[it],rects[j];\n                const rect1 = {...rects[it]};\n                const rect2 = {...rects[j]};\n                rects[it] = rect2;\n                rects[j] = rect1;\n                values.push({\n                    left:it,\n                    right:j,\n                    swap:true,\n                    changedRange:false,\n                })\n            }\n        }\n    }\n    if( it+1!==right ){\n        const rect1 = {...rects[it+1]};\n        const rect2 = {...rects[right]};\n        rects[it+1] = rect2;\n        rects[right] = rect1;\n        values.push({\n            left:it+1,\n            right:right,\n            swap:true,\n            changedRange:false,\n        })\n    }\n    return it+1;\n}\nfunction quick(rects,left,right){\n    if( left>=right ) return ;\n    const partition = getPartition(rects,left,right);\n    quick(rects,left,partition-1);\n    quick(rects,partition+1,right);\n}","import React, {Component} from 'react';\nimport {Link} from \"react-router-dom\";\n\nclass Navbar extends Component {\n    render() {\n        return (\n            <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n                <span className=\"navbar-brand\">Recursive Sorting Visualizer</span>\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\"\n                        data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\"\n                        aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                    <span className=\"navbar-toggler-icon\"></span>\n                </button>\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\" >\n                    <Link to={\"/\"}>\n                            <span style={{color:\"white\"}}>\n                                Home\n                            </span>\n                    </Link>\n                </div>\n\n            </nav>\n        );\n    }\n}\n\nexport default Navbar;","import React, {Component} from 'react';\r\nimport Rect from \"./rect\";\r\nimport Rects from \"./rects\";\r\nimport SortName from \"./SortName\";\r\nimport mergeSort from '../algorithms/mergeSort';\r\nimport heapSort from \"../algorithms/heapSort\";\r\nimport {quickSortRecursive} from \"../algorithms/quickSortRecursive\";\r\nimport Navbar from \"./navbar\";\r\nimport Menu from \"./menu\";\r\n\r\nclass RecursiveSort extends Component {\r\n    state = {\r\n        count: 20,\r\n        rects: [],\r\n        speed: 50,\r\n        isRunning: false,\r\n        algo: 0\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    componentDidMount() {\r\n        var rects = getInitialRects(this.state.count);\r\n        this.setState({rects});\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <Navbar/>\r\n                <Menu\r\n                    disable={this.state.isRunning}\r\n                    onViusalize={this.handleSort}\r\n                    onRandomize={this.handleRandomize}\r\n                    onRefresh={this.handleRefresh}\r\n                    onCountChange={this.handleCountChange}\r\n                    onAlgoChanged={this.handleAlgoChanged}\r\n                    onSpeedChange={this.handleSpeedChanged}\r\n                />\r\n                \r\n                <div className=' justify-content-center'>\r\n                    <Rects\r\n                        rects={this.state.rects}\r\n                    />\r\n\r\n                </div>\r\n                <div>\r\n                    {/* x={this.state.algo} */}\r\n                    <SortName\r\n                        sorts={this.state.algo}\r\n                    />\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n    /*    */\r\n\r\n    handleName = () => {\r\n\r\n        this.setState({isRunning: true});\r\n        let steps;\r\n        let rects2;\r\n        switch (this.state.algo) {\r\n\r\n            case 0:\r\n                // \"MergeSort\"\r\n                this.render(\r\n                    <p>MergeSort</p>\r\n                )\r\n                break;\r\n            case 1:\r\n                rects2 = this.state.rects.slice();\r\n                steps = heapSort(rects2);\r\n                this.handleHeap(steps);\r\n                break;\r\n            case 2:\r\n                rects2 = this.state.rects.slice();\r\n                steps = quickSortRecursive(rects2);\r\n                this.handleQuick(steps);\r\n                break;\r\n            default:\r\n        }\r\n\r\n\r\n    }\r\n    \r\n    /*  */\r\n    handleRandomize = () => {\r\n        const rect = getInitialRects(this.state.count);\r\n        this.setState({rects: rect});\r\n    }\r\n    handleRefresh = () => {\r\n        const rects = this.state.rects;\r\n        for (let i = 0; i < rects.length; i++) {\r\n            const rect = {...rects[i], isSorted: false, isSorting: false}\r\n            rects[i] = rect;\r\n            // alert(rects[i]);\r\n        }\r\n        this.setState({rects});\r\n    }\r\n    handleCountChange = (val) => {\r\n        this.setState({count: val});\r\n        this.handleRandomize();\r\n    }\r\n    handleAlgoChanged = (pos, val) => {\r\n        if (pos === 0) {\r\n            // console.log(\"sup 0\");\r\n            this.setState({algo: val});\r\n        }\r\n    }\r\n    handleSpeedChanged = (val) => {\r\n        const speed = (110 - val);\r\n        this.setState({speed});\r\n    }\r\n\r\n    handleSort = () => {\r\n\r\n        this.setState({isRunning: true});\r\n        let steps;\r\n        let rects2;\r\n        switch (this.state.algo) {\r\n\r\n            case 0:\r\n                steps = mergeSort(this.state.rects);\r\n                this.handleMerge(steps);\r\n                break;\r\n            case 1:\r\n                rects2 = this.state.rects.slice();\r\n                steps = heapSort(rects2);\r\n                this.handleHeap(steps);\r\n                break;\r\n            case 2:\r\n                rects2 = this.state.rects.slice();\r\n                steps = quickSortRecursive(rects2);\r\n                this.handleQuick(steps);\r\n                break;\r\n            default:\r\n        }\r\n\r\n\r\n    }\r\n\r\n    handleQuick = async (steps) =>{\r\n        this.setState({isRunning: true});\r\n        let prevRect = this.state.rects;\r\n        for (let j = 0; j < this.state.count; j++) {\r\n            prevRect[j] = {...prevRect[j], isLeft: false,isSorting: false,isRight:false,isRange:false,isSorted: false};\r\n        }\r\n        this.setState({rects: prevRect});\r\n        let hasChanged = -1;\r\n        let changed;\r\n        for(let i=0;i<steps.length;i++){\r\n            let step = steps[i];\r\n            if( hasChanged!==-1 ){\r\n                let {left,right} = changed;\r\n                prevRect[left] = {...prevRect[left], isLeft: false,isSorting: false,isRight:false,isRange:false};\r\n                prevRect[right] = {...prevRect[right], isLeft: false,isSorting: false,isRight:false,isRange:false};\r\n            }\r\n            if( step.changedRange ){\r\n                await sleep(this.state.speed);await sleep(this.state.speed);await sleep(this.state.speed);await sleep(this.state.speed);\r\n                let {left,right} = step;\r\n                for (let j = 0; j < this.state.count; j++) {\r\n                    prevRect[j] = {...prevRect[j], isLeft: false,isSorting: false,isRight:false,isRange:false};\r\n                }\r\n                for (let j = left; j <=right; j++) {\r\n                    prevRect[j] = {...prevRect[j], isLeft: false,isSorting: false,isRight:true,isRange:true};\r\n                }\r\n                this.setState({rects: prevRect});\r\n                await sleep(this.state.speed);await sleep(this.state.speed);await sleep(this.state.speed);await sleep(this.state.speed);\r\n                for (let j = 0; j < this.state.count; j++) {\r\n                    prevRect[j] = {...prevRect[j], isLeft: false,isSorting: false,isRight:false};\r\n                }\r\n            }else if(step.swap){\r\n                let {left,right} = step;\r\n                prevRect[left] = {...prevRect[left], isLeft: false,isSorting: true,isRight:false,isRange:false};\r\n                prevRect[right] = {...prevRect[right], isLeft: true,isSorting: false,isRight:false,isRange:false};\r\n                let temp = prevRect[left];\r\n                prevRect[left] = prevRect[right];\r\n                prevRect[right] = temp;\r\n                hasChanged = 1;\r\n                changed = step;\r\n            }\r\n            this.setState({rects: prevRect});\r\n            await sleep(this.state.speed);\r\n            if (i === steps.length - 1) {\r\n                for (let j = 0; j < this.state.count; j++) {\r\n                    prevRect[j] = {...prevRect[j], isLeft: false,isSorting: false,isRight:false,isSorted: false,isRange:false};\r\n                }\r\n                this.setState({rects: prevRect});\r\n                for (let j = 0; j < this.state.count; j++) {\r\n                    prevRect[j] = {...prevRect[j], isLeft: false,isSorting: false,isRight:false,isSorted: true,isRange:false};\r\n                    this.setState({rects: prevRect});\r\n                    await sleep(10);\r\n                }\r\n                this.setState({isRunning: false,rects: prevRect});\r\n            }\r\n        }\r\n    }\r\n    handleHeap = async (steps) =>{\r\n        this.setState({isRunning: true});\r\n        let prevRect = this.state.rects;\r\n        for (let j = 0; j < this.state.count; j++) {\r\n            prevRect[j] = {...prevRect[j], isLeft: false,isSorting: false,isRight:false,isRange:false,isSorted: false};\r\n        }\r\n        this.setState({rects: prevRect});\r\n\r\n        for(let i = 0;i<steps.length;i++){\r\n            let step = steps[i];\r\n            //   console.log(step);\r\n            for (let i = 0; i < this.state.count; i++) {\r\n                prevRect[i] = {...prevRect[i], isLeft: false,isSorting: false,isRight:false};\r\n            }\r\n            let {left,right,sorted} = step;\r\n            prevRect[left] = {...prevRect[left],isLeft:true};\r\n            prevRect[right] = {...prevRect[right],isRight:true};\r\n            this.setState({rects: prevRect});\r\n            await sleep(this.state.speed);\r\n            let temp = prevRect[left];\r\n            prevRect[left] = prevRect[right];\r\n            prevRect[right] = temp;\r\n            this.setState({rects: prevRect});\r\n            if( sorted ) prevRect[left] = {...prevRect[left],isSorted: true};\r\n            await sleep(this.state.speed);await sleep(this.state.speed);await sleep(this.state.speed);\r\n            if (i === steps.length - 1) {\r\n\r\n                for (let i = 0; i < this.state.count; i++) {\r\n                    prevRect[i] = {...prevRect[i], isLeft: false,isSorting: false,isRight:false,isSorted: true};\r\n                    this.setState({rects: prevRect});\r\n                    await sleep(this.state.speed);\r\n                }\r\n                this.setState({isRunning: false,rects: prevRect});\r\n            }\r\n        }\r\n    }\r\n    handleMerge = async (steps) => {\r\n        this.setState({isRunning1: true});\r\n\r\n        const {speed} = this.state;\r\n\r\n        let prevRect = this.state.rects;\r\n        for (let j = 0; j < this.state.count; j++) {\r\n            prevRect[j] = {...prevRect[j], isLeft: false,isSorting: false,isRight:false,isRange:false,isSorted: false};\r\n        }\r\n        this.setState({rects: prevRect});\r\n        await sleep(this.state.speed);\r\n      //  console.log(\"steps \", steps.length);\r\n        for (let ii = 0; ii < steps.length; ii++) {\r\n            let step = steps[ii];\r\n            for (let i = 0; i < this.state.count; i++) {\r\n                prevRect[i] = {...prevRect[i], isLeft: false,isSorting: false,isRight:false};\r\n            }\r\n           // console.log(step.left,\" \",step.mid,\" \",step.right);\r\n            for (let i = step.left; i <= step.mid; i++) {\r\n                prevRect[i] = {...prevRect[i], isLeft: true,isSorting: false};\r\n            }\r\n            for (let i = step.mid + 1; i <= step.right; i++) {\r\n                prevRect[i] = {...prevRect[i], isRight: true,isLeft:false,isSorting: false};\r\n            }\r\n            this.setState({rects: prevRect});\r\n            await sleep(this.state.speed);await sleep(this.state.speed);await sleep(this.state.speed);\r\n          //  console.log(step);\r\n            for(let i= step.left;i<=step.right;i++){\r\n                prevRect[i] = {...prevRect[i],width:step.val[i-step.left].width,isSorting: true };\r\n                this.setState({rects: prevRect});\r\n                await sleep(this.state.speed);\r\n            }\r\n\r\n            if (ii === steps.length - 1) {\r\n\r\n                for (let i = 0; i < this.state.count; i++) {\r\n                    prevRect[i] = {...prevRect[i], isLeft: false,isSorting: false,isRight:false,isSorted: true};\r\n                    this.setState({rects: prevRect});\r\n                    await sleep(this.state.speed);\r\n                }\r\n                this.setState({isRunning: false});\r\n            }\r\n\r\n            this.setState({rects: prevRect});\r\n            await sleep(this.state.speed);\r\n            prevRect = this.state.rects;\r\n          /*  for (let i = 0; i < this.state.count; i++) {\r\n                prevRect[i] = {...prevRect[i], isLeft: false,isSorting: false,isRight:false,isSorted: false};\r\n            }*/\r\n            this.setState({rects: prevRect});\r\n        }\r\n    }\r\n\r\n}\r\n\r\nfunction sleep(ms) {\r\n    return new Promise(resolve => setTimeout(resolve, ms));\r\n}\r\n\r\nconst getInitialRects = (tot) => {\r\n    const rects = [];\r\n    for (let i = 0; i < tot; i++) {\r\n        rects.push(getRect());\r\n    }\r\n    return rects;\r\n}\r\nconst getRect = () => {\r\n    return {\r\n        width: Math.floor(Math.random() * 200) + 50,\r\n        isSorted: false,\r\n        isSorting: false,\r\n        isLeft: false,\r\n        isRight: false\r\n    }\r\n}\r\n\r\nexport default RecursiveSort;","import React, {Component} from 'react';\r\n\r\nimport {HashRouter as Router, Switch, Route} from 'react-router-dom';\r\nimport Pathfinder from \"./pathfinderComponents/pathfinder\";\r\nimport Home from \"./homeComponents/home\";\r\nimport Seive from \"./primeComponents/seive\";\r\nimport Sort from \"./sortComponents/sort\";\r\nimport BinarySearch from './binarySearchComponent/binarySearch'\r\nimport RecursiveSort from \"./recursiveSortComponents/recursiveSort\";\r\n\r\n\r\n\r\n\r\nclass App extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n    componentDidMount() {\r\n        // console.log(window.innerHeight,\"  \",window.innerWidth);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Router basename='/'>\r\n                <Switch>\r\n                    <Route path='/pathfinder'  component={Pathfinder}/>\r\n                    <Route path='/prime' component={Seive}/>\r\n                    <Route path='/sort' component={Sort}/>\r\n                    <Route path='/binarysearch' component={BinarySearch}/>\r\n                    <Route path='/recursivesort' component={RecursiveSort}/>\r\n                    <Route path='/' component={Home}/>\r\n\r\n                </Switch>\r\n            </Router>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'fontsource-roboto';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}